{"version":3,"sources":["modules/login/LoginContainerStyle.module.css","modules/transaction/components/addTransactionModal/AddTransactionStyle.module.css","layout/sideBar/SideBarStyle.module.css","modules/login/actionTypes.tsx","axiosConfig.ts","modules/transaction/service/TransactionService.tsx","helpers/axiosRoutes.ts/transactionRoutes.ts","helpers/axiosRoutes.ts/userRoutes.ts","models/Transaction.ts","models/Clendar.ts","modules/login/actions/usersActions.tsx","helpers/AuthProvider.tsx","helpers/LanguageConsts.ts","layout/accountMenu/AccountMenu.tsx","helpers/TransactionHelpers.ts","modules/transaction/actionTypes.tsx","helpers/userSelectors.ts","layout/header/Header.tsx","layout/sideBar/SideBar.tsx","modules/transaction/actions/transactionActions.tsx","modules/transaction/components/addTransactionModal/form/components/SelectInputs.tsx","modules/transaction/components/addTransactionModal/form/components/FeesInput.tsx","modules/transaction/components/addTransactionModal/form/components/AmountInput.tsx","helpers/Validation.tsx","helpers/Regex.ts","modules/transaction/components/addTransactionModal/form/Form.tsx","modules/transaction/components/addTransactionModal/AddTransactionModal.tsx","helpers/transactionSelectors.ts","layout/addTranasctionButton/AddTransactionButton.tsx","modules/transaction/total/TotalContainer.tsx","pages/homePage/HomePage.tsx","modules/login/components/LoginForm.tsx","modules/login/components/RegistrationForm.tsx","modules/login/components/SocialNetworks.tsx","modules/login/LoginContainer.tsx","pages/loginPage/LoginPage.tsx","layout/navBar/components/ChangeDate.tsx","layout/navBar/NavBar.tsx","modules/transaction/components/InfoTableHead/InfoTableHead.tsx","modules/transaction/weeklyContainer/components/WeeklyTableRow.tsx","helpers/MomentHelpers.ts","modules/transaction/weeklyContainer/WeeklyContainer.tsx","pages/transactionPages/WeeklyPage.tsx","modules/transaction/dailyContainer/components/dailyTableRow/DailyTableRow.tsx","modules/transaction/dailyContainer/components/dailyTableHeader/DailyTableHeader.tsx","modules/transaction/dailyContainer/DailyContainer.tsx","pages/transactionPages/DailyPage.tsx","modules/transaction/yearlyContainer/components/YearlyTableRow.tsx","modules/transaction/yearlyContainer/YearlyContainer.tsx","pages/transactionPages/YearlyPage.tsx","modules/transaction/monthlyContainer/Calendar/CalendarDate.tsx","modules/transaction/monthlyContainer/Calendar/Calendar.tsx","modules/transaction/monthlyContainer/components/DailyInfoTableRow.tsx","modules/transaction/monthlyContainer/components/DailyTransactions.tsx","modules/transaction/monthlyContainer/MonthlyContainer.tsx","pages/transactionPages/MonthlyPage.tsx","modules/stats/components/StatsForm.tsx","modules/stats/service/StatsService.tsx","helpers/axiosRoutes.ts/statRoutes.ts","helpers/StatHelper.ts","modules/stats/weeklyContainer/WeeklyContainer.tsx","pages/statsPage/WeeklyPage.tsx","modules/stats/periodContainer/DailyContainer.tsx","pages/statsPage/PeriodPage.tsx","modules/stats/yearlyContainer/YearlyContainer.tsx","pages/statsPage/YearlyPage.tsx","modules/stats/monthlyContainer/MonthlyContainer.tsx","pages/statsPage/MonthlyPage.tsx","modules/export/service/ExportService.ts","helpers/axiosRoutes.ts/exportRoutes.ts","modules/export/ExportContainer.tsx","pages/exportPage/ExportPage.tsx","routes.tsx","App.tsx","reportWebVitals.ts","modules/login/reducer/userReducer.tsx","modules/transaction/reducers/transactionReducer.tsx","store/reducers/index.tsx","store/store.tsx","index.tsx","modules/export/ExportStyle.module.css","modules/transaction/monthlyContainer/MonthlyStyle.module.css","layout/header/HeaderStyle.module.css","modules/transaction/dailyContainer/DailyStyle.module.css","modules/transaction/weeklyContainer/WeeklyStyle.module.css","modules/transaction/yearlyContainer/YearlyStyle.module.css","modules/transaction/total/TotalStyle.module.css","modules/transaction/components/InfoTableHead/InfoTableHeadStyle.module.css"],"names":["module","exports","ActionTypes","instance","axios","create","baseURL","config","headers","Authorization","localStorage","getItem","createTransactionRequest","data","a","axiosConfig","post","getSpecificDatePeriod","from","to","get","moment","toISOString","getYearlyOrWeekly","editTransaction","selectedDayId","transactionId","put","deleteTransaction","getUserByJWToken","getAccounts","TransactionTypes","TransactionPage","SelectInputTitle","DaysOfWeek","UnitOfTime","signIn","user","type","SIGN_IN","payload","saveUser","SAVE_USER","setAccounts","accounts","SET_ACCOUNTS","AuthProvider","children","useState","isLoading","setIsLoading","dispatch","useDispatch","getUser","response","removeItem","Error","message","useEffect","window","location","pathname","languageWords","EMAIL","USERNAME","PASSWORD","CONFIRM_PASSWORD","SIGN_UP","TRANSACTIONS","TRANSACTION","STATS","EXPORT","ACCOUNT","ACCOUNTS","DAILY","WEEKLY","MONTHLY","YEARLY","PERIOD","SETTINGS","PROFILE","EXIT","PLEASE_SELECT_AN_ACCOUNT","PLEASE_SELECT_FROM","PLEASE_SELECT_A_CATEGORY","PLEASE_SELECT_TO","PLEASE_ADD_AN_AMOUNT","THE_AMOUNT_IS_TOO_MUCH","FEES_CAN_NOT_BE_GREATER","PLEASE_ENTER_VALID_EMAIL","PLEASE_ENTER_VALID_USERNAME","NO_MATCHING_PASSWORDS","PLEASE_ENTER_VALID_PASSWORD","NO_DATA_AVAILABLE","AccountMenu","className","classes","dropdown_content","aria-labelledby","href","onClick","icon","faSignOutAlt","isTypeTransfer","toLowerCase","TRANSFER","isTransactionContainer","includes","isSelectedTitle","path","isTransactionTypeIncome","amount","INCOME","toFixed","isTransactionTypeExpense","EXPENSE","getHeaderTitle","toLocaleUpperCase","getTransaction","transactionEvent","transferId","date","account","category","fees","note","description","events","currency","CURRENCY","Moment","parseFloat","createdAt","startOf","DATE","getUsername","createSelector","state","userReducer","email","username","getUserAccounts","NavBar","incomeCategories","expenseCategories","useSelector","container","page_title","data-bs-toggle","data-bs-placement","title","role","user_content","id","aria-expanded","faUser","user_email","caret_down","faCaretDown","SideBar","isSideBarOpen","setIsSideBarOpen","closeSideBar","useCallback","useLocation","wrapper_sideBar","wrapper_sideBar_back","sidebar_header","content","title_select","faHome","faBook","faChartBar","faFileDownload","select_menu_icon","menu_icon_container","button_open_sidebar","button_close_sidebar","faChevronLeft","faChevronRight","transactionInputChange","event","TRANSACTION_INPUT_CHANGE","name","target","value","setTransaction","SET_TRANSACTION","setDate","SET_DATE","setIsTransactionOpen","SET_IS_TRANSACTION_OPEN","SelectInput","handleInputChange","options","transactionType","selectValue","input","onChange","map","option","FeesInput","setIsFeesOpen","transaction","isFeesOpen","closeFees","input_container","amount_container","AmountInput","setFeesOpen","validateTransaction","userAccounts","errors","accountsName","_id","Object","keys","accountsValue","values","total","forEach","element","index","charAt","validateLogin","isLogin","isValidEmail","RegExp","password","confirmPassword","test","length","match","errorMsg","error","error_msg","Form","categoriesIncome","categoriesExpense","handleSetDate","toDate","ExampleCustomInput","forwardRef","ref","selected","dateFormat","showTimeSelect","timeFormat","timeIntervals","timeCaption","customInput","React","createElement","FROM","TO","CATEGORY","filter","AddTransactionModal","handleSave","handleOpenTransaction","isEditTransactionOpen","handleOpenEdit","handleDelete","handleOpen","handleSetIncomeType","handleSetExpenseType","handleSetTransferType","handleDeleteTransaction","transactionEventId","onHiddenBsModal","BootstrapModal","show","myModalDom","document","getElementById","addEventListener","removeEventListener","validationErrors","isValid","Boolean","tabIndex","aria-hidden","close_button","data-bs-dismiss","aria-label","faTimesCircle","selectedTabClassName","selected_tab","selectedIndex","ChooseCategory","tab","input_description","placeholder","buttons_content","save_button","delete_button","getTransactionState","transactionReducer","getTransactionDate","AddTransactionButton","setErrors","stateTransaction","clearState","eventId","isTransactionOpen","TotalContainer","account_container","toUpperCase","HomePage","LoginForm","Submit","handleInput","login_content","htmlFor","login_label","login_button","RegistrationForm","SocialNetworks","social_container","social_icon","faFacebookF","faGoogle","faTwitter","faApple","LoginContainer","setUser","setIsLogin","e","handleLogin","loggedUser","errorMSG","handleRegister","newUser","signUp","alert","changeTab","login_form","tab_list","LoginPage","ChangeDate","handlePreviousYearOrMonth","HANDLE_PREVIOUS_YEAR","HANDLE_NEXT_WEEK","HANDLE_PREVIOUS_MONTH","handleNextYearOrMonth","HANDLE_NEXT_YEAR","HANDLE_PREVIOUS_WEEK","HANDLE_NEXT_MONTH","faCaretLeft","set","format","faCaretRight","NavBarMenu","InfoTableHead","sumIncome","sumExpense","income","expense","WeeklyTableRow","week","ISO_WEEK","diff","WEEK","endOf","selected_date","MONTH","DAY","YEAR","firstDateOfTheMonth","lastDateOfTheMonth","firstDateOfTheYear","lastDateOfTheYear","firstDateOfFirstWeekOfTheMonth","lastDateOfFirstWeekOfTheMonth","firstDateOfLastWeekOfTheMonth","lastDateOfLastWeekOfTheMonth","isTheSameDate","calendarDate","transactionDate","WeeklyContainer","weeksInMonth","setWeeks","setSumIncome","setSumExpense","getWeeks","weeks","push","i","months","reverse","toString","WeeklyPage","DailyTableRow","handleSelectEvent","selectEvent","style","borderTop","padding","onKeyDown","DailyTableHeader","date_content","date_year","date_day_select","date_day","DailyContainer","transactions","setTransactions","getTransactions","transactioEvent","Event","sort","b","table_container","DailyPage","YearlyTableRow","month","history","useHistory","openMonthContainer","month_selected","YearlyContainer","monthsInYear","setMonthsInYear","setMonths","year","newMonths","lastMonth","getYear","YearlyPage","CalendarDate","handleOpenInfoModal","openInfoModal","calendar_date_box_container","calendar_date_box_container_other_month","current_date","calendar_date","calendar_date_income","calendar_date_expense","calendar_date_total","Calendar","calendarDates","MONDAY","THUESDAY","WEDNESDAY","THURSDAY","FRIDAY","SATURDAY","SUNDAY","days","day","DailyInfoTableRow","openEdit","DailyTransactions","selectedTransaction","table_scroll","scope","MonthlyContainer","setSelectedTransaction","setCalendarDates","transactionItem","find","setFirstWeek","lastDateOfPreviusMonth","calendar","setLastWeek","setCalendar","concat","selectedDay","selectedTransactionId","SET_ACCOUNT","setAccount","MonthlyPage","StatsForm","stats","isIncome","handleSelect","sumValue","stat","entry","color","fontFamily","fontSize","width","radius","PieChart","defaultProps","lineWidth","segmentsStyle","transition","cursor","segmentsShift","animate","label","dataEntry","percentage","labelPosition","labelStyle","fill","pointerEvents","_","undefined","onMouseEnter","onMouseLeave","backgroundColor","slice","getStatsInSpecificDatePeriod","colors","setStatColor","statsNewColor","incomeStats","setIncomeStats","expenseStats","setExpenseStats","selectedIncome","setSelectedIncome","selectedExpense","setSelectedExpense","getMonthlyStats","getDailyStats","PeriodPage","getYearlyStats","getExportApiData","selectedAccounts","animatedComponents","makeAnimated","ExportContainer","selectedType","setSelectedType","setSelectedAccounts","setFrom","setTo","setError","exportData","setExportData","getExportData","handleSetFromDate","handleSetToDate","calendar_icon","faCalendarDay","customControlStyles","height","minHeight","borderRadius","border","customPlaceholderStyle","customOptionStyle","customMenuStyle","customSingleValueStyle","customIndicator","selectStyle","control","provided","indicatorSeparator","visible","fontWeight","isSelected","menu","singleValue","noOptionsMessage","clearIndicator","dropdownIndicator","styles","selectType","components","isMulti","hideSelectedOptions","closeMenuOnSelect","handleAccountSelect","ValueContainer","getValue","props","hasValue","nbValues","error_accout","wrapperClassName","minDate","export_disabled_button","export_button","filename","ExportPage","Routes","exact","component","MonthlyStatsPage","YearlyStatsPage","WeeklyStatsPage","PeriodStatsPage","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","categories","updatedAt","token","loading","signInStateChange","setItem","saveUserInState","setAcc","changeInput","action","changeNextMonth","nextMonth","add","changePreviousMonth","previousMonth","changeNextYear","nextYear","changePreviousYear","previousYear","changeDate","setTransactionIsOpen","combineReducers","getDate","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a5c779a6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LoginContainerStyle_container__3IJE0\",\"login_form\":\"LoginContainerStyle_login_form__1xRDn\",\"tab_list\":\"LoginContainerStyle_tab_list__3v1mE\",\"tab\":\"LoginContainerStyle_tab__SBALO\",\"selected_tab\":\"LoginContainerStyle_selected_tab__1ij4l\",\"login_content\":\"LoginContainerStyle_login_content__3qEzj\",\"input\":\"LoginContainerStyle_input__vWW6L\",\"login_button\":\"LoginContainerStyle_login_button__Vi9LA\",\"login_label\":\"LoginContainerStyle_login_label__1FwEj\",\"social_container\":\"LoginContainerStyle_social_container__17UOV\",\"social_icon\":\"LoginContainerStyle_social_icon__3rONY\",\"error_msg\":\"LoginContainerStyle_error_msg__2qUjD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"AddTransactionStyle_content__3HpPw\",\"content_titles\":\"AddTransactionStyle_content_titles__bl1lw\",\"title\":\"AddTransactionStyle_title__2x6Nm\",\"amount_container\":\"AddTransactionStyle_amount_container__3vd_s\",\"fees\":\"AddTransactionStyle_fees__3D2rL\",\"input\":\"AddTransactionStyle_input__1Nz3d\",\"description\":\"AddTransactionStyle_description__2e2is\",\"buttons_content\":\"AddTransactionStyle_buttons_content__1IP5Z\",\"save_button\":\"AddTransactionStyle_save_button__2SREW\",\"delete_button\":\"AddTransactionStyle_delete_button__4HxLD\",\"error_msg\":\"AddTransactionStyle_error_msg__1TtZP\",\"tab_list\":\"AddTransactionStyle_tab_list__jp38j\",\"tab\":\"AddTransactionStyle_tab__1-bS0\",\"selected_tab\":\"AddTransactionStyle_selected_tab__1o-HN\",\"close_button\":\"AddTransactionStyle_close_button__2HkcX\",\"input_description\":\"AddTransactionStyle_input_description__3fXfN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper_sideBar\":\"SideBarStyle_wrapper_sideBar__1ZdZv\",\"wrapper_sideBar_back\":\"SideBarStyle_wrapper_sideBar_back__3WgjW\",\"sidebar_header\":\"SideBarStyle_sidebar_header__gEdI8\",\"button_close_sidebar\":\"SideBarStyle_button_close_sidebar__8L_LY\",\"button_open_sidebar\":\"SideBarStyle_button_open_sidebar__1xs5x\",\"open_menu\":\"SideBarStyle_open_menu__2Wgbx\",\"content\":\"SideBarStyle_content__1RP3J\",\"title\":\"SideBarStyle_title__3yhWD\",\"title_select\":\"SideBarStyle_title_select__1aoV-\",\"menu_icon_container\":\"SideBarStyle_menu_icon_container__-V0aq\",\"select_menu_icon\":\"SideBarStyle_select_menu_icon__3tzK3\"};","export enum ActionTypes {\r\n  SIGN_IN = 'SIGN_IN',\r\n  SIGN_UP = 'SIGN_UP',\r\n  SAVE_USER = 'SAVE_USER',\r\n  SET_ACCOUNTS = 'SET_ACCOUNTS',\r\n  SET_ACCOUNT = 'SET_ACCOUNT'\r\n}\r\n\r\nexport default ActionTypes;\r\n","import axios from 'axios';\r\n// Next we make an 'instance' of it\r\nconst instance = axios.create({\r\n  // .. where we make our configurations\r\n  baseURL: ''\r\n});\r\n\r\n// Where you would set stuff like your 'Authorization' header, etc ... TODO\r\n// instance.defaults.headers.Authorization = `Bearer ${localStorage.getItem('jwt')}`;\r\n\r\n// Also add/ configure interceptors && all the other cool stuff TODO\r\n\r\n// instance.interceptors.request... TODO\r\n\r\nexport default instance;\r\n","import {AxiosResponse} from 'axios';\r\nimport moment from 'moment';\r\nimport axiosConfig from '../../../axiosConfig';\r\nimport {\r\n  CREATE_TRANSACTION,\r\n  DELETE_TRANSACTION_EVENT,\r\n  EDIT_TRANSACTION_EVENT,\r\n  GET_YERALY_OR_WEEKLY,\r\n  SPECIFIC_DATE_PERIOD,\r\n  GET_USER_ACCOUNTS\r\n} from '../../../helpers/axiosRoutes.ts/transactionRoutes';\r\nimport GET_LOGGED_USER from '../../../helpers/axiosRoutes.ts/userRoutes';\r\nimport {ServiceTransaction, ServiceTransactionEvent} from '../../../models/Transaction';\r\n\r\nconst config = {\r\n  headers: {\r\n    Authorization: `Bearer ${localStorage.getItem('jwt')}`\r\n  }\r\n};\r\n\r\nexport const createTransactionRequest = async (data: ServiceTransaction): Promise<AxiosResponse> => {\r\n  return axiosConfig.post(`${CREATE_TRANSACTION}`, data, config);\r\n};\r\n\r\nexport const getSpecificDatePeriod = async (from: Date, to: Date): Promise<AxiosResponse> => {\r\n  return axiosConfig.get(`${SPECIFIC_DATE_PERIOD}/${moment(from).toISOString()}/${moment(to).toISOString()}`, config);\r\n};\r\n\r\nexport const getYearlyOrWeekly = async (\r\n  data: {\r\n    from: Date;\r\n    to: Date;\r\n    expense: number;\r\n    income: number;\r\n  }[]\r\n): Promise<AxiosResponse> => {\r\n  return axiosConfig.post(`${GET_YERALY_OR_WEEKLY}`, data, config);\r\n};\r\nexport const editTransaction = async (\r\n  selectedDayId: string,\r\n  transactionId: string,\r\n  data: ServiceTransactionEvent\r\n): Promise<AxiosResponse> => {\r\n  return axiosConfig.put(`${EDIT_TRANSACTION_EVENT}/${selectedDayId}/${transactionId}`, data, config);\r\n};\r\nexport const deleteTransaction = async (selectedDayId: string, transactionId: string): Promise<AxiosResponse> => {\r\n  return axiosConfig.put(`${DELETE_TRANSACTION_EVENT}/${selectedDayId}/${transactionId}`, {}, config);\r\n};\r\nexport const getUserByJWToken = async (): Promise<AxiosResponse> => {\r\n  return axiosConfig.get(`${GET_LOGGED_USER}`, config);\r\n};\r\nexport const getAccounts = async (): Promise<AxiosResponse> => {\r\n  return axiosConfig.get(`${GET_USER_ACCOUNTS}`, config);\r\n};\r\n","export const SPECIFIC_DATE_PERIOD = '/transaction/specificDatePeriod';\r\nexport const GET_YERALY_OR_WEEKLY = '/transaction/getYearlyOrWeekly';\r\nexport const CREATE_TRANSACTION = '/transaction/create';\r\nexport const EDIT_TRANSACTION_EVENT = '/transaction/event/edit';\r\nexport const DELETE_TRANSACTION_EVENT = '/transaction/event/delete';\r\nexport const GET_USER_ACCOUNTS = '/moneyAccounts';\r\n","export const GET_LOGGED_USER = '/user/logged';\r\nexport const SIGN_IN = '/signIn';\r\nexport const SIGN_UP = '/signUp';\r\nexport default GET_LOGGED_USER;\r\n","import {Moment} from 'moment';\r\nimport {ActionTypes} from '../modules/transaction/actionTypes';\r\n\r\nexport interface Transaction {\r\n  _id: string;\r\n  createdAt: Date;\r\n  events: TransactionEvent[];\r\n  income: number;\r\n  expense: number;\r\n}\r\nexport interface TransactionEvent {\r\n  _id: string;\r\n  type: string;\r\n  date: Date;\r\n  account?: string;\r\n  from?: string;\r\n  to?: string;\r\n  fees?: string;\r\n  category?: string;\r\n  amount: string;\r\n  note: string;\r\n  description: string;\r\n  transferId?: string;\r\n  transactionId: string;\r\n}\r\nexport interface TransactionWithAmountNumber {\r\n  _id: string;\r\n  createdAt: Date;\r\n  events: TransactionEventWithAmountNumber[];\r\n  income: number;\r\n  expense: number;\r\n}\r\nexport interface TransactionEventWithAmountNumber {\r\n  _id: string;\r\n  type: string;\r\n  date: Date;\r\n  account?: string;\r\n  from?: string;\r\n  to?: string;\r\n  currency: string;\r\n  category?: string;\r\n  amount: number;\r\n  fees: number;\r\n  note: string;\r\n  description: string;\r\n}\r\nexport interface ServiceTransaction {\r\n  createdAt: Moment;\r\n  events: ServiceTransactionEvent[];\r\n}\r\nexport interface ServiceTransactionEvent {\r\n  type: string;\r\n  date: Moment;\r\n  currency: string;\r\n  account: string | undefined;\r\n  from: string | undefined;\r\n  to: string | undefined;\r\n  category: string | undefined;\r\n  amount: number;\r\n  fees: number;\r\n  note: string;\r\n  description: string;\r\n  transferId: string | undefined;\r\n}\r\n\r\nexport type TransactionReducer = {\r\n  date: Date;\r\n  transactionEvent: TransactionEvent;\r\n  isTransactionOpen: boolean;\r\n};\r\nexport interface Month {\r\n  from: Date;\r\n  to: Date;\r\n  expense: number;\r\n  income: number;\r\n}\r\n\r\nexport interface MonthlyContainer {\r\n  isAddTransactionOpen: boolean;\r\n  isInfoTransactionOpen: boolean;\r\n  isEditTransactionOpen: boolean;\r\n  isTransfer: boolean;\r\n  date: Date;\r\n  calendarDates: {\r\n    date: Date;\r\n  }[];\r\n}\r\nexport interface DailyContainerInterface {\r\n  sumIncome: number;\r\n  sumExpense: number;\r\n  selectedEvent: TransactionEvent;\r\n  transaction: TransactionWithAmountNumber;\r\n}\r\nexport type CalendarDates = {\r\n  date: Date;\r\n};\r\nexport enum TransactionTypes {\r\n  TRANSFER = 'transfer',\r\n  INCOME = 'income',\r\n  EXPENSE = 'expense',\r\n  CURRENCY = 'BGN'\r\n}\r\nexport enum TransactionPage {\r\n  TRANSACTION = 'transaction',\r\n  STATS = 'stats',\r\n  EXPORT = 'export',\r\n  ACCOUNTS = 'accounts'\r\n}\r\n\r\nexport enum SelectInputTitle {\r\n  FROM = 'from',\r\n  TO = 'to',\r\n  CATEGORY = 'category',\r\n  ACCOUNT = 'account'\r\n}\r\n\r\nexport interface ChangeInputAction {\r\n  type: ActionTypes;\r\n  payload: {\r\n    name: string;\r\n    value: string | number | Date;\r\n  };\r\n}\r\nexport interface SetTransactionAction {\r\n  type: ActionTypes;\r\n  payload: TransactionEvent;\r\n}\r\nexport interface SetDateAction {\r\n  type: ActionTypes;\r\n  payload: Date;\r\n}\r\n","export enum DaysOfWeek {\r\n  MONDAY = 'M',\r\n  THUESDAY = 'T',\r\n  WEDNESDAY = 'W',\r\n  THURSDAY = 'Th',\r\n  FRIDAY = 'F',\r\n  SATURDAY = 'Sa',\r\n  SUNDAY = 'Su'\r\n}\r\nexport enum UnitOfTime {\r\n  DATE = 'date',\r\n  WEEK = 'week',\r\n  MONTH = 'month',\r\n  YEAR = 'year',\r\n  DAYS = 'days',\r\n  DAY = 'day',\r\n  ISO_WEEK = 'isoWeek'\r\n}\r\n","import {TransactionEvent} from '../../../models/Transaction';\r\nimport {SignInUser, UserAccounts, UserSetAccount, UserSetAccounts, UserSignInAction} from '../../../models/User';\r\nimport {ActionTypes} from '../actionTypes';\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const signIn = (user: SignInUser): UserSignInAction => ({\r\n  type: ActionTypes.SIGN_IN,\r\n  payload: user\r\n});\r\n\r\nexport const saveUser = (user: SignInUser): UserSignInAction => ({\r\n  type: ActionTypes.SAVE_USER,\r\n  payload: user\r\n});\r\nexport const setAccounts = (accounts: UserAccounts): UserSetAccounts => ({\r\n  type: ActionTypes.SET_ACCOUNTS,\r\n  payload: accounts\r\n});\r\nexport const setAccount = (event: TransactionEvent): UserSetAccount => ({\r\n  type: ActionTypes.SET_ACCOUNT,\r\n  payload: event\r\n});\r\n","import React, {ReactNode, useEffect, useState} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport {getUserByJWToken} from '../modules/transaction/service/TransactionService';\r\nimport {saveUser} from '../modules/login/actions/usersActions';\r\n\r\ntype Props = {\r\n  children: ReactNode;\r\n};\r\nconst AuthProvider = ({children}: Props): JSX.Element => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const getUser = async () => {\r\n    try {\r\n      const response = await getUserByJWToken();\r\n\r\n      const {data} = response;\r\n\r\n      if (!data.user) {\r\n        localStorage.removeItem('jwt');\r\n        setIsLoading(false);\r\n      } else {\r\n        dispatch(saveUser(data));\r\n        setIsLoading(false);\r\n      }\r\n    } catch (error) {\r\n      localStorage.removeItem('jwt');\r\n      setIsLoading(false);\r\n      throw new Error(error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n  });\r\n\r\n  if (isLoading) {\r\n    return <div />;\r\n  }\r\n  if (!localStorage.getItem('jwt') && !(window.location.pathname === '/authentication')) {\r\n    window.location.pathname = '/authentication';\r\n    return <div />;\r\n  }\r\n\r\n  return <>{children}</>;\r\n};\r\nexport default AuthProvider;\r\n","export const languageWords = {\r\n  EMAIL: 'Email',\r\n  USERNAME: 'Username',\r\n  PASSWORD: 'Password',\r\n  CONFIRM_PASSWORD: 'Confirm password',\r\n  SIGN_UP: 'Sign up',\r\n  SIGN_IN: 'Sign in',\r\n  TRANSACTIONS: 'Transactions',\r\n  TRANSACTION: 'Transaction',\r\n  STATS: 'Stats',\r\n  EXPORT: 'Export',\r\n  ACCOUNT: 'Account',\r\n  ACCOUNTS: 'Accounts',\r\n  DAILY: 'Daily',\r\n  WEEKLY: 'Weekly',\r\n  MONTHLY: 'Monthly',\r\n  YEARLY: 'Yearly',\r\n  PERIOD: 'Period',\r\n  SETTINGS: 'Settings',\r\n  PROFILE: 'Profile',\r\n  EXIT: 'Exit',\r\n  PLEASE_SELECT_AN_ACCOUNT: 'Please select an account',\r\n  PLEASE_SELECT_FROM: 'Please select from',\r\n  PLEASE_SELECT_A_CATEGORY: 'Please select a category',\r\n  PLEASE_SELECT_TO: 'Please select to',\r\n  PLEASE_ADD_AN_AMOUNT: 'Please add an amount',\r\n  THE_AMOUNT_IS_TOO_MUCH: `The balance of `,\r\n  FEES_CAN_NOT_BE_GREATER: \"Fees can't be greater then amount\",\r\n  PLEASE_ENTER_VALID_EMAIL: 'Please enter a valid email.',\r\n  PLEASE_ENTER_VALID_USERNAME: 'Please enter a valid username.',\r\n  NO_MATCHING_PASSWORDS: 'The password does not match. ',\r\n  PLEASE_ENTER_VALID_PASSWORD: 'Please enter 6-20 characters [A-Z, a-z, 0-9 only].',\r\n  NO_DATA_AVAILABLE: 'No data available. '\r\n};\r\n\r\nexport default languageWords;\r\n","import React from 'react';\r\n\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faSignOutAlt} from '@fortawesome/free-solid-svg-icons';\r\nimport classes from '../header/HeaderStyle.module.css';\r\nimport languageWords from '../../helpers/LanguageConsts';\r\n\r\nconst AccountMenu = (): JSX.Element => {\r\n  const handleExit = () => {\r\n    localStorage.removeItem('jwt');\r\n    window.location.pathname = '/authentication';\r\n  };\r\n  return (\r\n    <div className={`dropdown-menu ${classes.dropdown_content}`} aria-labelledby=\"dropdownMenuButton1\">\r\n      {/* <Link to=\"/\">\r\n        <FontAwesomeIcon icon={faUser} />\r\n        <div>{languageWords.PROFILE}</div>\r\n      </Link>\r\n\r\n      <Link to=\"/\">\r\n        <FontAwesomeIcon icon={faCog} />\r\n        <div> {languageWords.SETTINGS}</div>\r\n      </Link> */}\r\n\r\n      <a type=\"button\" href=\"/\" onClick={handleExit}>\r\n        <FontAwesomeIcon icon={faSignOutAlt} />\r\n        <div>{languageWords.EXIT}</div>\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountMenu;\r\n","import Moment from 'moment';\r\nimport {TransactionTypes, TransactionPage, TransactionEvent, ServiceTransaction} from '../models/Transaction';\r\nimport {UnitOfTime} from '../models/Clendar';\r\nimport languageWords from './LanguageConsts';\r\n\r\nexport const isTypeTransfer = (type: string): boolean => type.toLowerCase() === TransactionTypes.TRANSFER;\r\n\r\nexport const isTransactionContainer = (pathname: string): boolean => pathname.includes(TransactionPage.TRANSACTION);\r\n\r\nexport const isSelectedTitle = (pathname: string, path: string): boolean =>\r\n  pathname === `/transaction/${path}` || pathname === `/stats/${path}`;\r\n\r\nexport const isTransactionTypeIncome = (type: string, amount: number): string =>\r\n  type === TransactionTypes.INCOME ? (amount / 100).toFixed(2) : '0.00';\r\n\r\nexport const isTransactionTypeExpense = (type: string, amount: number): string =>\r\n  type === TransactionTypes.EXPENSE || type === TransactionTypes.TRANSFER ? (amount / 100).toFixed(2) : '0.00';\r\n\r\nexport const getHeaderTitle = (path: string): string => {\r\n  switch (true) {\r\n    case path.includes('/transaction'):\r\n      return languageWords.TRANSACTIONS.toLocaleUpperCase();\r\n    case path.includes('/stats'):\r\n      return languageWords.STATS.toLocaleUpperCase();\r\n    case path.includes('/export'):\r\n      return languageWords.EXPORT.toLocaleUpperCase();\r\n    case path.includes('/accounts'):\r\n      return languageWords.ACCOUNT.toLocaleUpperCase();\r\n    default:\r\n      return '';\r\n  }\r\n};\r\n\r\nexport const getTransaction = (transactionEvent: TransactionEvent): ServiceTransaction => {\r\n  const {type, transferId, date, account, category, from, fees, to, amount, note, description} = transactionEvent;\r\n  return {\r\n    events: [\r\n      {\r\n        type: type.toLowerCase(),\r\n        currency: TransactionTypes.CURRENCY,\r\n        transferId,\r\n        date: Moment(date),\r\n        account: isTypeTransfer(type) ? '' : account,\r\n        category: isTypeTransfer(type) ? '' : category,\r\n        from: isTypeTransfer(type) ? from : '',\r\n        fees: fees ? parseFloat(fees) * 100 : 0,\r\n        to: isTypeTransfer(type) ? to : '',\r\n        amount: parseFloat(amount) * 100,\r\n        note,\r\n        description\r\n      }\r\n    ],\r\n    createdAt: Moment(transactionEvent.date).startOf(UnitOfTime.DATE)\r\n  };\r\n};\r\n","export enum ActionTypes {\r\n  HANDLE_NEXT_WEEK = 'HANDLE_NEXT_WEEK',\r\n  HANDLE_PREVIOUS_WEEK = 'HANDLE_PREVIOUS_WEEK',\r\n  HANDLE_NEXT_MONTH = 'HANDLE_NEXT_MONTH',\r\n  HANDLE_PREVIOUS_MONTH = 'HANDLE_PREVIOUS_MONTH',\r\n  HANDLE_NEXT_YEAR = 'HANDLE_NEXT_YEAR',\r\n  HANDLE_PREVIOUS_YEAR = 'HANDLE_PREVIOUS_YEAR',\r\n  TRANSACTION_INPUT_CHANGE = 'TRANSACTION_INPUT_CHANGE',\r\n  SET_TRANSACTION = 'SET_TRANSACTION',\r\n  SET_DATE = 'SET_DATE',\r\n  SET_IS_TRANSACTION_OPEN = 'SET_IS_TRANSACTION_OPEN'\r\n}\r\n\r\nexport default ActionTypes;\r\n","import {createSelector} from '@reduxjs/toolkit';\r\nimport {UserState} from '../models/User';\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const getUserState = createSelector(\r\n  (state: UserState) => state,\r\n  ({userReducer}) => userReducer.user\r\n);\r\nexport const getUserEmail = createSelector(\r\n  (state: UserState) => state,\r\n  ({userReducer}) => userReducer.user.email\r\n);\r\nexport const getUsername = createSelector(\r\n  (state: UserState) => state,\r\n  ({userReducer}) => userReducer.user.username\r\n);\r\nexport const getUserAccounts = createSelector(\r\n  (state: UserState) => state,\r\n  ({userReducer}) => userReducer.user.accounts[0]\r\n);\r\nexport const getCategoriesIncome = createSelector(\r\n  (state: UserState) => state,\r\n  ({userReducer}) => userReducer.incomeCategories\r\n);\r\nexport const getCategoriesExpense = createSelector(\r\n  (state: UserState) => state,\r\n  ({userReducer}) => userReducer.expenseCategories\r\n);\r\n","import React from 'react';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faCaretDown, faUser} from '@fortawesome/free-solid-svg-icons';\r\nimport {useSelector} from 'react-redux';\r\nimport classes from './HeaderStyle.module.css';\r\nimport AccountMenu from '../accountMenu/AccountMenu';\r\nimport {getHeaderTitle} from '../../helpers/TransactionHelpers';\r\nimport {getUsername} from '../../helpers/userSelectors';\r\n\r\nconst NavBar = (): JSX.Element => {\r\n  const username = useSelector(getUsername);\r\n\r\n  return (\r\n    <nav className={`pe-3  ${classes.container}`}>\r\n      <div className=\"navbar navbar-expand-lg row justify-content-center align-items-center\">\r\n        <div className=\"col\" />\r\n        <div className=\"col text-center\">\r\n          <div className={`collapse navbar-collapse ${classes.page_title}`}>\r\n            {window.location.pathname === '/' ? 'Budget-Tracker' : getHeaderTitle(window.location.pathname)}\r\n          </div>\r\n        </div>\r\n        <div className=\"col d-flex justify-content-end align-items-center\">\r\n          <div className=\"dropdown\" data-bs-toggle=\"tooltip\" data-bs-placement=\"left\" title={username}>\r\n            <div\r\n              role=\"button\"\r\n              className={`dropdown-toggl ${classes.user_content}`}\r\n              id=\"dropdownMenuButton1\"\r\n              data-bs-toggle=\"dropdown\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              <FontAwesomeIcon icon={faUser} />\r\n\r\n              <div className={classes.user_email}>{username}</div>\r\n              <div className={classes.caret_down}>\r\n                <FontAwesomeIcon icon={faCaretDown} />\r\n              </div>\r\n            </div>\r\n            <AccountMenu />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\nexport default NavBar;\r\n","import React, {useCallback, useState} from 'react';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faChevronRight,\r\n  faBook,\r\n  faChartBar,\r\n  faFileDownload,\r\n  faChevronLeft,\r\n  faHome\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport {Link, useLocation} from 'react-router-dom';\r\nimport classes from './SideBarStyle.module.css';\r\nimport languageWords from '../../helpers/LanguageConsts';\r\nimport {TransactionPage} from '../../models/Transaction';\r\n\r\nconst SideBar = (): JSX.Element => {\r\n  const [isSideBarOpen, setIsSideBarOpen] = useState(false);\r\n  const closeSideBar = useCallback(() => {\r\n    setIsSideBarOpen(!isSideBarOpen);\r\n  }, [isSideBarOpen]);\r\n\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <nav className={isSideBarOpen ? classes.wrapper_sideBar : classes.wrapper_sideBar_back}>\r\n      <div>\r\n        <div className={classes.sidebar_header}>{isSideBarOpen ? 'Budget-Tracker' : 'BT'}</div>\r\n        <ul className={classes.content}>\r\n          {isSideBarOpen ? (\r\n            <>\r\n              <Link to=\"/\" className={location.pathname === '/' ? classes.title_select : classes.title}>\r\n                <FontAwesomeIcon icon={faHome} /> {languageWords.ACCOUNTS}\r\n              </Link>\r\n              <Link\r\n                to=\"/transaction/monthly\"\r\n                className={\r\n                  location.pathname.includes(TransactionPage.TRANSACTION) ? classes.title_select : classes.title\r\n                }\r\n              >\r\n                <FontAwesomeIcon icon={faBook} /> {languageWords.TRANSACTIONS}\r\n              </Link>\r\n\r\n              <Link\r\n                to=\"/stats/monthly\"\r\n                className={location.pathname.includes(TransactionPage.STATS) ? classes.title_select : classes.title}\r\n              >\r\n                <FontAwesomeIcon icon={faChartBar} /> {languageWords.STATS}\r\n              </Link>\r\n\r\n              <Link\r\n                to=\"/export\"\r\n                className={location.pathname.includes(TransactionPage.EXPORT) ? classes.title_select : classes.title}\r\n              >\r\n                <FontAwesomeIcon icon={faFileDownload} /> {languageWords.EXPORT}\r\n              </Link>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Link\r\n                to=\"/\"\r\n                className={location.pathname === '/' ? classes.select_menu_icon : classes.menu_icon_container}\r\n              >\r\n                <FontAwesomeIcon icon={faHome} />\r\n              </Link>\r\n              <Link\r\n                to=\"/transaction/monthly\"\r\n                className={\r\n                  location.pathname.includes(TransactionPage.TRANSACTION)\r\n                    ? classes.select_menu_icon\r\n                    : classes.menu_icon_container\r\n                }\r\n              >\r\n                <FontAwesomeIcon icon={faBook} />\r\n              </Link>\r\n              <Link\r\n                to=\"/stats/monthly\"\r\n                className={\r\n                  location.pathname.includes(TransactionPage.STATS)\r\n                    ? classes.select_menu_icon\r\n                    : classes.menu_icon_container\r\n                }\r\n              >\r\n                <FontAwesomeIcon icon={faChartBar} />\r\n              </Link>{' '}\r\n              <Link\r\n                to=\"/export\"\r\n                className={\r\n                  location.pathname.includes(TransactionPage.EXPORT)\r\n                    ? classes.select_menu_icon\r\n                    : classes.menu_icon_container\r\n                }\r\n              >\r\n                <FontAwesomeIcon icon={faFileDownload} />\r\n              </Link>{' '}\r\n            </>\r\n          )}\r\n        </ul>\r\n        <div className={isSideBarOpen ? classes.button_open_sidebar : classes.button_close_sidebar}>\r\n          <FontAwesomeIcon icon={isSideBarOpen ? faChevronLeft : faChevronRight} onClick={closeSideBar} />\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","import {ChangeInputAction, SetTransactionAction, TransactionEvent, SetDateAction} from '../../../models/Transaction';\r\nimport {HandleInputChange} from '../../../models/Function';\r\nimport {ActionTypes} from '../actionTypes';\r\n\r\nexport const handlePreviousWeek = (): {\r\n  type: ActionTypes;\r\n} => ({\r\n  type: ActionTypes.HANDLE_NEXT_WEEK\r\n});\r\nexport const handleNextWeek = (): {\r\n  type: ActionTypes;\r\n} => ({\r\n  type: ActionTypes.HANDLE_PREVIOUS_WEEK\r\n});\r\nexport const handleNextMonth = (): {\r\n  type: ActionTypes;\r\n} => ({\r\n  type: ActionTypes.HANDLE_NEXT_MONTH\r\n});\r\nexport const handlePreviousMonth = (): {\r\n  type: ActionTypes;\r\n} => ({\r\n  type: ActionTypes.HANDLE_PREVIOUS_MONTH\r\n});\r\nexport const handleNextYear = (): {\r\n  type: ActionTypes;\r\n} => ({\r\n  type: ActionTypes.HANDLE_NEXT_YEAR\r\n});\r\nexport const handlePreviousYear = (): {\r\n  type: ActionTypes;\r\n} => ({\r\n  type: ActionTypes.HANDLE_PREVIOUS_YEAR\r\n});\r\nexport const transactionInputChange = (event: HandleInputChange): ChangeInputAction => ({\r\n  type: ActionTypes.TRANSACTION_INPUT_CHANGE,\r\n  payload: {name: event.target.name, value: event.target.value}\r\n});\r\nexport const setTransaction = (event: TransactionEvent): SetTransactionAction => ({\r\n  type: ActionTypes.SET_TRANSACTION,\r\n  payload: event\r\n});\r\nexport const setDate = (date: Date): SetDateAction => ({\r\n  type: ActionTypes.SET_DATE,\r\n  payload: date\r\n});\r\nexport const setIsTransactionOpen = (): {\r\n  type: ActionTypes;\r\n} => ({\r\n  type: ActionTypes.SET_IS_TRANSACTION_OPEN\r\n});\r\n","import React from 'react';\r\nimport {HandleInputChange} from '../../../../../../models/Function';\r\nimport classes from '../../AddTransactionStyle.module.css';\r\n\r\ntype Props = {\r\n  handleInputChange: (event: HandleInputChange) => void;\r\n  options: string[];\r\n  transactionType: string;\r\n  selectValue: string | undefined;\r\n};\r\n\r\nconst SelectInput: React.FC<Props> = ({handleInputChange, options, transactionType, selectValue}) => {\r\n  return (\r\n    <>\r\n      <select className={classes.input} value={selectValue} onChange={handleInputChange} name={transactionType}>\r\n        {options.map((option) => (\r\n          <option value={option} key={option}>\r\n            {option}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </>\r\n  );\r\n};\r\nexport default SelectInput;\r\n","import React, {useCallback} from 'react';\r\nimport classes from '../../AddTransactionStyle.module.css';\r\nimport {TransactionEvent} from '../../../../../../models/Transaction';\r\nimport {HandleInputChange} from '../../../../../../models/Function';\r\n\r\ntype Props = {\r\n  handleInputChange: (event: HandleInputChange) => void;\r\n  setIsFeesOpen: (arg0: boolean) => void;\r\n  transaction: TransactionEvent;\r\n  isFeesOpen: boolean;\r\n};\r\n\r\nconst FeesInput: React.FC<Props> = ({handleInputChange, setIsFeesOpen, transaction, isFeesOpen}) => {\r\n  const closeFees = useCallback(() => {\r\n    handleInputChange({target: {value: '0', name: 'fees'}});\r\n    setIsFeesOpen(!isFeesOpen);\r\n  }, [handleInputChange, isFeesOpen, setIsFeesOpen]);\r\n  return (\r\n    <>\r\n      {isFeesOpen ? (\r\n        <div className={classes.input_container}>\r\n          <div className={classes.amount_container}>\r\n            <input\r\n              type=\"text\"\r\n              className={classes.input}\r\n              name=\"fees\"\r\n              value={transaction.fees}\r\n              onChange={handleInputChange}\r\n            />\r\n\r\n            <button type=\"button\" className={classes.fees} onClick={closeFees}>\r\n              X\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\nexport default FeesInput;\r\n","import React, {useCallback} from 'react';\r\nimport classes from '../../AddTransactionStyle.module.css';\r\nimport {TransactionEvent, TransactionTypes} from '../../../../../../models/Transaction';\r\nimport {HandleInputChange} from '../../../../../../models/Function';\r\n\r\ntype Props = {\r\n  handleInputChange: (event: HandleInputChange) => void;\r\n  setIsFeesOpen: (isOpen: boolean) => void;\r\n  transaction: TransactionEvent;\r\n  isFeesOpen: boolean;\r\n};\r\n\r\nconst AmountInput: React.FC<Props> = ({handleInputChange, setIsFeesOpen, transaction, isFeesOpen}) => {\r\n  const setFeesOpen = useCallback(() => {\r\n    setIsFeesOpen(!isFeesOpen);\r\n  }, [isFeesOpen, setIsFeesOpen]);\r\n\r\n  return (\r\n    <div className={classes.amount_container}>\r\n      <input\r\n        type=\"number\"\r\n        name=\"amount\"\r\n        className={classes.input}\r\n        value={transaction.amount}\r\n        onChange={handleInputChange}\r\n      />\r\n      {transaction.type === TransactionTypes.TRANSFER && !isFeesOpen ? (\r\n        <button type=\"button\" className={classes.fees} onClick={setFeesOpen}>\r\n          Fees\r\n        </button>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\nexport default AmountInput;\r\n","import React from 'react';\r\nimport {TransactionEvent, TransactionTypes} from '../models/Transaction';\r\nimport {Error} from '../models/Error';\r\nimport {UserAccounts, UserRegister} from '../models/User';\r\nimport languageWords from './LanguageConsts';\r\nimport EMAIL_VALIDATOR from './Regex';\r\nimport classes from '../modules/transaction/components/addTransactionModal/AddTransactionStyle.module.css';\r\n\r\nexport const validateTransaction = (value: TransactionEvent, userAccounts: UserAccounts): Error => {\r\n  const errors: Error = {\r\n    account: '',\r\n    from: '',\r\n    category: '',\r\n    to: '',\r\n    amount: '',\r\n    fees: ''\r\n  };\r\n\r\n  const {account, type, category, to, from, fees, amount, _id: eventId} = value;\r\n\r\n  const accountsName = Object.keys(userAccounts.accounts);\r\n  const accountsValue = Object.values(userAccounts.accounts);\r\n\r\n  if (type !== 'income' && fees) {\r\n    const total = (parseFloat(amount) + parseFloat(fees)) * 100;\r\n    if (eventId) {\r\n      accountsName.forEach((element, index) => {\r\n        if (total > accountsValue[index] && (account || from) === element) {\r\n          errors.amount = `${languageWords.THE_AMOUNT_IS_TOO_MUCH} ${element?.toLocaleUpperCase()} is ${(\r\n            accountsValue[index] / 100\r\n          ).toFixed(2)} BGN.`;\r\n        }\r\n      });\r\n    } else {\r\n      accountsName.forEach((element, index) => {\r\n        if (total > accountsValue[index] && (account || from) === element) {\r\n          errors.amount = `${languageWords.THE_AMOUNT_IS_TOO_MUCH} ${element?.toLocaleUpperCase()} is ${(\r\n            accountsValue[index] / 100\r\n          ).toFixed(2)} BGN.`;\r\n        }\r\n      });\r\n    }\r\n  }\r\n  if (!account && type !== TransactionTypes.TRANSFER) {\r\n    errors.account = languageWords.PLEASE_SELECT_AN_ACCOUNT;\r\n  }\r\n  if (!category && type !== TransactionTypes.TRANSFER) {\r\n    errors.category = languageWords.PLEASE_SELECT_A_CATEGORY;\r\n  }\r\n\r\n  if (type === TransactionTypes.TRANSFER && !to) {\r\n    errors.to = languageWords.PLEASE_SELECT_TO;\r\n  }\r\n  if (type === TransactionTypes.TRANSFER && !from) {\r\n    errors.from = languageWords.PLEASE_SELECT_FROM;\r\n  }\r\n  if (!amount || parseFloat(amount) <= 0 || (amount.charAt(0) === '0' && amount.charAt(1) !== '.')) {\r\n    errors.amount = languageWords.PLEASE_ADD_AN_AMOUNT;\r\n  }\r\n  if (fees)\r\n    if (parseFloat(fees) > parseFloat(amount) || parseFloat(amount) < 0) {\r\n      errors.fees = languageWords.FEES_CAN_NOT_BE_GREATER;\r\n    }\r\n  return errors;\r\n};\r\n\r\nexport const validateLogin = (\r\n  user: UserRegister,\r\n  isLogin: boolean\r\n): {\r\n  email: string;\r\n  password: string;\r\n  username: string;\r\n  confirmPassword: string;\r\n} => {\r\n  const isValidEmail = RegExp(EMAIL_VALIDATOR);\r\n  const errors = {\r\n    email: '',\r\n    username: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n  };\r\n  const {email, password, confirmPassword, username} = user;\r\n\r\n  if (!isValidEmail.test(email)) {\r\n    errors.email = languageWords.PLEASE_ENTER_VALID_EMAIL;\r\n  }\r\n\r\n  if (username.length < 6 && !isLogin) {\r\n    errors.username = languageWords.PLEASE_ENTER_VALID_USERNAME;\r\n  }\r\n  if (password !== confirmPassword && !isLogin) {\r\n    errors.confirmPassword = languageWords.NO_MATCHING_PASSWORDS;\r\n  }\r\n  if (!password.match(/^[0-9a-zA-Z]+$/) || password.length > 20 || password.length < 6) {\r\n    errors.password = languageWords.PLEASE_ENTER_VALID_PASSWORD;\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport const errorMsg = (error: string): JSX.Element => {\r\n  return <>{error && <div className={`col-8  ${classes.error_msg} `}>{error}</div>}</>;\r\n};\r\n","export const EMAIL_VALIDATOR =\r\n  \"[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\";\r\nexport default EMAIL_VALIDATOR;\r\n","import React, {forwardRef, useState, useCallback} from 'react';\r\nimport Moment from 'moment';\r\nimport DatePicker from 'react-datepicker';\r\nimport classes from '../AddTransactionStyle.module.css';\r\nimport {SelectInputTitle, TransactionEvent, TransactionTypes} from '../../../../../models/Transaction';\r\nimport {HandleInputChange} from '../../../../../models/Function';\r\nimport {Error} from '../../../../../models/Error';\r\nimport SelectInput from './components/SelectInputs';\r\nimport FeesInput from './components/FeesInput';\r\nimport AmountInput from './components/AmountInput';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport {errorMsg} from '../../../../../helpers/Validation';\r\n\r\ntype Props = {\r\n  transaction: TransactionEvent;\r\n  errors: Error;\r\n  handleInputChange: (event: HandleInputChange) => void;\r\n};\r\ntype CustomInput = {\r\n  value: string | number;\r\n  onClick: React.MouseEventHandler<HTMLButtonElement>;\r\n};\r\nconst Form: React.FC<Props> = ({transaction, handleInputChange, errors}) => {\r\n  const [isFeesOpen, setIsFeesOpen] = useState(false);\r\n\r\n  // const accounts = Object.keys(useSelector(getUserAccounts).accounts);\r\n  // const categoriesIncome = useSelector(getCategoriesIncome);\r\n  // const categoriesExpense = useSelector(getCategoriesExpense).forEach((element) => element.name);\r\n\r\n  // TODO/mockup state//\r\n  const accounts = ['', 'cash', 'card', 'accounts'];\r\n  const categoriesIncome = ['', 'salary', 'bonus', 'petty cash', 'other'];\r\n  const categoriesExpense = ['', 'food', 'culture', 'socialLife', 'selfDevelopment', 'transportation', 'other'];\r\n\r\n  const selectOptions = (transactionType: string) => {\r\n    if (transactionType === TransactionTypes.TRANSFER) {\r\n      if (transaction.from === '' && transaction.to === '') {\r\n        return accounts;\r\n      }\r\n      return accounts.filter((element) => element !== transaction.from);\r\n    }\r\n\r\n    if (transactionType === TransactionTypes.INCOME) {\r\n      return categoriesIncome;\r\n    }\r\n    return categoriesExpense;\r\n  };\r\n  const handleSetDate = useCallback(\r\n    (date) => {\r\n      handleInputChange({\r\n        target: {value: Moment(date).toDate(), name: 'date'}\r\n      });\r\n    },\r\n    [handleInputChange]\r\n  );\r\n\r\n  const ExampleCustomInput = forwardRef(\r\n    ({value, onClick}: CustomInput, ref: React.LegacyRef<HTMLButtonElement> | undefined) => (\r\n      <div className=\" align-items-center \">\r\n        <button type=\"button\" onClick={onClick} className={classes.input} ref={ref}>\r\n          {value}\r\n        </button>\r\n      </div>\r\n    )\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row  align-items-center justify-content-center mb-2\">\r\n        <div className={`col-3 align-items-start ${classes.title}`}>Day</div>\r\n        <div className=\"col-8 \">\r\n          <DatePicker\r\n            selected={Moment(transaction.date).toDate()}\r\n            dateFormat=\" dd / MMMM / yyyy  h:mm aa\"\r\n            onChange={handleSetDate}\r\n            showTimeSelect\r\n            timeFormat=\"HH:mm\"\r\n            timeIntervals={15}\r\n            timeCaption=\"time\"\r\n            customInput={React.createElement(ExampleCustomInput)}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row  align-items-center justify-content-center mb-2\">\r\n        <div className={`col-3 ${classes.title}`}>\r\n          {transaction.type === TransactionTypes.TRANSFER ? 'From' : 'Account'}\r\n        </div>\r\n        <div className=\"col-8\">\r\n          {' '}\r\n          <SelectInput\r\n            selectValue={transaction.type === TransactionTypes.TRANSFER ? transaction.from : transaction.account}\r\n            transactionType={\r\n              transaction.type === TransactionTypes.TRANSFER ? SelectInputTitle.FROM : SelectInputTitle.ACCOUNT\r\n            }\r\n            options={accounts}\r\n            handleInputChange={handleInputChange}\r\n          />\r\n        </div>\r\n        <div className=\"col-3\" />\r\n        {errorMsg(transaction.type === TransactionTypes.TRANSFER ? errors.from : errors.account)}\r\n      </div>\r\n\r\n      <div className=\"row  align-items-center justify-content-center mb-2\">\r\n        <div className={`col-3 ${classes.title}`}>\r\n          {' '}\r\n          {transaction.type === TransactionTypes.TRANSFER ? 'To' : 'Category'}\r\n        </div>\r\n        <div className=\"col-8\">\r\n          {' '}\r\n          <SelectInput\r\n            selectValue={transaction.type === TransactionTypes.TRANSFER ? transaction.to : transaction.category}\r\n            transactionType={\r\n              transaction.type === TransactionTypes.TRANSFER ? SelectInputTitle.TO : SelectInputTitle.CATEGORY\r\n            }\r\n            options={selectOptions(transaction.type)}\r\n            handleInputChange={handleInputChange}\r\n          />\r\n        </div>\r\n        <div className=\"col-3\" />\r\n        {errorMsg(transaction.type === TransactionTypes.TRANSFER ? errors.to : errors.category)}\r\n      </div>\r\n\r\n      <div className=\"row  align-items-center justify-content-center mb-2\">\r\n        <div className={`col-3 ${classes.title}`}>Amount</div>\r\n        <div className=\"col-8\">\r\n          {' '}\r\n          <AmountInput\r\n            transaction={transaction}\r\n            handleInputChange={handleInputChange}\r\n            setIsFeesOpen={setIsFeesOpen}\r\n            isFeesOpen={isFeesOpen}\r\n          />\r\n        </div>\r\n        <div className=\"col-3\" />\r\n        {errorMsg(errors.amount)}\r\n      </div>\r\n\r\n      {isFeesOpen ? (\r\n        <div className=\"row  align-items-center justify-content-center mb-2\">\r\n          <div className={`col-3 ${classes.title}`}>Fees</div>\r\n          <div className=\"col-8\">\r\n            {' '}\r\n            <FeesInput\r\n              transaction={transaction}\r\n              handleInputChange={handleInputChange}\r\n              setIsFeesOpen={setIsFeesOpen}\r\n              isFeesOpen={isFeesOpen}\r\n            />\r\n          </div>\r\n          <div className=\"col-3\" />\r\n          {errorMsg(errors.fees)}\r\n        </div>\r\n      ) : null}\r\n\r\n      <div className=\"row  align-items-center justify-content-center mb-2\">\r\n        <div className={`col-3 ${classes.title}`}>Note</div>\r\n        <div className=\"col-8\">\r\n          <input\r\n            type=\"text\"\r\n            className={classes.input}\r\n            name=\"note\"\r\n            value={transaction.note}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React, {useCallback, useEffect} from 'react';\r\nimport {Tabs, TabList, TabPanel, Tab} from 'react-tabs';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faTimesCircle} from '@fortawesome/free-solid-svg-icons';\r\nimport Moment from 'moment';\r\nimport {Modal as BootstrapModal} from 'bootstrap';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport classes from './AddTransactionStyle.module.css';\r\nimport {TransactionEvent, TransactionTypes} from '../../../../models/Transaction';\r\nimport {Error} from '../../../../models/Error';\r\nimport {HandleInputChange} from '../../../../models/Function';\r\n\r\nimport Form from './form/Form';\r\nimport {setIsTransactionOpen} from '../../actions/transactionActions';\r\nimport {validateTransaction} from '../../../../helpers/Validation';\r\nimport {getUserAccounts} from '../../../../helpers/userSelectors';\r\nimport {setAccounts} from '../../../login/actions/usersActions';\r\nimport {getAccounts} from '../../service/TransactionService';\r\n\r\ntype Props = {\r\n  transactionEvent: TransactionEvent;\r\n  errors: Error;\r\n  isEditTransactionOpen: boolean;\r\n  handleInputChange: (event: HandleInputChange) => void;\r\n  handleSave: () => void;\r\n  handleOpenTransaction: (date: Date) => void;\r\n  handleOpenEdit: (event: TransactionEvent) => void;\r\n  handleDelete: (eventId: string) => void;\r\n};\r\n\r\nconst AddTransactionModal: React.FC<Props> = ({\r\n  transactionEvent,\r\n  handleInputChange,\r\n  errors,\r\n  handleSave,\r\n  handleOpenTransaction,\r\n  isEditTransactionOpen,\r\n  handleOpenEdit,\r\n  handleDelete\r\n}) => {\r\n  const ChooseCategory = (event: string) => {\r\n    switch (event) {\r\n      case TransactionTypes.INCOME:\r\n        return 0;\r\n      case TransactionTypes.EXPENSE:\r\n        return 1;\r\n      case TransactionTypes.TRANSFER:\r\n        return 2;\r\n      default:\r\n        return 0;\r\n    }\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const userAccounts = useSelector(getUserAccounts);\r\n  const handleOpen = useCallback(async () => {\r\n    const response = await getAccounts();\r\n\r\n    dispatch(setAccounts(response.data));\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-expressions\r\n    isEditTransactionOpen ? handleOpenEdit(transactionEvent) : handleOpenTransaction(Moment().toDate());\r\n  }, [handleOpenEdit, handleOpenTransaction, isEditTransactionOpen, transactionEvent]);\r\n  const handleSetIncomeType = useCallback(() => {\r\n    handleInputChange({\r\n      target: {value: TransactionTypes.INCOME, name: 'type'}\r\n    });\r\n  }, [handleInputChange]);\r\n  const handleSetExpenseType = useCallback(() => {\r\n    handleInputChange({\r\n      target: {value: TransactionTypes.EXPENSE, name: 'type'}\r\n    });\r\n  }, [handleInputChange]);\r\n  const handleSetTransferType = useCallback(() => {\r\n    handleInputChange({\r\n      target: {value: TransactionTypes.TRANSFER, name: 'type'}\r\n    });\r\n  }, [handleInputChange]);\r\n  const handleDeleteTransaction = useCallback(() => {\r\n    const {_id: transactionEventId} = transactionEvent;\r\n\r\n    handleDelete(transactionEventId);\r\n  }, [handleDelete, transactionEvent]);\r\n\r\n  const onHiddenBsModal = () => {\r\n    dispatch(setIsTransactionOpen());\r\n    handleOpen();\r\n  };\r\n  useEffect(() => {\r\n    const myModal = new BootstrapModal('#RealBootstrapModal');\r\n    myModal.show();\r\n\r\n    const myModalDom = document.getElementById('RealBootstrapModal');\r\n    myModalDom?.addEventListener('hidden.bs.modal', onHiddenBsModal);\r\n    return () => {\r\n      myModalDom?.removeEventListener('hidden.bs.modal', onHiddenBsModal);\r\n    };\r\n  }, []);\r\n  const validationErrors = validateTransaction(transactionEvent, userAccounts);\r\n  const isValid = Object.values(validationErrors).filter(Boolean).length <= 0;\r\n  return (\r\n    <div\r\n      className=\"modal fade\"\r\n      id=\"RealBootstrapModal\"\r\n      tabIndex={-1}\r\n      aria-labelledby=\"staticBackdropLabel\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      <div className=\"modal-dialog\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header justify-content-center\">\r\n            <FontAwesomeIcon\r\n              className={classes.close_button}\r\n              data-bs-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n              onClick={handleOpen}\r\n              icon={faTimesCircle}\r\n            />\r\n          </div>\r\n          <div className=\"modal-body justify-content-center \">\r\n            <Tabs selectedTabClassName={classes.selected_tab} selectedIndex={ChooseCategory(transactionEvent.type)}>\r\n              <TabList className=\"row p-0 justify-content-evenly\">\r\n                <Tab className={`col-3  ${classes.tab}`} onClick={handleSetIncomeType}>\r\n                  Income\r\n                </Tab>\r\n                <Tab className={`col-3 ${classes.tab}`} onClick={handleSetExpenseType}>\r\n                  Expense\r\n                </Tab>\r\n                <Tab className={`col-3 ${classes.tab}`} onClick={handleSetTransferType}>\r\n                  Transfer\r\n                </Tab>\r\n              </TabList>\r\n\r\n              <TabPanel>\r\n                <Form transaction={transactionEvent} handleInputChange={handleInputChange} errors={errors} />\r\n              </TabPanel>\r\n              <TabPanel>\r\n                <Form transaction={transactionEvent} handleInputChange={handleInputChange} errors={errors} />\r\n              </TabPanel>\r\n              <TabPanel>\r\n                <Form transaction={transactionEvent} handleInputChange={handleInputChange} errors={errors} />\r\n              </TabPanel>\r\n            </Tabs>\r\n\r\n            <textarea\r\n              className={classes.input_description}\r\n              placeholder=\"Description\"\r\n              name=\"description\"\r\n              value={transactionEvent.description}\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n          <div className={`modal-footer justify-content-center ${classes.input_description}`}>\r\n            {isEditTransactionOpen ? (\r\n              <div className={`row ${classes.buttons_content}`}>\r\n                <div className=\"col\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className={classes.save_button}\r\n                    data-bs-dismiss={isValid ? 'modal' : ''}\r\n                    onClick={handleSave}\r\n                  >\r\n                    Save\r\n                  </button>\r\n                </div>\r\n                <div className=\"col\">\r\n                  {' '}\r\n                  <button\r\n                    type=\"button\"\r\n                    className={classes.delete_button}\r\n                    data-bs-dismiss=\"modal\"\r\n                    onClick={handleDeleteTransaction}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className={classes.buttons_content}>\r\n                <button\r\n                  type=\"button\"\r\n                  className={classes.save_button}\r\n                  data-bs-dismiss={isValid ? 'modal' : ''}\r\n                  onClick={handleSave}\r\n                >\r\n                  Save\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTransactionModal;\r\n","import {createSelector} from '@reduxjs/toolkit';\r\nimport {TransactionReducer} from '../models/Transaction';\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const getTransactionState = createSelector(\r\n  (state: {transactionReducer: TransactionReducer}) => state,\r\n  ({transactionReducer}) => transactionReducer\r\n);\r\n\r\nexport const getTransactionDate = createSelector(\r\n  (state: {transactionReducer: TransactionReducer}) => state,\r\n  ({transactionReducer}) => transactionReducer.date\r\n);\r\n\r\nexport const getTransactionAccount = createSelector(\r\n  (state: {transactionReducer: TransactionReducer}) => state,\r\n  ({transactionReducer}) =>\r\n    transactionReducer.transactionEvent.from\r\n      ? transactionReducer.transactionEvent.from\r\n      : transactionReducer.transactionEvent.from\r\n);\r\n","import React, {useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport Moment from 'moment';\r\nimport {TransactionTypes} from '../../models/Transaction';\r\nimport {\r\n  transactionInputChange,\r\n  setTransaction,\r\n  setIsTransactionOpen\r\n} from '../../modules/transaction/actions/transactionActions';\r\nimport AddTransactionModal from '../../modules/transaction/components/addTransactionModal/AddTransactionModal';\r\nimport {validateTransaction} from '../../helpers/Validation';\r\n\r\nimport {\r\n  createTransactionRequest,\r\n  deleteTransaction,\r\n  editTransaction,\r\n  getAccounts\r\n} from '../../modules/transaction/service/TransactionService';\r\nimport '../navBar/NavBarStyle.css';\r\nimport {UnitOfTime} from '../../models/Clendar';\r\nimport {getTransaction} from '../../helpers/TransactionHelpers';\r\nimport {getTransactionState} from '../../helpers/transactionSelectors';\r\nimport {getUserAccounts} from '../../helpers/userSelectors';\r\nimport {setAccounts} from '../../modules/login/actions/usersActions';\r\n\r\nconst AddTransactionButton = (): JSX.Element => {\r\n  const [errors, setErrors] = useState({\r\n    account: '',\r\n    from: '',\r\n    category: '',\r\n    to: '',\r\n    amount: '',\r\n    fees: ''\r\n  });\r\n  const dispatch = useDispatch();\r\n\r\n  const stateTransaction = useSelector(getTransactionState);\r\n  const userAccounts = useSelector(getUserAccounts);\r\n  const {transactionId, _id: transactionEventId} = stateTransaction.transactionEvent;\r\n\r\n  const clearState = () => {\r\n    setErrors({account: '', from: '', category: '', to: '', amount: '', fees: ''});\r\n    // dispatch(setIsTransactionOpen());\r\n    dispatch(\r\n      setTransaction({\r\n        _id: '',\r\n        type: TransactionTypes.INCOME,\r\n        date: Moment().toDate(),\r\n        account: '',\r\n        from: '',\r\n        category: '',\r\n        fees: '0',\r\n        to: '',\r\n        amount: '0',\r\n        note: '',\r\n        description: '',\r\n        transactionId: ''\r\n      })\r\n    );\r\n  };\r\n  const handleSave = async () => {\r\n    const validationErrors = validateTransaction(stateTransaction.transactionEvent, userAccounts);\r\n    const isValid = Object.values(validationErrors).filter(Boolean).length <= 0;\r\n    if (!isValid) {\r\n      setErrors(validationErrors);\r\n      return;\r\n    }\r\n\r\n    const event = getTransaction(stateTransaction.transactionEvent);\r\n    if (transactionId) {\r\n      await editTransaction(transactionId, transactionEventId, event.events[0]);\r\n    } else {\r\n      await createTransactionRequest(event);\r\n    }\r\n    const response = await getAccounts();\r\n    dispatch(setAccounts(response.data));\r\n\r\n    clearState();\r\n  };\r\n  const handleDelete = async (eventId: string) => {\r\n    await deleteTransaction(transactionId, eventId);\r\n    const response = await getAccounts();\r\n    dispatch(setAccounts(response.data));\r\n    clearState();\r\n  };\r\n\r\n  const handleOpenTransaction = () => {\r\n    if (stateTransaction.isTransactionOpen) {\r\n      clearState();\r\n    } else {\r\n      dispatch(setIsTransactionOpen());\r\n      dispatch(\r\n        transactionInputChange({\r\n          target: {\r\n            name: UnitOfTime.DATE,\r\n            value: stateTransaction.date\r\n          }\r\n        })\r\n      );\r\n    }\r\n  };\r\n  const {isTransactionOpen} = stateTransaction;\r\n\r\n  return (\r\n    <div>\r\n      <button type=\"button\" className=\"btn add_button navBarBtn ml-2\" onClick={handleOpenTransaction}>\r\n        Add Transaction\r\n      </button>\r\n      {(isTransactionOpen || transactionId.length) > 0 && (\r\n        <AddTransactionModal\r\n          transactionEvent={stateTransaction.transactionEvent}\r\n          errors={errors}\r\n          isEditTransactionOpen={transactionId.length > 0}\r\n          handleInputChange={(event) => dispatch(transactionInputChange(event))}\r\n          handleSave={handleSave}\r\n          handleOpenTransaction={handleOpenTransaction}\r\n          handleOpenEdit={clearState}\r\n          handleDelete={handleDelete}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTransactionButton;\r\n","import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport {getUserAccounts} from '../../../helpers/userSelectors';\r\nimport AddTransactionButton from '../../../layout/addTranasctionButton/AddTransactionButton';\r\nimport classes from './TotalStyle.module.css';\r\n\r\nconst TotalContainer = (): JSX.Element => {\r\n  const {accounts} = useSelector(getUserAccounts);\r\n  const accountsName = Object.keys(accounts);\r\n  const accountsValue = Object.values(accounts);\r\n  return (\r\n    <div className=\"wrapper \">\r\n      <div className=\" row  justify-content-end mb-3 mt-3 \">\r\n        <div className=\"col-lg-5 col-sm-12 mt-sm-2 d-flex justify-content-end\">\r\n          <AddTransactionButton />\r\n        </div>\r\n      </div>\r\n      <div className={classes.title}>Accounts</div>\r\n      <div className=\" row row-cols-xl-4 row-cols-lg-3 row-cols-sm-2\">\r\n        {accountsValue.map((element, index) => (\r\n          <div className=\"mt-4\" key={accountsName[index]}>\r\n            <div className={`${classes.account_container} `}>\r\n              <div className={` ${classes.name}`}>{accountsName[index].toUpperCase()}</div>\r\n              <div className=\"text-end\">{(element / 100).toFixed(2)} BGN</div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default TotalContainer;\r\n","import React from 'react';\r\n\r\nimport NavBar from '../../layout/header/Header';\r\nimport SideBar from '../../layout/sideBar/SideBar';\r\nimport TotalContainer from '../../modules/transaction/total/TotalContainer';\r\n\r\nconst HomePage = (): JSX.Element => {\r\n  return (\r\n    <div className=\"d-flex\">\r\n      <SideBar />\r\n\r\n      <div className=\"w-100\">\r\n        <NavBar />\r\n        <TotalContainer />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\nimport languageWords from '../../../helpers/LanguageConsts';\r\nimport classes from '../LoginContainerStyle.module.css';\r\n\r\ntype Props = {\r\n  Submit: () => void;\r\n\r\n  errors: {\r\n    email: string;\r\n    password: string;\r\n  };\r\n  handleInput: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n};\r\n\r\nconst LoginForm: React.FC<Props> = ({Submit, errors, handleInput}) => {\r\n  return (\r\n    <div className={classes.login_content}>\r\n      <label htmlFor=\"Email\" className={classes.login_label}>\r\n        {languageWords.EMAIL}\r\n        <input className={classes.input} name=\"email\" onChange={handleInput} />\r\n      </label>\r\n      {errors.email && (\r\n        <div className={classes.error_msg}>\r\n          <span>{errors.email}</span>\r\n        </div>\r\n      )}\r\n      <label htmlFor=\"Password\" className={classes.login_label}>\r\n        {languageWords.PASSWORD}\r\n        <input type=\"password\" className={classes.input} name=\"password\" onChange={handleInput} />\r\n      </label>\r\n      {errors.password && (\r\n        <div className={classes.error_msg}>\r\n          <span>{errors.password}</span>\r\n        </div>\r\n      )}\r\n      <button type=\"button\" className={classes.login_button} onClick={Submit}>\r\n        {languageWords.SIGN_IN}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\r\nimport languageWords from '../../../helpers/LanguageConsts';\r\nimport classes from '../LoginContainerStyle.module.css';\r\n\r\ntype Props = {\r\n  Submit: () => void;\r\n  errors: {\r\n    email: string;\r\n    username: string;\r\n    password: string;\r\n    confirmPassword: string;\r\n  };\r\n  handleInput: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n};\r\n\r\nconst RegistrationForm: React.FC<Props> = ({Submit, errors, handleInput}) => {\r\n  return (\r\n    <div className={classes.login_content}>\r\n      <label htmlFor=\"Username\" className={classes.login_label}>\r\n        {languageWords.USERNAME}\r\n\r\n        <input className={classes.input} name=\"username\" onChange={handleInput} />\r\n      </label>\r\n      {errors.username && (\r\n        <div className={classes.error_msg}>\r\n          <span>{errors.username}</span>\r\n        </div>\r\n      )}\r\n      <label htmlFor=\"Email\" className={classes.login_label}>\r\n        {languageWords.EMAIL}\r\n\r\n        <input className={classes.input} name=\"email\" onChange={handleInput} />\r\n      </label>\r\n      {errors.email && (\r\n        <div className={classes.error_msg}>\r\n          <span>{errors.email}</span>\r\n        </div>\r\n      )}\r\n      <label htmlFor=\"Password\" className={classes.login_label}>\r\n        {languageWords.PASSWORD}\r\n        <input type=\"password\" className={classes.input} name=\"password\" onChange={handleInput} />\r\n      </label>\r\n      {errors.password && (\r\n        <div className={classes.error_msg}>\r\n          <span>{errors.password}</span>\r\n        </div>\r\n      )}\r\n      <label htmlFor=\"Confirm password\" className={classes.login_label}>\r\n        {languageWords.CONFIRM_PASSWORD}{' '}\r\n        <input type=\"password\" className={classes.input} name=\"confirmPassword\" onChange={handleInput} />\r\n      </label>\r\n      {errors.confirmPassword && (\r\n        <div className={classes.error_msg}>\r\n          <span>{errors.confirmPassword}</span>\r\n        </div>\r\n      )}\r\n      <button type=\"button\" className={classes.login_button} onClick={Submit}>\r\n        {languageWords.SIGN_UP}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationForm;\r\n","import React from 'react';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faApple, faFacebookF, faGoogle, faTwitter} from '@fortawesome/free-brands-svg-icons';\r\nimport classes from '../LoginContainerStyle.module.css';\r\n\r\nconst SocialNetworks = (): JSX.Element => {\r\n  return (\r\n    <div className={classes.social_container}>\r\n      <FontAwesomeIcon className={classes.social_icon} icon={faFacebookF} />\r\n      <FontAwesomeIcon className={classes.social_icon} icon={faGoogle} />\r\n      <FontAwesomeIcon className={classes.social_icon} icon={faTwitter} />\r\n      <FontAwesomeIcon className={classes.social_icon} icon={faApple} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SocialNetworks;\r\n","import React, {MouseEventHandler, useCallback, useState} from 'react';\r\nimport {Tabs, TabList, TabPanel, Tab} from 'react-tabs';\r\nimport {useDispatch} from 'react-redux';\r\nimport LoginForm from './components/LoginForm';\r\nimport RegistrationForm from './components/RegistrationForm';\r\nimport SocialNetworks from './components/SocialNetworks';\r\nimport {validateLogin} from '../../helpers/Validation';\r\nimport {saveUser, signIn} from './actions/usersActions';\r\nimport classes from './LoginContainerStyle.module.css';\r\nimport axiosConfig from '../../axiosConfig';\r\nimport {SIGN_IN, SIGN_UP} from '../../helpers/axiosRoutes.ts/userRoutes';\r\n\r\nconst LoginContainer = (): JSX.Element => {\r\n  const [user, setUser] = useState({\r\n    email: '',\r\n    username: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n  });\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [errors, setErrors] = useState({\r\n    email: '',\r\n    username: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setUser({\r\n      ...user,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleLogin = async () => {\r\n    const validationErrors = validateLogin(user, isLogin);\r\n    const isValid = Object.values(validationErrors).filter(Boolean).length <= 0;\r\n    if (!isValid) {\r\n      setErrors({\r\n        email: validationErrors.email,\r\n        username: validationErrors.username,\r\n        password: validationErrors.password,\r\n        confirmPassword: validationErrors.confirmPassword\r\n      });\r\n      return;\r\n    }\r\n    localStorage.removeItem('jwt');\r\n\r\n    const loggedUser = await axiosConfig.post(`${SIGN_IN}`, user);\r\n\r\n    if (loggedUser.data.user) {\r\n      dispatch(signIn(loggedUser.data));\r\n      window.location.pathname = '/';\r\n      setErrors({email: '', password: '', confirmPassword: '', username: ''});\r\n    } else {\r\n      setErrors({\r\n        email: '',\r\n        username: '',\r\n        password: loggedUser.data.errorMSG,\r\n        confirmPassword: ''\r\n      });\r\n    }\r\n  };\r\n  const handleRegister = async () => {\r\n    const validationErrors = validateLogin(user, isLogin);\r\n    const isValid = Object.values(validationErrors).filter(Boolean).length <= 0;\r\n    if (!isValid) {\r\n      setErrors({\r\n        email: validationErrors.email,\r\n        username: validationErrors.username,\r\n        password: validationErrors.password,\r\n        confirmPassword: validationErrors.confirmPassword\r\n      });\r\n      return;\r\n    }\r\n    localStorage.removeItem('jwt');\r\n\r\n    const newUser = {\r\n      username: user.username,\r\n      email: user.email,\r\n      password: user.password,\r\n      type: 'user',\r\n      currency: 'BGN'\r\n    };\r\n    try {\r\n      const signUp = await axiosConfig.post(`${SIGN_UP}`, newUser);\r\n\r\n      if (signUp.data.user) {\r\n        dispatch(saveUser(signUp.data));\r\n        window.location.pathname = '/';\r\n        setErrors({email: '', password: '', confirmPassword: '', username: ''});\r\n      }\r\n    } catch (e) {\r\n      // eslint-disable-next-line no-alert\r\n      alert(e);\r\n    }\r\n  };\r\n\r\n  const changeTab: (event: boolean) => MouseEventHandler<HTMLLIElement> = useCallback(\r\n    (event: boolean) => () => {\r\n      setUser({email: '', password: '', confirmPassword: '', username: ''});\r\n      setErrors({email: '', password: '', confirmPassword: '', username: ''});\r\n      setIsLogin(event);\r\n    },\r\n    []\r\n  );\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes.login_form}>\r\n        <Tabs selectedTabClassName={classes.selected_tab}>\r\n          <TabList className={classes.tab_list}>\r\n            <Tab className={classes.tab} onClick={changeTab(true)}>\r\n              Sign In\r\n            </Tab>\r\n            <Tab className={classes.tab} onClick={changeTab(false)}>\r\n              Sign Up\r\n            </Tab>\r\n          </TabList>\r\n          <TabPanel>\r\n            <LoginForm Submit={handleLogin} errors={errors} handleInput={handleInputChange} />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <RegistrationForm Submit={handleRegister} errors={errors} handleInput={handleInputChange} />\r\n          </TabPanel>\r\n        </Tabs>\r\n        <SocialNetworks />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default LoginContainer;\r\n","import React from 'react';\r\nimport LoginContainer from '../../modules/login/LoginContainer';\r\n\r\nconst LoginPage = (): JSX.Element => {\r\n  return (\r\n    <>\r\n      <LoginContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React, {useCallback} from 'react';\r\nimport Moment from 'moment';\r\nimport {faCaretLeft, faCaretRight} from '@fortawesome/free-solid-svg-icons';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {useLocation} from 'react-router';\r\nimport {isSelectedTitle} from '../../../helpers/TransactionHelpers';\r\nimport {TransactionReducer} from '../../../models/Transaction';\r\nimport {\r\n  handlePreviousYear,\r\n  handlePreviousWeek,\r\n  handlePreviousMonth,\r\n  handleNextYear,\r\n  handleNextWeek,\r\n  handleNextMonth\r\n} from '../../../modules/transaction/actions/transactionActions';\r\n\r\nconst ChangeDate = (): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const date = useSelector((state: {transactionReducer: TransactionReducer}) => state.transactionReducer.date);\r\n\r\n  const handlePreviousYearOrMonth = useCallback(() => {\r\n    if (isSelectedTitle(location.pathname, 'yearly')) {\r\n      return dispatch(handlePreviousYear());\r\n    }\r\n    if (location.pathname === '/stats/weekly') {\r\n      return dispatch(handlePreviousWeek());\r\n    }\r\n    return dispatch(handlePreviousMonth());\r\n  }, [dispatch, location.pathname]);\r\n  const handleNextYearOrMonth = useCallback(() => {\r\n    if (isSelectedTitle(location.pathname, 'yearly')) {\r\n      return dispatch(handleNextYear());\r\n    }\r\n    if (location.pathname === '/stats/weekly') {\r\n      return dispatch(handleNextWeek());\r\n    }\r\n    return dispatch(handleNextMonth());\r\n  }, [dispatch, location.pathname]);\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-center\">\r\n      <button className=\"btn navBarBtn mr-2 \" type=\"button\" onClick={handlePreviousYearOrMonth}>\r\n        <FontAwesomeIcon icon={faCaretLeft} />\r\n      </button>\r\n      <div className=\"date\">\r\n        {location.pathname === '/stats/weekly' &&\r\n          `${Moment(date).set('day', 1).format('DD.MM')} - ${Moment(date).set('day', 7).format('DD.MM')}`}\r\n        {isSelectedTitle(location.pathname, 'yearly') && Moment(date).format('YYYY')}\r\n        {location.pathname !== '/stats/weekly' &&\r\n          !isSelectedTitle(location.pathname, 'yearly') &&\r\n          Moment(date).format('MMM YYYY')}\r\n      </div>\r\n      <button className=\"btn navBarBtn ml-2\" type=\"button\" onClick={handleNextYearOrMonth}>\r\n        <FontAwesomeIcon icon={faCaretRight} />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default ChangeDate;\r\n","import React from 'react';\r\nimport {Link, useLocation} from 'react-router-dom';\r\nimport languageWords from '../../helpers/LanguageConsts';\r\nimport {isSelectedTitle, isTransactionContainer} from '../../helpers/TransactionHelpers';\r\nimport AddTransactionButton from '../addTranasctionButton/AddTransactionButton';\r\nimport ChangeDate from './components/ChangeDate';\r\nimport './NavBarStyle.css';\r\n\r\nconst NavBarMenu = (): JSX.Element => {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <div className=\"row  mb-3 mt-3 \">\r\n      <div className=\"col-lg-5 pe-lg-5 col-sm-12\">\r\n        <div className=\"row   row-cols-xl-5 row-cols-lg-12 align-items-center\">\r\n          {location.pathname.includes('transaction') ? (\r\n            <Link\r\n              to=\"/transaction/daily\"\r\n              className={`m-1 btn ${isSelectedTitle(location.pathname, 'daily') ? 'navBarBtnActive' : 'navBarBtn'}`}\r\n            >\r\n              {languageWords.DAILY}\r\n            </Link>\r\n          ) : null}\r\n          <Link\r\n            to={isTransactionContainer(location.pathname) ? '/transaction/weekly' : '/stats/weekly'}\r\n            className={`m-1 btn ${isSelectedTitle(location.pathname, 'weekly') ? 'navBarBtnActive' : 'navBarBtn'}`}\r\n          >\r\n            {languageWords.WEEKLY}\r\n          </Link>\r\n          <Link\r\n            to={isTransactionContainer(location.pathname) ? '/transaction/monthly' : '/stats/monthly'}\r\n            className={`m-1 btn ${isSelectedTitle(location.pathname, 'monthly') ? 'navBarBtnActive' : 'navBarBtn'}`}\r\n          >\r\n            {languageWords.MONTHLY}\r\n          </Link>{' '}\r\n          <Link\r\n            to={isTransactionContainer(location.pathname) ? '/transaction/yearly' : '/stats/yearly'}\r\n            className={` m-1 btn ${isSelectedTitle(location.pathname, 'yearly') ? 'navBarBtnActive' : 'navBarBtn'}`}\r\n          >\r\n            {languageWords.YEARLY}\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-lg-2 col-sm-12 mt-sm-2 d-flex text-center justify-content-center align-items-center\">\r\n        <ChangeDate />\r\n      </div>\r\n      <div className=\"col-lg-5 col-sm-12 mt-sm-2 d-flex justify-content-end\">\r\n        <AddTransactionButton />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBarMenu;\r\n","import React from 'react';\r\nimport classes from './InfoTableHeadStyle.module.css';\r\n\r\ntype Props = {\r\n  sumIncome: number;\r\n  sumExpense: number;\r\n};\r\n\r\nconst InfoTableHead: React.FC<Props> = ({sumIncome, sumExpense}) => {\r\n  return (\r\n    <div className=\"row justify-content-center text-center mt-5 mb-5\">\r\n      <div className=\"col-3\">\r\n        <h2>Income</h2>\r\n        <h2 className={classes.income}>{(sumIncome / 100).toFixed(2)}</h2>\r\n      </div>\r\n      <div className=\"col-3\">\r\n        <h2>Expense </h2>\r\n        <h2 className={classes.expense}>{(sumExpense / 100).toFixed(2)}</h2>\r\n      </div>\r\n      <div className=\"col-3\">\r\n        <h2>Total</h2>\r\n        <h2 className={classes.total}>{((sumIncome - sumExpense) / 100).toFixed(2)}</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfoTableHead;\r\n","import React from 'react';\r\nimport Moment from 'moment';\r\nimport {UnitOfTime} from '../../../../models/Clendar';\r\nimport classes from '../WeeklyStyle.module.css';\r\n\r\ntype Props = {\r\n  week: {from: Date; to: Date; income: number; expense: number};\r\n};\r\n\r\nconst WeeklyTableRow: React.FC<Props> = ({week}) => {\r\n  const isDateInWeek = () => {\r\n    return (\r\n      Moment(week.from).startOf(UnitOfTime.ISO_WEEK).diff(Moment(), UnitOfTime.WEEK) === 0 &&\r\n      Moment(week.to).endOf(UnitOfTime.ISO_WEEK).diff(Moment(), UnitOfTime.WEEK) === 0\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"row justify-content-center mb-3\">\r\n      <div className=\"col-3 d-flex justify-content-center\">\r\n        <div className={isDateInWeek() ? classes.selected_date : classes.date}>\r\n          {Moment(week.from).format('DD.MM')} ~ {Moment(week.to).format('DD.MM')}\r\n        </div>\r\n      </div>\r\n      <div className={`col-3  ${classes.income}`}>{(week.income / 100).toFixed(2)}</div>\r\n      <div className={`col-3  ${classes.expense}`}>{(week.expense / 100).toFixed(2)}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeeklyTableRow;\r\n","import Moment from 'moment';\r\nimport {UnitOfTime} from '../models/Clendar';\r\n\r\nconst {MONTH, DAY, ISO_WEEK, YEAR} = UnitOfTime;\r\n\r\nexport const firstDateOfTheMonth = (date: Date): Moment.Moment => Moment(date).startOf(MONTH);\r\n\r\nexport const lastDateOfTheMonth = (date: Date): Moment.Moment => Moment(date).endOf(MONTH);\r\n\r\nexport const firstDateOfTheYear = (date: Date): Moment.Moment => Moment(date).startOf(YEAR);\r\n\r\nexport const lastDateOfTheYear = (date: Date): Moment.Moment => Moment(date).endOf(YEAR);\r\n\r\nexport const firstDateOfFirstWeekOfTheMonth = (date: Date): Moment.Moment =>\r\n  firstDateOfTheMonth(date).startOf(ISO_WEEK);\r\n\r\nexport const lastDateOfFirstWeekOfTheMonth = (date: Date): Moment.Moment => firstDateOfTheMonth(date).endOf(ISO_WEEK);\r\n\r\nexport const firstDateOfLastWeekOfTheMonth = (date: Date): Moment.Moment => lastDateOfTheMonth(date).startOf(ISO_WEEK);\r\n\r\nexport const lastDateOfLastWeekOfTheMonth = (date: Date): Moment.Moment =>\r\n  lastDateOfTheMonth(date).startOf(DAY).endOf(ISO_WEEK);\r\n\r\nexport const isTheSameDate = (calendarDate: Date, transactionDate: Date): boolean =>\r\n  Moment(Moment(calendarDate).toDate()).diff(Moment(transactionDate).toDate(), DAY) === 0;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport Moment from 'moment';\r\nimport NavBarMenu from '../../../layout/navBar/NavBar';\r\nimport InfoTableHead from '../components/InfoTableHead/InfoTableHead';\r\nimport WeeklyTableRow from './components/WeeklyTableRow';\r\nimport {getYearlyOrWeekly} from '../service/TransactionService';\r\nimport {Month} from '../../../models/Transaction';\r\nimport '../../../scss/variables.scss';\r\nimport {UnitOfTime} from '../../../models/Clendar';\r\nimport {\r\n  firstDateOfFirstWeekOfTheMonth,\r\n  lastDateOfFirstWeekOfTheMonth,\r\n  firstDateOfLastWeekOfTheMonth,\r\n  lastDateOfLastWeekOfTheMonth\r\n} from '../../../helpers/MomentHelpers';\r\nimport {getTransactionState} from '../../../helpers/transactionSelectors';\r\n\r\nconst WeeklyContainer = (): JSX.Element => {\r\n  const [weeksInMonth, setWeeks] = useState<Month[]>([]);\r\n  const [sumIncome, setSumIncome] = useState(0);\r\n  const [sumExpense, setSumExpense] = useState(0);\r\n\r\n  const stateTransaction = useSelector(getTransactionState);\r\n  const {amount} = stateTransaction.transactionEvent;\r\n  const getWeeks = async (date: Date) => {\r\n    const weeks: Month[] = [];\r\n\r\n    setWeeks([]);\r\n    weeks.push({\r\n      from: firstDateOfFirstWeekOfTheMonth(date).toDate(),\r\n      to: lastDateOfFirstWeekOfTheMonth(date).toDate(),\r\n      income: 0,\r\n      expense: 0\r\n    });\r\n\r\n    for (\r\n      let i = lastDateOfFirstWeekOfTheMonth(date).get(UnitOfTime.DATE);\r\n      i <= firstDateOfLastWeekOfTheMonth(date).get(UnitOfTime.DATE) - 7;\r\n      i += 7\r\n    ) {\r\n      weeks.push({\r\n        from: Moment(date)\r\n          .set(UnitOfTime.DATE, i + 1)\r\n          .startOf(UnitOfTime.DATE)\r\n          .toDate(),\r\n        to: Moment(date)\r\n          .set(UnitOfTime.DATE, i + 7)\r\n          .startOf(UnitOfTime.DATE)\r\n          .toDate(),\r\n        income: 0,\r\n        expense: 0\r\n      });\r\n    }\r\n\r\n    weeks.push({\r\n      from: firstDateOfLastWeekOfTheMonth(date).startOf(UnitOfTime.DATE).toDate(),\r\n      to: lastDateOfLastWeekOfTheMonth(date).startOf(UnitOfTime.DATE).toDate(),\r\n      income: 0,\r\n      expense: 0\r\n    });\r\n    try {\r\n      const response = await getYearlyOrWeekly(weeks);\r\n      const {data} = response;\r\n\r\n      setWeeks(data.months.reverse());\r\n      setSumExpense(data.sumExpense);\r\n      setSumIncome(data.sumIncome);\r\n    } catch (error) {\r\n      throw new Error(error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getWeeks(stateTransaction.date);\r\n  }, [amount, stateTransaction.date]);\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <NavBarMenu />\r\n      <div className=\"container\">\r\n        <InfoTableHead sumExpense={sumExpense} sumIncome={sumIncome} />\r\n\r\n        {weeksInMonth.map((week) => (\r\n          <WeeklyTableRow key={week.from.toString()} week={week} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeeklyContainer;\r\n","import React from 'react';\r\nimport NavBar from '../../layout/header/Header';\r\nimport SideBar from '../../layout/sideBar/SideBar';\r\nimport WeeklyContainer from '../../modules/transaction/weeklyContainer/WeeklyContainer';\r\n\r\nconst WeeklyPage = (): JSX.Element => {\r\n  return (\r\n    <div className=\"d-flex\">\r\n      <SideBar />\r\n      <div className=\"w-100\">\r\n        <NavBar />\r\n        <WeeklyContainer />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeeklyPage;\r\n","import React, {useCallback} from 'react';\r\nimport {\r\n  TransactionEventWithAmountNumber,\r\n  TransactionTypes,\r\n  TransactionWithAmountNumber\r\n} from '../../../../../models/Transaction';\r\n\r\ntype Props = {\r\n  handleSelectEvent: (transactionEvent: TransactionEventWithAmountNumber, transactionId: string) => void;\r\n  transactionEvent: TransactionEventWithAmountNumber;\r\n  transaction: TransactionWithAmountNumber;\r\n};\r\n\r\nconst DailyTableRow: React.FC<Props> = ({transactionEvent, handleSelectEvent, transaction}) => {\r\n  const {_id: transactionId} = transaction;\r\n\r\n  const selectEvent = useCallback(() => {\r\n    handleSelectEvent(transactionEvent, transactionId);\r\n  }, [handleSelectEvent, transactionId, transactionEvent]);\r\n  return (\r\n    <div\r\n      className=\"row align-self-center text-center \"\r\n      style={{borderTop: '2px solid black', padding: '15px 0 15px 0'}}\r\n      role=\"button\"\r\n      tabIndex={0}\r\n      onKeyDown={selectEvent}\r\n      onClick={selectEvent}\r\n    >\r\n      <div className=\"col-4 align-self-center \">\r\n        <div className=\"row justify-content-center \">\r\n          <div className=\"col-xxl-6 col-xl-6 align-self-center\">\r\n            {transactionEvent.type === TransactionTypes.TRANSFER ? (\r\n              <h2>{TransactionTypes.TRANSFER}</h2>\r\n            ) : (\r\n              <h2>{transactionEvent.category}</h2>\r\n            )}\r\n          </div>\r\n          <div className=\"col-xll-6 col-xl-6 align-self-center\">\r\n            {transactionEvent.type === TransactionTypes.TRANSFER ? (\r\n              <h4>\r\n                {transactionEvent.from}\r\n                {' ---> '}\r\n                {transactionEvent.to}\r\n              </h4>\r\n            ) : (\r\n              <h2>{transactionEvent.account}</h2>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <h2 className=\"col-4 align-self-center \">\r\n        {transactionEvent.type === TransactionTypes.INCOME ? (transactionEvent.amount / 100).toFixed(2) : null}\r\n      </h2>\r\n      <div className=\"col-4 \">\r\n        <h2>\r\n          {transactionEvent.type === TransactionTypes.EXPENSE || transactionEvent.type === TransactionTypes.TRANSFER\r\n            ? (transactionEvent.amount / 100).toFixed(2)\r\n            : null}\r\n        </h2>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DailyTableRow;\r\n","import React from 'react';\r\nimport Moment from 'moment';\r\n\r\nimport {TransactionWithAmountNumber} from '../../../../../models/Transaction';\r\nimport classes from '../../DailyStyle.module.css';\r\nimport {UnitOfTime} from '../../../../../models/Clendar';\r\nimport {isTheSameDate} from '../../../../../helpers/MomentHelpers';\r\n\r\ntype Props = {\r\n  transaction: TransactionWithAmountNumber;\r\n};\r\nconst DailyTableHeader: React.FC<Props> = ({transaction}) => {\r\n  return (\r\n    <div className=\"row text-center \">\r\n      <div className=\"col-4 align-self-center \">\r\n        <div className={classes.date_content}>\r\n          <div className={classes.date}>{Moment(transaction.createdAt).format('DD')}</div>\r\n          <div>\r\n            <div className={classes.date_year}>{Moment(transaction.createdAt).format('MM.YYYY')}</div>\r\n            <div\r\n              className={\r\n                isTheSameDate(transaction.createdAt, Moment().startOf(UnitOfTime.DATE).toDate())\r\n                  ? classes.date_day_select\r\n                  : classes.date_day\r\n              }\r\n            >\r\n              {Moment(transaction.createdAt).format('ddd')}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-4 align-self-center\">\r\n        <h2>{(transaction.income / 100).toFixed(2)}</h2>\r\n      </div>\r\n      <div className=\"col-2 align-self-center\">\r\n        <h2>{(transaction.expense / 100).toFixed(2)}</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DailyTableHeader;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport Moment from 'moment';\r\nimport NavBarMenu from '../../../layout/navBar/NavBar';\r\nimport InfoTableHead from '../components/InfoTableHead/InfoTableHead';\r\nimport DailyTableRow from './components/dailyTableRow/DailyTableRow';\r\nimport DailyTableHeader from './components/dailyTableHeader/DailyTableHeader';\r\nimport {\r\n  TransactionReducer,\r\n  TransactionWithAmountNumber,\r\n  TransactionEventWithAmountNumber,\r\n  TransactionEvent\r\n} from '../../../models/Transaction';\r\nimport {getSpecificDatePeriod} from '../service/TransactionService';\r\nimport {setIsTransactionOpen, setTransaction} from '../actions/transactionActions';\r\nimport classes from './DailyStyle.module.css';\r\nimport '../../../scss/variables.scss';\r\nimport {UnitOfTime} from '../../../models/Clendar';\r\nimport {firstDateOfTheMonth, lastDateOfTheMonth} from '../../../helpers/MomentHelpers';\r\nimport {getTransactionState} from '../../../helpers/transactionSelectors';\r\n\r\nconst DailyContainer = (): JSX.Element => {\r\n  const [transactions, setTransactions] = useState<TransactionWithAmountNumber[]>([]);\r\n  const [sumIncome, setSumIncome] = useState(0);\r\n  const [sumExpense, setSumExpense] = useState(0);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const stateTransaction = useSelector(getTransactionState);\r\n  const {amount} = stateTransaction.transactionEvent;\r\n  const getTransactions = async (date: Date) => {\r\n    try {\r\n      const response = await getSpecificDatePeriod(\r\n        firstDateOfTheMonth(date).toDate(),\r\n        lastDateOfTheMonth(date).toDate()\r\n      );\r\n      const {data} = response;\r\n      setTransactions(data.transactions);\r\n      setSumExpense(data.sumExpense);\r\n      setSumIncome(data.sumIncome);\r\n    } catch (error) {\r\n      throw new Error(error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTransactions(stateTransaction.date);\r\n  }, [stateTransaction.isTransactionOpen, stateTransaction.date]);\r\n\r\n  const handleSelectEvent = (transactioEvent: TransactionEventWithAmountNumber, transactionId: string) => {\r\n    const Event: TransactionEvent = {\r\n      ...transactioEvent,\r\n      amount: (transactioEvent.amount / 100).toFixed(2),\r\n      fees: (transactioEvent.fees / 100).toFixed(2),\r\n      transactionId\r\n    };\r\n    dispatch(setIsTransactionOpen());\r\n    dispatch(setTransaction(Event));\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <NavBarMenu />\r\n      <div className=\"container\">\r\n        <InfoTableHead sumExpense={sumExpense} sumIncome={sumIncome} />\r\n\r\n        {transactions\r\n          .sort((a, b) => {\r\n            return Moment(b.createdAt).get(UnitOfTime.DATE) - Moment(a.createdAt).get(UnitOfTime.DATE);\r\n          })\r\n          .map((transaction: TransactionWithAmountNumber) => {\r\n            const {_id: transactionId} = transaction;\r\n            return (\r\n              <div key={transactionId} className={`row ${classes.table_container}`}>\r\n                <div className=\"col-12\">\r\n                  <DailyTableHeader transaction={transaction} />\r\n                  {transaction.events.map((event: TransactionEventWithAmountNumber) => {\r\n                    const {_id: eventId} = event;\r\n                    return (\r\n                      <DailyTableRow\r\n                        key={eventId}\r\n                        transaction={transaction}\r\n                        transactionEvent={event}\r\n                        handleSelectEvent={handleSelectEvent}\r\n                      />\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DailyContainer;\r\n","import React from 'react';\r\nimport NavBar from '../../layout/header/Header';\r\nimport SideBar from '../../layout/sideBar/SideBar';\r\nimport DailyContainer from '../../modules/transaction/dailyContainer/DailyContainer';\r\n\r\nconst DailyPage = (): JSX.Element => {\r\n  return (\r\n    <div className=\"d-flex\">\r\n      <SideBar />\r\n      <div className=\"w-100\">\r\n        <NavBar />\r\n        <DailyContainer />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DailyPage;\r\n","import React, {useCallback} from 'react';\r\nimport Moment from 'moment';\r\nimport {useDispatch} from 'react-redux';\r\nimport {useHistory} from 'react-router-dom';\r\nimport classes from '../YearlyStyle.module.css';\r\n\r\nimport {setDate} from '../../actions/transactionActions';\r\nimport {UnitOfTime} from '../../../../models/Clendar';\r\n\r\ntype Props = {\r\n  month: {from: Date; to: Date; expense: number; income: number};\r\n};\r\n\r\nconst YearlyTableRow: React.FC<Props> = ({month}) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const openMonthContainer = useCallback(() => {\r\n    dispatch(setDate(month.from));\r\n    history.push(`/transaction/monthly`);\r\n  }, [dispatch, history, month.from]);\r\n\r\n  return (\r\n    <div\r\n      role=\"button\"\r\n      tabIndex={-1}\r\n      onClick={openMonthContainer}\r\n      onKeyDown={openMonthContainer}\r\n      className=\"row justify-content-center\"\r\n    >\r\n      <div className=\"col-3 d-flex justify-content-center\">\r\n        <div\r\n          className={` align-self-center ${\r\n            Moment(month.from).diff(Moment().startOf(UnitOfTime.MONTH).toDate(), UnitOfTime.MONTH) === 0\r\n              ? classes.month_selected\r\n              : classes.month\r\n          }`}\r\n        >\r\n          {Moment(month.from).format('MMMM')}\r\n        </div>\r\n      </div>\r\n\r\n      <div className={`col-3 align-self-center ${classes.income}`}>{(month.income / 100).toFixed(2)}</div>\r\n      <div className={`col-3 align-self-center ${classes.expense}`}>{(month.expense / 100).toFixed(2)}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nYearlyTableRow.propTypes = {};\r\n\r\nexport default YearlyTableRow;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport Moment from 'moment';\r\nimport {getYearlyOrWeekly} from '../service/TransactionService';\r\nimport {Month} from '../../../models/Transaction';\r\nimport NavBarMenu from '../../../layout/navBar/NavBar';\r\nimport InfoTableHead from '../components/InfoTableHead/InfoTableHead';\r\nimport YearlyTableRow from './components/YearlyTableRow';\r\nimport {UnitOfTime} from '../../../models/Clendar';\r\nimport {getTransactionDate} from '../../../helpers/transactionSelectors';\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n\r\nconst YearlyContainer = (): JSX.Element => {\r\n  const [monthsInYear, setMonthsInYear] = useState<Month[]>([]);\r\n  const [sumIncome, setSumIncome] = useState(0);\r\n  const [sumExpense, setSumExpense] = useState(0);\r\n\r\n  const transactionDate = useSelector(getTransactionDate);\r\n  const setMonths = (months: Month[]) => {\r\n    const year: Month[] = [];\r\n    const newMonths: Month[] = months.filter((month) => month.expense > 0 || month.income > 0);\r\n    let lastMonth: number = Moment().get(UnitOfTime.MONTH);\r\n    if (newMonths.length > 0 && lastMonth < Moment(newMonths[newMonths.length - 1].from).get(UnitOfTime.MONTH)) {\r\n      lastMonth = Moment(newMonths[newMonths.length - 1].from).get(UnitOfTime.MONTH);\r\n    }\r\n    for (let i = 0; i <= lastMonth; i += 1) {\r\n      if (newMonths.filter((month) => Moment(month.from).get(UnitOfTime.MONTH) === i).length > 0) {\r\n        year.push(newMonths.filter((month) => Moment(month.from).get(UnitOfTime.MONTH) === i)[0]);\r\n      } else {\r\n        year.push({\r\n          from: Moment().startOf(UnitOfTime.MONTH).set(UnitOfTime.MONTH, i).toDate(),\r\n          to: Moment().endOf(UnitOfTime.MONTH).set(UnitOfTime.MONTH, i).toDate(),\r\n          income: 0,\r\n          expense: 0\r\n        });\r\n      }\r\n    }\r\n    setMonthsInYear(year.reverse());\r\n  };\r\n\r\n  const getYear = async (date: Date) => {\r\n    const months: Month[] = [];\r\n\r\n    for (let i = 0; i <= 11; i += 1) {\r\n      months.push({\r\n        from: Moment(date).set(UnitOfTime.MONTH, i).startOf(UnitOfTime.MONTH).toDate(),\r\n        to: Moment(date).set(UnitOfTime.MONTH, i).endOf(UnitOfTime.MONTH).toDate(),\r\n        income: 0,\r\n        expense: 0\r\n      });\r\n    }\r\n\r\n    try {\r\n      const response = await getYearlyOrWeekly(months);\r\n      const {data} = response;\r\n\r\n      if (Moment(date).get(UnitOfTime.YEAR) < Moment().get(UnitOfTime.YEAR)) {\r\n        setMonthsInYear(data.months.reverse());\r\n        setSumExpense(data.sumExpense);\r\n        setSumIncome(data.sumIncome);\r\n      }\r\n\r\n      if (Moment(date).get(UnitOfTime.YEAR) === Moment().get(UnitOfTime.YEAR)) {\r\n        setMonths(data.months);\r\n        setSumExpense(data.sumExpense);\r\n        setSumIncome(data.sumIncome);\r\n      }\r\n      if (Moment(date).get(UnitOfTime.YEAR) > Moment().get(UnitOfTime.YEAR)) {\r\n        setMonthsInYear(data.months.filter((month: Month) => month.expense > 0 || month.income > 0).reverse());\r\n        setSumExpense(data.sumExpense);\r\n        setSumIncome(data.sumIncome);\r\n      }\r\n    } catch (error) {\r\n      throw new Error(error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getYear(transactionDate);\r\n  }, [transactionDate]);\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <NavBarMenu />\r\n      <div className=\"container\">\r\n        <InfoTableHead sumIncome={sumIncome} sumExpense={sumExpense} />\r\n        {monthsInYear.map((month) => (\r\n          <YearlyTableRow key={month.from.toString()} month={month} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default YearlyContainer;\r\n","import React from 'react';\r\nimport YearlyContainer from '../../modules/transaction/yearlyContainer/YearlyContainer';\r\nimport NavBar from '../../layout/header/Header';\r\nimport SideBar from '../../layout/sideBar/SideBar';\r\n\r\nconst YearlyPage = (): JSX.Element => {\r\n  return (\r\n    <div className=\"d-flex\">\r\n      <SideBar />\r\n      <div className=\"w-100\">\r\n        <NavBar />\r\n        <YearlyContainer />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default YearlyPage;\r\n","import React, {useCallback} from 'react';\r\nimport Moment from 'moment';\r\nimport {TransactionWithAmountNumber} from '../../../../models/Transaction';\r\nimport classes from '../MonthlyStyle.module.css';\r\nimport {UnitOfTime} from '../../../../models/Clendar';\r\nimport {isTheSameDate} from '../../../../helpers/MomentHelpers';\r\n\r\ntype Props = {\r\n  calendarDate: {date: Date};\r\n  transactions: TransactionWithAmountNumber[];\r\n  date: Date;\r\n  handleOpenInfoModal: (date: Date) => void;\r\n};\r\n\r\nconst CalendarDate: React.FC<Props> = ({calendarDate, transactions, date, handleOpenInfoModal}) => {\r\n  const openInfoModal = useCallback(() => {\r\n    handleOpenInfoModal(Moment(calendarDate.date).startOf(UnitOfTime.DATE).toDate());\r\n  }, [calendarDate.date, handleOpenInfoModal]);\r\n\r\n  return (\r\n    <div\r\n      role=\"button\"\r\n      tabIndex={0}\r\n      onKeyDown={openInfoModal}\r\n      className={`\r\n        ${\r\n          Moment(date).get(UnitOfTime.MONTH) === Moment(calendarDate.date).get(UnitOfTime.MONTH)\r\n            ? classes.calendar_date_box_container\r\n            : classes.calendar_date_box_container_other_month\r\n        }\r\n      `}\r\n      onClick={openInfoModal}\r\n    >\r\n      <div\r\n        className={\r\n          isTheSameDate(calendarDate.date, Moment().startOf(UnitOfTime.DATE).toDate())\r\n            ? classes.current_date\r\n            : classes.calendar_date\r\n        }\r\n      >\r\n        {Moment(calendarDate.date).get(UnitOfTime.DATE)}\r\n      </div>\r\n      {transactions.map((transaction) => {\r\n        const {_id: transactionId, income, expense} = transaction;\r\n        return isTheSameDate(calendarDate.date, transaction.createdAt) ? (\r\n          <div className=\"ps-3\" key={transactionId}>\r\n            <div className={` text-center ${classes.calendar_date_income}`}>{(income / 100).toFixed(2)}</div>\r\n            <div className={` text-center ${classes.calendar_date_expense}`}>{(expense / 100).toFixed(2)}</div>\r\n            <div className={` text-center ${classes.calendar_date_total}`}>{((income - expense) / 100).toFixed(2)}</div>\r\n          </div>\r\n        ) : null;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CalendarDate;\r\n","import React, {useState} from 'react';\r\nimport CalendarDate from './CalendarDate';\r\nimport {CalendarDates, TransactionWithAmountNumber} from '../../../../models/Transaction';\r\nimport {DaysOfWeek} from '../../../../models/Clendar';\r\n\r\ntype Props = {\r\n  calendarDates: CalendarDates[];\r\n  date: Date;\r\n  transactions: TransactionWithAmountNumber[];\r\n  handleOpenInfoModal: (date: Date) => void;\r\n};\r\n\r\nconst Calendar: React.FC<Props> = ({calendarDates, date, transactions, handleOpenInfoModal}) => {\r\n  const [days] = useState([\r\n    DaysOfWeek.MONDAY,\r\n    DaysOfWeek.THUESDAY,\r\n    DaysOfWeek.WEDNESDAY,\r\n    DaysOfWeek.THURSDAY,\r\n    DaysOfWeek.FRIDAY,\r\n    DaysOfWeek.SATURDAY,\r\n    DaysOfWeek.SUNDAY\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row text-center\">\r\n        {days.map((day) => (\r\n          <h4 key={day} className=\"col\">\r\n            {day}\r\n          </h4>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"row \">\r\n        {calendarDates.map((calendarDate: {date: Date}) => (\r\n          <CalendarDate\r\n            key={calendarDate.date.toString()}\r\n            calendarDate={calendarDate}\r\n            transactions={transactions}\r\n            date={date}\r\n            handleOpenInfoModal={handleOpenInfoModal}\r\n          />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n","import React, {useCallback} from 'react';\r\n\r\nimport {TransactionEventWithAmountNumber, TransactionTypes} from '../../../../models/Transaction';\r\nimport {isTransactionTypeIncome, isTransactionTypeExpense} from '../../../../helpers/TransactionHelpers';\r\n\r\ntype Props = {\r\n  handleOpenEdit: (event: TransactionEventWithAmountNumber) => void;\r\n  event: TransactionEventWithAmountNumber;\r\n};\r\nconst DailyInfoTableRow: React.FC<Props> = ({handleOpenEdit, event}) => {\r\n  const {category, from, account, to, type, amount, currency} = event;\r\n  const openEdit = useCallback(() => {\r\n    handleOpenEdit(event);\r\n  }, [event]);\r\n  return (\r\n    <tr role=\"button\" onClick={openEdit}>\r\n      <th>\r\n        {category}\r\n        {from}\r\n      </th>\r\n      <th>\r\n        {account}\r\n        {to}\r\n      </th>\r\n      <th className={`text-${type === TransactionTypes.INCOME ? 'success' : 'dark  '}`}>\r\n        {isTransactionTypeIncome(type, amount)} {currency}\r\n      </th>\r\n      <th className={`text-${type === TransactionTypes.EXPENSE ? 'danger' : 'dark  '}`}>\r\n        {isTransactionTypeExpense(type, amount)} {currency}\r\n      </th>\r\n    </tr>\r\n  );\r\n};\r\nexport default DailyInfoTableRow;\r\n","import React from 'react';\r\nimport Moment from 'moment';\r\nimport {TransactionEventWithAmountNumber, TransactionWithAmountNumber} from '../../../../models/Transaction';\r\nimport DailyInfoTableRow from './DailyInfoTableRow';\r\nimport classes from '../MonthlyStyle.module.css';\r\nimport languageWords from '../../../../helpers/LanguageConsts';\r\n\r\ntype Props = {\r\n  selectedTransaction: TransactionWithAmountNumber;\r\n  handleOpenEdit: (event: TransactionEventWithAmountNumber) => void;\r\n};\r\n\r\nconst DailyTransactions: React.FC<Props> = ({selectedTransaction, handleOpenEdit}) => {\r\n  const {createdAt, events} = selectedTransaction;\r\n  return (\r\n    <>\r\n      <div className=\"text-center font-weight-bold pt-sm-3 pb-3\">\r\n        <h5>{Moment(createdAt).format('DD.MM.YYYY(dddd)')}</h5>\r\n      </div>\r\n      <div className={classes.table_scroll}>\r\n        {events.length === 0 ? (\r\n          <div className=\"text-center\">{languageWords.NO_DATA_AVAILABLE}</div>\r\n        ) : (\r\n          <table className=\"table table-hover  \">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">Category</th>\r\n                <th scope=\"col\">Account</th>\r\n                <th scope=\"col\">Income</th>\r\n                <th scope=\"col\">Expense</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {events.map((event) => {\r\n                const {_id: eventId} = event;\r\n                return <DailyInfoTableRow key={eventId} event={event} handleOpenEdit={handleOpenEdit} />;\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default DailyTransactions;\r\n","import React, {useEffect, useState} from 'react';\r\nimport Moment from 'moment';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport NavBarMenu from '../../../layout/navBar/NavBar';\r\nimport Calendar from './Calendar/Calendar';\r\nimport {getSpecificDatePeriod} from '../service/TransactionService';\r\nimport {setIsTransactionOpen, setTransaction, setDate} from '../actions/transactionActions';\r\nimport {\r\n  Transaction,\r\n  TransactionEvent,\r\n  TransactionEventWithAmountNumber,\r\n  TransactionWithAmountNumber\r\n} from '../../../models/Transaction';\r\nimport {Error} from '../../../models/Error';\r\nimport '../../../scss/variables.scss';\r\nimport DailyTransactions from './components/DailyTransactions';\r\nimport {UnitOfTime} from '../../../models/Clendar';\r\nimport {\r\n  firstDateOfFirstWeekOfTheMonth,\r\n  lastDateOfLastWeekOfTheMonth,\r\n  isTheSameDate,\r\n  firstDateOfTheMonth,\r\n  lastDateOfTheMonth\r\n} from '../../../helpers/MomentHelpers';\r\nimport {getTransactionState} from '../../../helpers/transactionSelectors';\r\nimport {setAccount} from '../../login/actions/usersActions';\r\n\r\ntype State = {\r\n  isAddTransactionOpen: boolean;\r\n  isInfoTransactionOpen: boolean;\r\n  isEditTransactionOpen: boolean;\r\n  selectedDay: Transaction;\r\n  isTransfer: boolean;\r\n  errors: Error;\r\n  date: Date;\r\n  calendarDates: {date: Date}[];\r\n  transactions: Transaction[];\r\n};\r\n\r\nconst MonthlyContainer = (): JSX.Element => {\r\n  const [transactions, setTransactions] = useState<TransactionWithAmountNumber[]>([]);\r\n  const [selectedTransaction, setSelectedTransaction] = useState<TransactionWithAmountNumber>({\r\n    _id: '',\r\n    createdAt: Moment().startOf('date').toDate(),\r\n    events: [],\r\n    expense: 0,\r\n    income: 0\r\n  });\r\n\r\n  const [calendarDates, setCalendarDates] = useState<State['calendarDates']>([]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const stateTransaction = useSelector(getTransactionState);\r\n\r\n  // eslint-disable-next-line react/state-in-constructor\r\n\r\n  const getTransactions = async (date: Date) => {\r\n    const from: Date = firstDateOfFirstWeekOfTheMonth(date).toDate();\r\n    const to: Date = lastDateOfLastWeekOfTheMonth(date).toDate();\r\n\r\n    try {\r\n      const response = await getSpecificDatePeriod(from, to);\r\n      await response.data.transactions.forEach((transactionItem: TransactionWithAmountNumber) => {\r\n        if (isTheSameDate(selectedTransaction.createdAt, transactionItem.createdAt)) {\r\n          setSelectedTransaction(transactionItem);\r\n        }\r\n      });\r\n      setTransactions(response.data.transactions);\r\n\r\n      const isSelectedTransactionExist = response.data.transactions.find((element: TransactionWithAmountNumber) =>\r\n        isTheSameDate(selectedTransaction.createdAt, element.createdAt)\r\n      );\r\n\r\n      if (!isSelectedTransactionExist) {\r\n        setSelectedTransaction({\r\n          _id: '',\r\n          createdAt: date,\r\n          events: [],\r\n          expense: 0,\r\n          income: 0\r\n        });\r\n      }\r\n    } catch (error) {\r\n      throw new Error(error.message);\r\n    }\r\n  };\r\n\r\n  const handleOpenEdit = (event: TransactionEventWithAmountNumber) => {\r\n    const {_id: selectedTransactionId} = selectedTransaction;\r\n\r\n    const Event: TransactionEvent = {\r\n      ...event,\r\n      amount: (event.amount / 100).toFixed(2),\r\n      fees: (event.fees / 100).toFixed(2),\r\n      transactionId: selectedTransactionId\r\n    };\r\n\r\n    dispatch(setAccount(Event));\r\n    dispatch(setTransaction(Event));\r\n    dispatch(setIsTransactionOpen());\r\n  };\r\n\r\n  const selectedDay = (date: Date) => {\r\n    transactions.forEach((transaction) => {\r\n      if (isTheSameDate(date, transaction.createdAt)) {\r\n        setSelectedTransaction(transaction);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleOpenInfoModal = (date: Date) => {\r\n    dispatch(setDate(date));\r\n    setSelectedTransaction({_id: '', createdAt: date, events: [], expense: 0, income: 0});\r\n    selectedDay(date);\r\n  };\r\n\r\n  const setFirstWeek = (date: Date) => {\r\n    const lastDateOfPreviusMonth: number = Moment(date).set(UnitOfTime.DATE, 0).get(UnitOfTime.DATE);\r\n    const calendar: State['calendarDates'] = [];\r\n    for (let i = firstDateOfFirstWeekOfTheMonth(date).get(UnitOfTime.DATE); i <= lastDateOfPreviusMonth; i += 1) {\r\n      calendar.push({\r\n        date: Moment(firstDateOfFirstWeekOfTheMonth(date)).set(UnitOfTime.DATE, i).toDate()\r\n      });\r\n    }\r\n    return calendar;\r\n  };\r\n\r\n  const setLastWeek = (date: Date) => {\r\n    const calendar: State['calendarDates'] = [];\r\n    for (let i = 1; i <= lastDateOfLastWeekOfTheMonth(date).get(UnitOfTime.DATE); i += 1) {\r\n      calendar.push({\r\n        date: Moment(lastDateOfLastWeekOfTheMonth(date)).startOf(UnitOfTime.DATE).set(UnitOfTime.DATE, i).toDate()\r\n      });\r\n    }\r\n    return calendar;\r\n  };\r\n\r\n  const setCalendar = async (date: Date) => {\r\n    setCalendarDates([]);\r\n    let calendar: State['calendarDates'] = [];\r\n\r\n    if (firstDateOfTheMonth(date).get(UnitOfTime.DAY) !== 1) {\r\n      calendar = setFirstWeek(date);\r\n    }\r\n\r\n    for (let i = 1; i <= lastDateOfTheMonth(date).get(UnitOfTime.DATE); i += 1) {\r\n      calendar.push({\r\n        date: Moment(firstDateOfTheMonth(date)).set(UnitOfTime.DATE, i).toDate()\r\n      });\r\n    }\r\n\r\n    if (lastDateOfTheMonth(date).get(UnitOfTime.DAY) !== 0) {\r\n      setLastWeek(date);\r\n      calendar = calendar.concat(setLastWeek(date));\r\n    }\r\n\r\n    setCalendarDates(calendar);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTransactions(stateTransaction.date);\r\n    setCalendar(stateTransaction.date);\r\n  }, [stateTransaction.isTransactionOpen, stateTransaction.date]);\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <NavBarMenu />\r\n      <div className=\"row mt-5\">\r\n        <div className=\"col-xxl-7 col-xl-12 pe-4  \">\r\n          <Calendar\r\n            handleOpenInfoModal={handleOpenInfoModal}\r\n            transactions={transactions}\r\n            calendarDates={calendarDates}\r\n            date={stateTransaction.date}\r\n          />\r\n        </div>\r\n\r\n        <div className={`col-xxl-5 col-xl-12  p-2 pt-sm-5 pt-xxl-0 `}>\r\n          <DailyTransactions selectedTransaction={selectedTransaction} handleOpenEdit={handleOpenEdit} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonthlyContainer;\r\n","import React from 'react';\r\nimport NavBar from '../../layout/header/Header';\r\nimport SideBar from '../../layout/sideBar/SideBar';\r\nimport MonthlyContainer from '../../modules/transaction/monthlyContainer/MonthlyContainer';\r\n\r\nconst MonthlyPage = (): JSX.Element => {\r\n  return (\r\n    <div className=\"d-flex\">\r\n      <SideBar />\r\n      <div className=\"w-100\">\r\n        <NavBar />\r\n        <MonthlyContainer />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonthlyPage;\r\n","import React from 'react';\r\nimport {PieChart} from 'react-minimal-pie-chart';\r\nimport languageWords from '../../../helpers/LanguageConsts';\r\nimport {Stat} from '../../../models/Stat';\r\nimport './StatsFormStyle.css';\r\n\r\ntype Props = {\r\n  stats: Stat[];\r\n  isIncome: boolean;\r\n  selected: number | undefined;\r\n  handleSelect: (value: {index: number | undefined; isIncome: boolean}) => void;\r\n};\r\nconst StatsForm: React.FC<Props> = ({stats, isIncome, selected, handleSelect}) => {\r\n  let sumValue = 0;\r\n  stats.forEach((stat) => {\r\n    sumValue += stat.value;\r\n  });\r\n\r\n  const data = stats.map((entry, i) => {\r\n    if (selected === i) {\r\n      return {\r\n        ...entry,\r\n        color: 'grey'\r\n      };\r\n    }\r\n    return entry;\r\n  });\r\n\r\n  const lineWidth = 60;\r\n\r\n  return (\r\n    <div className=\"col text-center form_wrapper\">\r\n      <div className=\"row justify-content-center title_stats\">{isIncome ? 'Income' : 'Expense'}</div>\r\n      {stats.length === 0 ? (\r\n        <div className=\"stats_error\">{languageWords.NO_DATA_AVAILABLE}</div>\r\n      ) : (\r\n        <>\r\n          <div className=\"row justify-content-center\">\r\n            <PieChart\r\n              style={{\r\n                fontFamily: '\"Nunito Sans\", -apple-system, Helvetica, Arial, sans-serif',\r\n                fontSize: '0.3rem',\r\n                width: '420px'\r\n              }}\r\n              data={data}\r\n              radius={PieChart.defaultProps.radius - 6}\r\n              lineWidth={60}\r\n              segmentsStyle={{\r\n                transition: 'stroke .3s',\r\n                cursor: 'pointer'\r\n              }}\r\n              segmentsShift={(index) => (index === selected ? 6 : 1)}\r\n              animate\r\n              label={({dataEntry}) => ` ${dataEntry.percentage.toFixed(1)} %`}\r\n              labelPosition={100 - lineWidth / 2}\r\n              labelStyle={{\r\n                fill: '#fff',\r\n\r\n                pointerEvents: 'none'\r\n              }}\r\n              onClick={(_, index) => {\r\n                if (selected === index) {\r\n                  handleSelect({index: undefined, isIncome});\r\n                } else {\r\n                  handleSelect({index, isIncome});\r\n                }\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"row justify-content-center mt-5\">\r\n            <table className=\"content_table\">\r\n              <tbody>\r\n                {stats.map((stat: Stat, index: number) => (\r\n                  <tr\r\n                    className={`${index === selected ? 'table_row_selected' : 'table_row'}`}\r\n                    onMouseEnter={() => handleSelect({index, isIncome})}\r\n                    onMouseLeave={() => handleSelect({index: undefined, isIncome})}\r\n                  >\r\n                    <td className=\"percent_container\">\r\n                      <div className=\"percent\" style={{backgroundColor: stat.color}} />\r\n                    </td>\r\n                    <td>{((stat.value / sumValue) * 100).toFixed(1)}%</td>\r\n                    <td>{stat.category.charAt(0).toUpperCase() + stat.category.slice(1)}</td>\r\n                    <td className=\"amount\">{(stat.value / 100).toFixed(2)} BGN</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatsForm;\r\n","import {AxiosResponse} from 'axios';\r\nimport moment from 'moment';\r\nimport axiosConfig from '../../../axiosConfig';\r\nimport {STATS} from '../../../helpers/axiosRoutes.ts/statRoutes';\r\n\r\nconst config = {\r\n  headers: {\r\n    Authorization: `Bearer ${localStorage.getItem('jwt')}`\r\n  }\r\n};\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const getStatsInSpecificDatePeriod = async (from: Date, to: Date): Promise<AxiosResponse> => {\r\n  return axiosConfig.get(`${STATS}/${moment(from).toISOString()}/${moment(to).toISOString()}`, config);\r\n};\r\n","export const STATS = '/stats';\r\n","import {Stat} from '../models/Stat';\r\n\r\nconst colors: string[] = [\r\n  '#C94D6D',\r\n  '#4174C9',\r\n  '#E4BF58',\r\n  '#7CDDDD',\r\n  '#7031AC',\r\n  '#3C9D4E',\r\n  '#8B008B',\r\n  '#BDB76B',\r\n  '#8B0000',\r\n  '#E9967A',\r\n  '#2F4F4F',\r\n  '#4B0082',\r\n  '#9ACD32'\r\n];\r\nexport const setStatColor = (stats: Stat[]): Stat[] => {\r\n  stats.sort((a: Stat, b: Stat) => b.value - a.value);\r\n  const statsNewColor: Stat[] = [];\r\n  stats.forEach((element: Stat, index: number) => {\r\n    statsNewColor.push({...element, color: colors[index]});\r\n  });\r\n  return statsNewColor;\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport Moment from 'moment';\r\nimport {TransactionReducer} from '../../../models/Transaction';\r\nimport NavBarMenu from '../../../layout/navBar/NavBar';\r\nimport StatsForm from '../components/StatsForm';\r\nimport {getStatsInSpecificDatePeriod} from '../service/StatsService';\r\nimport {setStatColor} from '../../../helpers/StatHelper';\r\nimport {Stat} from '../../../models/Stat';\r\n\r\nconst WeeklyContainer = (): JSX.Element => {\r\n  const [incomeStats, setIncomeStats] = useState<Stat[]>([]);\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n  const [expenseStats, setExpenseStats] = useState<Stat[]>([]);\r\n  const [selectedIncome, setSelectedIncome] = useState<number | undefined>();\r\n  const [selectedExpense, setSelectedExpense] = useState<number | undefined>();\r\n  const stateTransaction = useSelector((state: {transactionReducer: TransactionReducer}) => state.transactionReducer);\r\n\r\n  const handleSelect = (value: {index: number | undefined; isIncome: boolean}) => {\r\n    if (value.isIncome) {\r\n      setSelectedIncome(value.index);\r\n    } else {\r\n      setSelectedExpense(value.index);\r\n    }\r\n  };\r\n  const getMonthlyStats = async (date: Date) => {\r\n    setIsLoading(true);\r\n    try {\r\n      const from: Date = Moment(date).set('day', 1).toDate();\r\n      const to: Date = Moment(date).set('day', 7).toDate();\r\n\r\n      const response = await getStatsInSpecificDatePeriod(from, to);\r\n\r\n      const income = setStatColor(response.data.incomeStats);\r\n      const expense = setStatColor(response.data.expenseStats);\r\n\r\n      setIncomeStats(income);\r\n      setExpenseStats(expense);\r\n      setIsLoading(false);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMonthlyStats(stateTransaction.date);\r\n  }, [stateTransaction.date]);\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <NavBarMenu />\r\n      {!isLoading && (\r\n        <div className=\"row justify-content-evenly \">\r\n          <StatsForm stats={incomeStats} isIncome selected={selectedIncome} handleSelect={handleSelect} />\r\n          <StatsForm stats={expenseStats} isIncome={false} selected={selectedExpense} handleSelect={handleSelect} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeeklyContainer;\r\n","import React from 'react';\r\nimport NavBar from '../../layout/header/Header';\r\nimport SideBar from '../../layout/sideBar/SideBar';\r\nimport WeeklyContainer from '../../modules/stats/weeklyContainer/WeeklyContainer';\r\n\r\nconst WeeklyPage = (): JSX.Element => {\r\n  return (\r\n    <div className=\"d-flex\">\r\n      <SideBar />\r\n      <div className=\"w-100\">\r\n        <NavBar />\r\n        <WeeklyContainer />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeeklyPage;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport axiosConfig from '../../../axiosConfig';\r\nimport NavBarMenu from '../../../layout/navBar/NavBar';\r\nimport {TransactionReducer} from '../../../models/Transaction';\r\nimport StatsForm from '../components/StatsForm';\r\nimport '../components/StatsFormStyle.css';\r\n\r\nconst DailyContainer = (): JSX.Element => {\r\n  const [incomeStats, setIncomeStats] = useState([]);\r\n  const [expenseStats, setExpenseStats] = useState([]);\r\n  const [selectedIncome, setSelectedIncome] = useState<number | undefined>();\r\n  const [selectedExpense, setSelectedExpense] = useState<number | undefined>();\r\n\r\n  const stateTransaction = useSelector((state: {transactionReducer: TransactionReducer}) => state.transactionReducer);\r\n  const getDailyStats = async () => {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem('jwt')}`\r\n      }\r\n    };\r\n\r\n    try {\r\n      // TODO TODO/mockup dates//\r\n      const response = await axiosConfig.get(`/stats/2020-01-28T22:00:00.000Z/2021-12-30T21:00:00.000Z`, config);\r\n\r\n      setIncomeStats(response.data.incomeStats);\r\n      setExpenseStats(response.data.expenseStats);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n  const handleSelect = (value: {index: number | undefined; isIncome: boolean}) => {\r\n    if (value.isIncome) {\r\n      setSelectedIncome(value.index);\r\n    } else {\r\n      setSelectedExpense(value.index);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getDailyStats();\r\n  }, [stateTransaction.date]);\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <NavBarMenu />\r\n      <div className=\"row justify-content-evenly\">\r\n        <StatsForm stats={incomeStats} isIncome selected={selectedIncome} handleSelect={handleSelect} />\r\n        <StatsForm stats={expenseStats} isIncome={false} selected={selectedExpense} handleSelect={handleSelect} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DailyContainer;\r\n","import React from 'react';\r\nimport NavBar from '../../layout/header/Header';\r\nimport SideBar from '../../layout/sideBar/SideBar';\r\nimport DailyContainer from '../../modules/stats/periodContainer/DailyContainer';\r\n\r\nconst PeriodPage = (): JSX.Element => {\r\n  return (\r\n    <div className=\"d-flex\">\r\n      <SideBar />\r\n      <div className=\"w-100\">\r\n        <NavBar />\r\n        <DailyContainer />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PeriodPage;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport {firstDateOfTheYear, lastDateOfTheYear} from '../../../helpers/MomentHelpers';\r\nimport {setStatColor} from '../../../helpers/StatHelper';\r\nimport NavBarMenu from '../../../layout/navBar/NavBar';\r\nimport {Stat} from '../../../models/Stat';\r\nimport {TransactionReducer} from '../../../models/Transaction';\r\nimport StatsForm from '../components/StatsForm';\r\nimport {getStatsInSpecificDatePeriod} from '../service/StatsService';\r\n\r\nconst YearlyContainer = (): JSX.Element => {\r\n  const [incomeStats, setIncomeStats] = useState<Stat[]>([]);\r\n  const [expenseStats, setExpenseStats] = useState<Stat[]>([]);\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n  const [selectedIncome, setSelectedIncome] = useState<number | undefined>();\r\n  const [selectedExpense, setSelectedExpense] = useState<number | undefined>();\r\n  const stateTransaction = useSelector((state: {transactionReducer: TransactionReducer}) => state.transactionReducer);\r\n\r\n  const getYearlyStats = async (date: Date) => {\r\n    setIsLoading(true);\r\n    try {\r\n      const from: Date = firstDateOfTheYear(date).toDate();\r\n      const to: Date = lastDateOfTheYear(date).toDate();\r\n      const response = await getStatsInSpecificDatePeriod(from, to);\r\n\r\n      const income = setStatColor(response.data.incomeStats);\r\n      const expense = setStatColor(response.data.expenseStats);\r\n\r\n      setIncomeStats(income);\r\n      setExpenseStats(expense);\r\n      setIsLoading(false);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  const handleSelect = (value: {index: number | undefined; isIncome: boolean}) => {\r\n    if (value.isIncome) {\r\n      setSelectedIncome(value.index);\r\n    } else {\r\n      setSelectedExpense(value.index);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getYearlyStats(stateTransaction.date);\r\n  }, [stateTransaction.date]);\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <NavBarMenu />\r\n      {!isLoading && (\r\n        <div className=\"row justify-content-evenly \">\r\n          <StatsForm stats={incomeStats} isIncome selected={selectedIncome} handleSelect={handleSelect} />\r\n          <StatsForm stats={expenseStats} isIncome={false} selected={selectedExpense} handleSelect={handleSelect} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default YearlyContainer;\r\n","import React from 'react';\r\nimport NavBar from '../../layout/header/Header';\r\nimport SideBar from '../../layout/sideBar/SideBar';\r\nimport YearlyContainer from '../../modules/stats/yearlyContainer/YearlyContainer';\r\n\r\nconst YearlyPage = (): JSX.Element => {\r\n  return (\r\n    <div className=\"d-flex\">\r\n      <SideBar />\r\n      <div className=\"w-100\">\r\n        <NavBar />\r\n        <YearlyContainer />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default YearlyPage;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport NavBarMenu from '../../../layout/navBar/NavBar';\r\nimport StatsForm from '../components/StatsForm';\r\nimport {getStatsInSpecificDatePeriod} from '../service/StatsService';\r\nimport {firstDateOfTheMonth, lastDateOfTheMonth} from '../../../helpers/MomentHelpers';\r\nimport {TransactionReducer} from '../../../models/Transaction';\r\nimport '../../../scss/variables.scss';\r\nimport {setStatColor} from '../../../helpers/StatHelper';\r\nimport {Stat} from '../../../models/Stat';\r\n\r\nconst MonthlyContainer = (): JSX.Element => {\r\n  const [incomeStats, setIncomeStats] = useState<Stat[]>([]);\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n  const [expenseStats, setExpenseStats] = useState<Stat[]>([]);\r\n  const [selectedIncome, setSelectedIncome] = useState<number | undefined>();\r\n  const [selectedExpense, setSelectedExpense] = useState<number | undefined>();\r\n  const stateTransaction = useSelector((state: {transactionReducer: TransactionReducer}) => state.transactionReducer);\r\n\r\n  const handleSelect = (value: {index: number | undefined; isIncome: boolean}) => {\r\n    if (value.isIncome) {\r\n      setSelectedIncome(value.index);\r\n    } else {\r\n      setSelectedExpense(value.index);\r\n    }\r\n  };\r\n  const getMonthlyStats = async (date: Date) => {\r\n    setIsLoading(true);\r\n    try {\r\n      const from: Date = firstDateOfTheMonth(date).toDate();\r\n      const to: Date = lastDateOfTheMonth(date).toDate();\r\n\r\n      const response = await getStatsInSpecificDatePeriod(from, to);\r\n\r\n      const income = setStatColor(response.data.incomeStats);\r\n      const expense = setStatColor(response.data.expenseStats);\r\n\r\n      setIncomeStats(income);\r\n      setExpenseStats(expense);\r\n      setIsLoading(false);\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMonthlyStats(stateTransaction.date);\r\n  }, [stateTransaction.date]);\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <NavBarMenu />\r\n      {!isLoading && (\r\n        <div className=\"row justify-content-evenly \">\r\n          <StatsForm stats={incomeStats} isIncome selected={selectedIncome} handleSelect={handleSelect} />\r\n          <StatsForm stats={expenseStats} isIncome={false} selected={selectedExpense} handleSelect={handleSelect} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonthlyContainer;\r\n","import React from 'react';\r\nimport NavBar from '../../layout/header/Header';\r\nimport SideBar from '../../layout/sideBar/SideBar';\r\nimport MonthlyContainer from '../../modules/stats/monthlyContainer/MonthlyContainer';\r\n\r\nconst MonthlyPage = (): JSX.Element => {\r\n  return (\r\n    <div className=\"d-flex\">\r\n      <SideBar />\r\n      <div className=\"w-100\">\r\n        <NavBar />\r\n        <MonthlyContainer />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonthlyPage;\r\n","import {AxiosResponse} from 'axios';\r\nimport moment from 'moment';\r\nimport {OptionsType, OptionTypeBase} from 'react-select';\r\nimport axiosConfig from '../../../axiosConfig';\r\nimport {EXPORT} from '../../../helpers/axiosRoutes.ts/exportRoutes';\r\n\r\nconst config = {\r\n  headers: {\r\n    Authorization: `Bearer ${localStorage.getItem('jwt')}`\r\n  }\r\n};\r\nexport const getExportApiData = async (\r\n  from: Date,\r\n  to: Date,\r\n  type: string,\r\n  selectedAccounts: OptionTypeBase | OptionsType<OptionTypeBase> | null\r\n): Promise<AxiosResponse> => {\r\n  return axiosConfig.post(\r\n    `${EXPORT}/${moment(from).toISOString()}/${moment(to).toISOString()}/${type}`,\r\n    selectedAccounts,\r\n    config\r\n  );\r\n};\r\n","export const EXPORT = '/export';\r\n","import React, {forwardRef, useCallback, useEffect, useState, CSSProperties} from 'react';\r\nimport {CSVLink} from 'react-csv';\r\nimport Moment from 'moment';\r\nimport Select, {OptionsType, OptionTypeBase, StylesConfig, components} from 'react-select';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faCalendarDay} from '@fortawesome/free-solid-svg-icons';\r\nimport makeAnimated from 'react-select/animated';\r\nimport DatePicker from 'react-datepicker';\r\nimport classes from './ExportStyle.module.css';\r\nimport {errorMsg} from '../../helpers/Validation';\r\nimport {getExportApiData} from './service/ExportService';\r\nimport {TransactionEvent} from '../../models/Transaction';\r\n\r\ntype CustomInput = {\r\n  value: string | number;\r\n  onClick: React.MouseEventHandler<HTMLInputElement> | undefined;\r\n};\r\ntype MyOptionType = {\r\n  label: string;\r\n  value: string;\r\n};\r\n\r\nconst animatedComponents = makeAnimated();\r\nconst ExportContainer = (): JSX.Element => {\r\n  const [selectedType, setSelectedType] = useState<OptionTypeBase>({\r\n    label: 'Income',\r\n    value: 'income'\r\n  });\r\n  const [selectedAccounts, setSelectedAccounts] = useState<OptionTypeBase | OptionsType<OptionTypeBase> | null>([]);\r\n  const [from, setFrom] = useState<Date>(Moment().toDate());\r\n  const [to, setTo] = useState(Moment().toDate());\r\n  const [error, setError] = useState('');\r\n  const [exportData, setExportData] = useState<TransactionEvent[]>([]);\r\n\r\n  const types: MyOptionType[] = [\r\n    {label: 'Income', value: 'income'},\r\n    {label: 'Expense', value: 'expense'},\r\n    {label: 'Income&Expense', value: 'income & expense'}\r\n  ];\r\n  const accounts: MyOptionType[] = [\r\n    {label: 'Card', value: 'card'},\r\n    {label: 'Accounts', value: 'accounts'},\r\n    {label: 'Cash', value: 'cash'}\r\n  ];\r\n\r\n  const dateFormat = 'dd/MM/yyyy';\r\n  const getExportData = async () => {\r\n    const response = await getExportApiData(from, to, selectedType.value, selectedAccounts);\r\n\r\n    setExportData(response.data);\r\n  };\r\n\r\n  const handleSetFromDate = useCallback(\r\n    (date) => {\r\n      setFrom(date);\r\n      if (date > to) {\r\n        setTo(date);\r\n      }\r\n    },\r\n    [from]\r\n  );\r\n  const handleSetToDate = useCallback(\r\n    (date) => {\r\n      setTo(date);\r\n    },\r\n    [to]\r\n  );\r\n\r\n  const selectType = (option: OptionTypeBase) => {\r\n    setSelectedType(option);\r\n  };\r\n  const handleAccountSelect = (option: OptionTypeBase | OptionsType<OptionTypeBase> | null) => {\r\n    setSelectedAccounts(option);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getExportData();\r\n    if (selectedAccounts?.length > 0) {\r\n      setError('');\r\n    }\r\n  }, [selectedType, selectedAccounts, from, to]);\r\n  const ExampleCustomInput = forwardRef(\r\n    ({value, onClick}: CustomInput, ref: React.LegacyRef<HTMLInputElement> | undefined) => (\r\n      <div\r\n        className=\"row align-items-center\"\r\n        role=\"button\"\r\n        tabIndex={0}\r\n        onKeyDown={() => onClick}\r\n        onClick={onClick}\r\n        ref={ref}\r\n      >\r\n        <div className={`col-10 ps-4 `}>{value}</div>\r\n        <div className={`col-2 d-flex justify-content-end `}>\r\n          <FontAwesomeIcon className={classes.calendar_icon} icon={faCalendarDay} />\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n\r\n  const customControlStyles: CSSProperties = {\r\n    height: '100%',\r\n    minHeight: '50px',\r\n    fontSize: '1.2rem',\r\n    borderRadius: '6px',\r\n    border: '2px solid #0160b2'\r\n  };\r\n\r\n  const customPlaceholderStyle: CSSProperties = {\r\n    fontSize: '1.2rem',\r\n    color: '#0160b2'\r\n  };\r\n  const customOptionStyle: CSSProperties = {\r\n    color: '#0160b2',\r\n    fontSize: '1.2rem'\r\n  };\r\n  const customMenuStyle: CSSProperties = {\r\n    color: 'white',\r\n    fontSize: '1.2rem',\r\n    border: '2px solid #0160b2'\r\n  };\r\n  const customSingleValueStyle: CSSProperties = {\r\n    color: '#0160b2'\r\n  };\r\n\r\n  const customIndicator: CSSProperties = {\r\n    color: '#0160b2',\r\n    cursor: 'pointer'\r\n  };\r\n  type IsMulti = true;\r\n\r\n  const selectStyle: StylesConfig<OptionTypeBase, IsMulti> = {\r\n    control: (provided) => {\r\n      return {\r\n        ...provided,\r\n        ...customControlStyles\r\n      };\r\n    },\r\n    placeholder: (provided) => {\r\n      return {\r\n        ...provided,\r\n        ...customPlaceholderStyle\r\n      };\r\n    },\r\n    indicatorSeparator: () => {\r\n      return {visible: 'none'};\r\n    },\r\n    option: (provided, state) => {\r\n      return {\r\n        ...provided,\r\n        ...customOptionStyle,\r\n        fontWeight: state.isSelected ? 'bolder' : 'lighter',\r\n        backgroundColor: state.isSelected ? '#0160b2' : 'white',\r\n        color: state.isSelected ? 'white' : '#0160b2'\r\n      };\r\n    },\r\n    menu: (provided) => {\r\n      return {\r\n        ...provided,\r\n        ...customMenuStyle\r\n      };\r\n    },\r\n    singleValue: (provided) => {\r\n      return {\r\n        ...provided,\r\n        ...customSingleValueStyle\r\n      };\r\n    },\r\n    noOptionsMessage: (provided) => {\r\n      return {\r\n        ...provided,\r\n        ...customSingleValueStyle\r\n      };\r\n    },\r\n\r\n    clearIndicator: () => {\r\n      return {\r\n        ...customIndicator\r\n      };\r\n    },\r\n    dropdownIndicator: (provided) => {\r\n      return {\r\n        ...provided,\r\n        ...customIndicator\r\n      };\r\n    }\r\n  };\r\n  const ValueContainer = ({children, getValue, ...props}: any) => {\r\n    const {hasValue} = props;\r\n    const nbValues = getValue().length;\r\n    if (!hasValue) {\r\n      // eslint-disable-next-line react/jsx-props-no-spreading\r\n      return <components.ValueContainer {...props}>{children}</components.ValueContainer>;\r\n    }\r\n    // eslint-disable-next-line react/jsx-props-no-spreading\r\n    return <components.ValueContainer {...props}>{`${nbValues} accounts`}</components.ValueContainer>;\r\n  };\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"container-xx mt-5 \">\r\n        <div className=\"row justify-content-between \">\r\n          <div className=\"col-xxl col-sm-12 col-lg-6 mb-2\">\r\n            <div className={classes.label}>Transaction Type</div>\r\n            <Select\r\n              value={selectedType}\r\n              styles={selectStyle}\r\n              onChange={(option) => selectType(option)}\r\n              components={animatedComponents}\r\n              options={types}\r\n            />\r\n          </div>\r\n          <div className=\"col-xxl col-sm-12 col-lg-6 mb-2\">\r\n            <div className={classes.label}>Account</div>\r\n            <Select\r\n              isMulti\r\n              hideSelectedOptions={false}\r\n              value={selectedAccounts}\r\n              styles={selectStyle}\r\n              closeMenuOnSelect={false}\r\n              onChange={(option) => handleAccountSelect(option)}\r\n              components={{ValueContainer}}\r\n              options={accounts}\r\n            />\r\n            <div className={classes.error_accout}>{errorMsg(error)}</div>\r\n          </div>\r\n          <div className=\"col-xxl col-sm-12 col-lg-6 mb-2\">\r\n            <div className={classes.label}>From</div>\r\n            <DatePicker\r\n              wrapperClassName={classes.input}\r\n              selected={from}\r\n              dateFormat={dateFormat}\r\n              onChange={handleSetFromDate}\r\n              timeCaption=\"time\"\r\n              customInput={React.createElement(ExampleCustomInput)}\r\n            />\r\n          </div>\r\n          <div className=\"col-xxl col-sm-12 col-lg-6 mb-2\">\r\n            <div className={classes.label}>To</div>\r\n            <DatePicker\r\n              wrapperClassName={classes.input}\r\n              selected={to}\r\n              dateFormat={dateFormat}\r\n              onChange={handleSetToDate}\r\n              timeCaption=\"time\"\r\n              minDate={from}\r\n              customInput={React.createElement(ExampleCustomInput)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-xxl col-sm-12 mb-2 mt-4\">\r\n            {selectedAccounts?.length === 0 ? (\r\n              <div className=\"row align-items-end justify-content-center\">\r\n                <button\r\n                  onClick={() => {\r\n                    setError('Please select an account');\r\n                  }}\r\n                  type=\"button\"\r\n                  className={classes.export_disabled_button}\r\n                >\r\n                  Export CSV\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <div className=\"row align-items-end justify-content-center\">\r\n                <CSVLink\r\n                  className={classes.export_button}\r\n                  data={exportData}\r\n                  filename={`${selectedType.value} - ${Moment(from).format('MMMM Do YYYY')} - ${Moment(to).format(\r\n                    'MMMM Do YYYY'\r\n                  )}.csv`}\r\n                  target=\"_blank\"\r\n                >\r\n                  Export CSV\r\n                </CSVLink>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExportContainer;\r\n","import React from 'react';\r\nimport NavBar from '../../layout/header/Header';\r\nimport SideBar from '../../layout/sideBar/SideBar';\r\nimport ExportContainer from '../../modules/export/ExportContainer';\r\n\r\nconst ExportPage = (): JSX.Element => {\r\n  return (\r\n    <div className=\"d-flex\">\r\n      <SideBar />\r\n      <div className=\"w-100\">\r\n        <NavBar />\r\n        <ExportContainer />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExportPage;\r\n","import React, {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport HomePage from './pages/homePage/HomePage';\r\nimport LoginPage from './pages/loginPage/LoginPage';\r\nimport WeeklyPage from './pages/transactionPages/WeeklyPage';\r\nimport DailyPage from './pages/transactionPages/DailyPage';\r\nimport YearlyPage from './pages/transactionPages/YearlyPage';\r\nimport MonthlyPage from './pages/transactionPages/MonthlyPage';\r\nimport WeeklyStatsPage from './pages/statsPage/WeeklyPage';\r\nimport PeriodStatsPage from './pages/statsPage/PeriodPage';\r\nimport YearlyStatsPage from './pages/statsPage/YearlyPage';\r\nimport MonthlyStatsPage from './pages/statsPage/MonthlyPage';\r\nimport ExportPage from './pages/exportPage/ExportPage';\r\n\r\nconst Routes = (): JSX.Element => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/authentication\" exact component={LoginPage} />\r\n        <Route path=\"/\" exact component={HomePage} />\r\n        <Route path=\"/profile\" exact component={HomePage} />\r\n        <Route path=\"/transaction/monthly\" exact component={MonthlyPage} />\r\n        <Route path=\"/transaction/daily\" exact component={DailyPage} />\r\n        <Route path=\"/transaction/yearly\" exact component={YearlyPage} />\r\n        <Route path=\"/transaction/weekly\" exact component={WeeklyPage} />\r\n        <Route path=\"/transaction/period\" exact component={MonthlyPage} />\r\n        <Route path=\"/stats/monthly\" exact component={MonthlyStatsPage} />\r\n        <Route path=\"/stats/yearly\" exact component={YearlyStatsPage} />\r\n        <Route path=\"/stats/weekly\" exact component={WeeklyStatsPage} />\r\n        <Route path=\"/stats/period\" exact component={PeriodStatsPage} />\r\n        <Route path=\"/export\" exact component={ExportPage} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport AuthProvider from './helpers/AuthProvider';\r\nimport Routes from './routes';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nexport const App = (): JSX.Element => {\r\n  return (\r\n    <AuthProvider>\r\n      <Routes />\r\n    </AuthProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import {ReportHandler} from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","/* eslint-disable @typescript-eslint/dot-notation */\r\nimport {AnyAction} from 'redux';\r\nimport {TransactionTypes} from '../../../models/Transaction';\r\nimport {User, UserAccounts} from '../../../models/User';\r\nimport {ActionTypes} from '../actionTypes';\r\n\r\nexport interface State {\r\n  user: User;\r\n  token: string;\r\n  loading: boolean;\r\n}\r\n\r\nconst initialState = {\r\n  user: {\r\n    email: '',\r\n    categories: [],\r\n    createdAt: '',\r\n    username: '',\r\n    updatedAt: '',\r\n    accounts: [],\r\n    type: '',\r\n    id: ''\r\n  },\r\n  expenseCategories: [],\r\n  incomeCategories: [],\r\n  token: '',\r\n  loading: true\r\n};\r\n\r\nconst signInStateChange = (state: State, payload: AnyAction) => {\r\n  if (payload.token) {\r\n    localStorage.setItem('jwt', payload.token);\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    user: payload.user,\r\n    token: payload.token,\r\n    loading: false\r\n  };\r\n};\r\n\r\nconst saveUserInState = (state: State, payload: AnyAction) => {\r\n  if (payload.token) {\r\n    localStorage.setItem('jwt', payload.token);\r\n  }\r\n  return {\r\n    ...state,\r\n    user: payload.user,\r\n    expenseCategories: payload.expenseCategories.expenseCategories,\r\n    incomeCategories: payload.incomeCategories.incomeCategories,\r\n    token: payload.token\r\n  };\r\n};\r\n\r\nconst setAccounts = (state: State, payload: AnyAction) => {\r\n  return {\r\n    ...state,\r\n    user: {\r\n      ...state.user,\r\n      accounts: [\r\n        {\r\n          ...state.user.accounts[0],\r\n          accounts: payload.accounts\r\n        }\r\n      ]\r\n    }\r\n  };\r\n};\r\nconst setAccount = (state: State, payload: AnyAction) => {\r\n  let setAcc: UserAccounts[] = [];\r\n\r\n  if (payload.type === TransactionTypes.INCOME) {\r\n    setAcc = [\r\n      {\r\n        ...state.user.accounts[0],\r\n        accounts: {\r\n          ...state.user.accounts[0].accounts,\r\n          [payload.account]: state.user.accounts[0].accounts[payload.account] - payload.amount * 100\r\n        }\r\n      }\r\n    ];\r\n  }\r\n  if (payload.type === TransactionTypes.TRANSFER) {\r\n    setAcc = [\r\n      {\r\n        ...state.user.accounts[0],\r\n        accounts: {\r\n          ...state.user.accounts[0].accounts,\r\n          [payload.from]: state.user.accounts[0].accounts[payload.from] + payload.amount * 100 + payload.fees * 100,\r\n          [payload.to]: state.user.accounts[0].accounts[payload.to] - payload.amount * 100\r\n        }\r\n      }\r\n    ];\r\n  }\r\n  if (payload.type === TransactionTypes.EXPENSE) {\r\n    setAcc = [\r\n      {\r\n        ...state.user.accounts[0],\r\n        accounts: {\r\n          ...state.user.accounts[0].accounts,\r\n          [payload.account]: state.user.accounts[0].accounts[payload.account] + payload.amount * 100\r\n        }\r\n      }\r\n    ];\r\n  }\r\n  return {\r\n    ...state,\r\n    user: {\r\n      ...state.user,\r\n      accounts: setAcc\r\n    }\r\n  };\r\n};\r\nexport const userReducer = (state = initialState, action: AnyAction): State => {\r\n  switch (action.type) {\r\n    case ActionTypes.SIGN_IN:\r\n      return signInStateChange(state, action.payload);\r\n    case ActionTypes.SAVE_USER:\r\n      return saveUserInState(state, action.payload);\r\n    case ActionTypes.SET_ACCOUNTS:\r\n      return setAccounts(state, action.payload);\r\n    case ActionTypes.SET_ACCOUNT:\r\n      return setAccount(state, action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import Moment from 'moment';\r\nimport {AnyAction} from '@reduxjs/toolkit';\r\nimport {ActionTypes} from '../actionTypes';\r\nimport {TransactionEvent} from '../../../models/Transaction';\r\nimport {UnitOfTime} from '../../../models/Clendar';\r\n\r\nexport interface State {\r\n  date: Date;\r\n  transactionEvent: TransactionEvent;\r\n  isTransactionOpen: boolean;\r\n}\r\nconst initialState = {\r\n  date: Moment().toDate(),\r\n  isTransactionOpen: false,\r\n  transactionEvent: {\r\n    _id: '',\r\n    type: 'income',\r\n    date: Moment().toDate(),\r\n    account: '',\r\n    from: '',\r\n    category: '',\r\n    fees: '0',\r\n    transferId: '',\r\n    to: '',\r\n    amount: '',\r\n    note: '',\r\n    description: '',\r\n    transactionId: ''\r\n  }\r\n};\r\n\r\nconst changeInput = (state: State, action: AnyAction) => {\r\n  if (action.payload.name === 'type') {\r\n    return {\r\n      ...state,\r\n      transactionEvent: {\r\n        ...state.transactionEvent,\r\n        [action.payload.name]: action.payload.value,\r\n        category: '',\r\n        to: '',\r\n        from: '',\r\n        account: '',\r\n        fees: '0'\r\n      }\r\n    };\r\n  }\r\n  return {\r\n    ...state,\r\n    transactionEvent: {\r\n      ...state.transactionEvent,\r\n      [action.payload.name]: action.payload.value\r\n    }\r\n  };\r\n};\r\nconst changeNextMonth = (state: State) => {\r\n  const nextMonth = Moment(state.date).add(1, UnitOfTime.MONTH);\r\n  return {\r\n    ...state,\r\n    date: nextMonth.toDate()\r\n  };\r\n};\r\nconst changePreviousMonth = (state: State) => {\r\n  const previousMonth = Moment(state.date).add(-1, UnitOfTime.MONTH);\r\n  return {\r\n    ...state,\r\n    date: previousMonth.toDate()\r\n  };\r\n};\r\n\r\nconst changeNextYear = (state: State) => {\r\n  const nextYear = Moment(state.date).add(1, UnitOfTime.YEAR).toDate();\r\n\r\n  return {\r\n    ...state,\r\n    date: nextYear\r\n  };\r\n};\r\n\r\nconst changePreviousYear = (state: State) => {\r\n  const previousYear = Moment(state.date).add(-1, UnitOfTime.YEAR);\r\n  return {\r\n    ...state,\r\n    date: previousYear.toDate()\r\n  };\r\n};\r\n\r\nconst setTransaction = (state: State, action: AnyAction) => {\r\n  return {\r\n    ...state,\r\n    transactionEvent: action.payload\r\n  };\r\n};\r\n\r\nconst changeDate = (state: State, action: AnyAction) => {\r\n  return {\r\n    ...state,\r\n    date: action.payload\r\n  };\r\n};\r\n\r\nconst setTransactionIsOpen = (state: State) => {\r\n  return {\r\n    ...state,\r\n    isTransactionOpen: !state.isTransactionOpen\r\n  };\r\n};\r\nexport const transactionReducer = (state = initialState, action: AnyAction): State => {\r\n  switch (action.type) {\r\n    case ActionTypes.HANDLE_NEXT_WEEK: {\r\n      const nextMonth = Moment(state.date).set('date', state.date.getDate() - 7);\r\n      return {\r\n        ...state,\r\n        date: nextMonth.toDate()\r\n      };\r\n    }\r\n\r\n    case ActionTypes.HANDLE_PREVIOUS_WEEK: {\r\n      const previousMonth = Moment(state.date).set('date', state.date.getDate() + 7);\r\n      return {\r\n        ...state,\r\n        date: previousMonth.toDate()\r\n      };\r\n    }\r\n    case ActionTypes.HANDLE_NEXT_MONTH: {\r\n      return changeNextMonth(state);\r\n    }\r\n    case ActionTypes.HANDLE_PREVIOUS_MONTH: {\r\n      return changePreviousMonth(state);\r\n    }\r\n    case ActionTypes.HANDLE_NEXT_YEAR: {\r\n      return changeNextYear(state);\r\n    }\r\n    case ActionTypes.HANDLE_PREVIOUS_YEAR: {\r\n      return changePreviousYear(state);\r\n    }\r\n    case ActionTypes.TRANSACTION_INPUT_CHANGE:\r\n      return changeInput(state, action);\r\n    case ActionTypes.SET_TRANSACTION:\r\n      return setTransaction(state, action);\r\n\r\n    case ActionTypes.SET_DATE:\r\n      return changeDate(state, action);\r\n\r\n    case ActionTypes.SET_IS_TRANSACTION_OPEN:\r\n      return setTransactionIsOpen(state);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {combineReducers} from 'redux';\r\nimport {userReducer} from '../../modules/login/reducer/userReducer';\r\nimport {transactionReducer} from '../../modules/transaction/reducers/transactionReducer';\r\n\r\nexport default combineReducers({\r\n  userReducer,\r\n  transactionReducer\r\n});\r\n","import {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\n\r\nimport rootReducer from './reducers';\r\n\r\nconst initalState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer, initalState, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {Provider} from 'react-redux';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './store/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ExportStyle_label__376R3\",\"input\":\"ExportStyle_input__IiABP\",\"title\":\"ExportStyle_title__2JSWi\",\"calendar_icon\":\"ExportStyle_calendar_icon__GKq7G\",\"export_button\":\"ExportStyle_export_button__2Zb_q\",\"export_disabled_button\":\"ExportStyle_export_disabled_button__10QN5\",\"error_accout\":\"ExportStyle_error_accout__2MGu2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MonthlyStyle_container__2PIP_\",\"calendar\":\"MonthlyStyle_calendar__2g3ku\",\"income\":\"MonthlyStyle_income__X0uE0\",\"expense\":\"MonthlyStyle_expense__3klFT\",\"total\":\"MonthlyStyle_total__ZbAkB\",\"selected_tab\":\"MonthlyStyle_selected_tab__1xPJT\",\"tab_list\":\"MonthlyStyle_tab_list__2EgCb\",\"tab\":\"MonthlyStyle_tab__rcEsY\",\"days_wrapper\":\"MonthlyStyle_days_wrapper__3nbS1\",\"day_container\":\"MonthlyStyle_day_container__mP4D7\",\"calendar_wrapper\":\"MonthlyStyle_calendar_wrapper__3JpKF\",\"calendar_date_box_container\":\"MonthlyStyle_calendar_date_box_container__11yZ1\",\"calendar_date_box_container_other_month\":\"MonthlyStyle_calendar_date_box_container_other_month__uTLW0\",\"calendar_date\":\"MonthlyStyle_calendar_date__2yf4C\",\"current_date\":\"MonthlyStyle_current_date__nsEOQ\",\"calendar_events_content\":\"MonthlyStyle_calendar_events_content__uP68m\",\"actions\":\"MonthlyStyle_actions__2Yxle\",\"table_scroll\":\"MonthlyStyle_table_scroll__hw4E_\",\"calendar_date_income\":\"MonthlyStyle_calendar_date_income__3wg6j\",\"calendar_date_expense\":\"MonthlyStyle_calendar_date_expense__1lUmq\",\"calendar_date_total\":\"MonthlyStyle_calendar_date_total__3KnKD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"HeaderStyle_container__2u5Ic\",\"user_content\":\"HeaderStyle_user_content__3LLWk\",\"user_email\":\"HeaderStyle_user_email__71Yfg\",\"caret_down\":\"HeaderStyle_caret_down__1hFpQ\",\"dropdown_content\":\"HeaderStyle_dropdown_content__1bcbl\",\"dropdown\":\"HeaderStyle_dropdown__3crcX\",\"page_title\":\"HeaderStyle_page_title__2e8fm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DailyStyle_container__3PY1L\",\"table\":\"DailyStyle_table__2sRZs\",\"table_container\":\"DailyStyle_table_container__1G-bw\",\"content_row\":\"DailyStyle_content_row__mu5l5\",\"date_content\":\"DailyStyle_date_content__2b-Bh\",\"date\":\"DailyStyle_date__1kkoc\",\"date_year\":\"DailyStyle_date_year__1DnNf\",\"date_day\":\"DailyStyle_date_day__J4cpO\",\"date_day_select\":\"DailyStyle_date_day_select__1rXBH\",\"income\":\"DailyStyle_income__2b77_\",\"expense\":\"DailyStyle_expense__14LKa\",\"category\":\"DailyStyle_category__1EAAU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"WeeklyStyle_container__u9tEC\",\"table\":\"WeeklyStyle_table__gOOtH\",\"date_container\":\"WeeklyStyle_date_container__2Gjfu\",\"date\":\"WeeklyStyle_date__1SmFe\",\"selected_date\":\"WeeklyStyle_selected_date__5wDsD\",\"income\":\"WeeklyStyle_income__1stx5\",\"expense\":\"WeeklyStyle_expense__2ANUC\",\"info_row\":\"WeeklyStyle_info_row__1qZls\",\"info_title\":\"WeeklyStyle_info_title__hKycy\",\"total\":\"WeeklyStyle_total__1Jbu8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"YearlyStyle_container__Mc94Q\",\"table\":\"YearlyStyle_table__1FNxS\",\"content_row\":\"YearlyStyle_content_row__36DY9\",\"month_content\":\"YearlyStyle_month_content__1dttB\",\"month\":\"YearlyStyle_month__3eddc\",\"month_selected\":\"YearlyStyle_month_selected__11bWn\",\"income\":\"YearlyStyle_income__2MeHX\",\"expense\":\"YearlyStyle_expense__3ykWq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"TotalStyle_title__1S9so\",\"account_container\":\"TotalStyle_account_container__2-yzU\",\"name\":\"TotalStyle_name__1kO2W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"income\":\"InfoTableHeadStyle_income__10Lhe\",\"expense\":\"InfoTableHeadStyle_expense__262Jh\",\"total\":\"InfoTableHeadStyle_total__2gZlf\"};"],"sourceRoot":""}