[{"/home/george/Documents/Projects/budget-tracker/src/index.tsx":"1","/home/george/Documents/Projects/budget-tracker/src/reportWebVitals.ts":"2","/home/george/Documents/Projects/budget-tracker/src/App.tsx":"3","/home/george/Documents/Projects/budget-tracker/src/routes.tsx":"4","/home/george/Documents/Projects/budget-tracker/src/pages/loginPage/LoginPage.tsx":"5","/home/george/Documents/Projects/budget-tracker/src/pages/transactionPage/WeeklyPage.tsx":"6","/home/george/Documents/Projects/budget-tracker/src/pages/transactionPage/DailyPage.tsx":"7","/home/george/Documents/Projects/budget-tracker/src/pages/transactionPage/MonthlyPage.tsx":"8","/home/george/Documents/Projects/budget-tracker/src/pages/transactionPage/YearlyPage.tsx":"9","/home/george/Documents/Projects/budget-tracker/src/pages/homePage/HomePage.tsx":"10","/home/george/Documents/Projects/budget-tracker/src/pages/statsPage/WeeklyPage.tsx":"11","/home/george/Documents/Projects/budget-tracker/src/pages/statsPage/MonthlyPage.tsx":"12","/home/george/Documents/Projects/budget-tracker/src/pages/statsPage/DailyPage.tsx":"13","/home/george/Documents/Projects/budget-tracker/src/pages/statsPage/YearlyPage.tsx":"14","/home/george/Documents/Projects/budget-tracker/src/modules/login/LoginContainer.tsx":"15","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/weeklyContainer/WeeklyContainer.tsx":"16","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/yearlyContainer/YearlyContainer.tsx":"17","/home/george/Documents/Projects/budget-tracker/src/layout/navBar/NavBar.tsx":"18","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/dailyContainer/DailyContainer.tsx":"19","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/monthlyContainer/MonthlyContainer.tsx":"20","/home/george/Documents/Projects/budget-tracker/src/modules/stats/weeklyContainer/WeeklyContainer.tsx":"21","/home/george/Documents/Projects/budget-tracker/src/modules/stats/yearlyContainer/YearlyContainer.tsx":"22","/home/george/Documents/Projects/budget-tracker/src/modules/stats/dailyContainer/DailyContainer.tsx":"23","/home/george/Documents/Projects/budget-tracker/src/modules/stats/monthlyContainer/MonthlyContainer.tsx":"24","/home/george/Documents/Projects/budget-tracker/src/helpers/Variables.tsx":"25","/home/george/Documents/Projects/budget-tracker/src/helpers/Validation.tsx":"26","/home/george/Documents/Projects/budget-tracker/src/modules/login/components/LoginForm.tsx":"27","/home/george/Documents/Projects/budget-tracker/src/modules/login/components/RegistrationForm.tsx":"28","/home/george/Documents/Projects/budget-tracker/src/modules/login/components/SocialNetworks.tsx":"29","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/service/TransactionService.tsx":"30","/home/george/Documents/Projects/budget-tracker/src/layout/sideBar/SideBar.tsx":"31","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/actions/transactionActions.tsx":"32","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/AddTransactionModal.tsx":"33","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/infoModal/InfoModal.tsx":"34","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/dailyContainer/components/dailyTableRow/DailyTableRow.tsx":"35","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/dailyContainer/components/dailyTableHeader/DailyTableHeader.tsx":"36","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/actionTypes.tsx":"37","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/Form.tsx":"38","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/components/FeesInput.tsx":"39","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/components/InputTitles.tsx":"40","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/components/SelectInputs.tsx":"41","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/components/AmountInput.tsx":"42","/home/george/Documents/Projects/budget-tracker/src/store/store.tsx":"43","/home/george/Documents/Projects/budget-tracker/src/store/reducers/index.tsx":"44","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/reducers/transactionReducer.tsx":"45","/home/george/Documents/Projects/budget-tracker/src/layout/header/Header.tsx":"46","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/weeklyContainer/components/WeeklyTableRow.tsx":"47","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/yearlyContainer/components/YearlyTableRow.tsx":"48","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/infoModal/components/TableRow.tsx":"49","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/InfoTableHead/InfoTableHead.tsx":"50","/home/george/Documents/Projects/budget-tracker/src/layout/accountMenu/AccountMenu.tsx":"51","/home/george/Documents/Projects/budget-tracker/src/layout/addTranasctionButton/AddTransactionButton.tsx":"52","/home/george/Documents/Projects/budget-tracker/src/modules/stats/components/StatsForm.tsx":"53","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/monthlyContainer/Calendar/Calendar.tsx":"54","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/monthlyContainer/Calendar/CalendarDate.tsx":"55","/home/george/Documents/Projects/budget-tracker/src/pages/exportPage/ExportPage.tsx":"56","/home/george/Documents/Projects/budget-tracker/src/modules/export/ExportContainer.tsx":"57","/home/george/Documents/Projects/budget-tracker/src/helpers/AuthProvider.tsx":"58","/home/george/Documents/Projects/budget-tracker/src/modules/login/actions/usersActions.tsx":"59","/home/george/Documents/Projects/budget-tracker/src/modules/login/actionTypes.tsx":"60","/home/george/Documents/Projects/budget-tracker/src/modules/login/reducer/userReducer.tsx":"61"},{"size":622,"mtime":1615465342416,"results":"62","hashOfConfig":"63"},{"size":425,"mtime":1608638830636,"results":"64","hashOfConfig":"63"},{"size":222,"mtime":1617840483577,"results":"65","hashOfConfig":"63"},{"size":1765,"mtime":1617975804123,"results":"66","hashOfConfig":"63"},{"size":221,"mtime":1617197432170,"results":"67","hashOfConfig":"63"},{"size":436,"mtime":1617197432170,"results":"68","hashOfConfig":"63"},{"size":430,"mtime":1617197432170,"results":"69","hashOfConfig":"63"},{"size":436,"mtime":1615465342428,"results":"70","hashOfConfig":"63"},{"size":436,"mtime":1617197432170,"results":"71","hashOfConfig":"63"},{"size":195,"mtime":1617197432170,"results":"72","hashOfConfig":"63"},{"size":298,"mtime":1615465342428,"results":"73","hashOfConfig":"63"},{"size":304,"mtime":1617198262731,"results":"74","hashOfConfig":"63"},{"size":292,"mtime":1615465342428,"results":"75","hashOfConfig":"63"},{"size":298,"mtime":1615465342428,"results":"76","hashOfConfig":"63"},{"size":4232,"mtime":1617993355109,"results":"77","hashOfConfig":"63"},{"size":2725,"mtime":1617976004291,"results":"78","hashOfConfig":"63"},{"size":3461,"mtime":1617975998979,"results":"79","hashOfConfig":"63"},{"size":3644,"mtime":1617975984991,"results":"80","hashOfConfig":"63"},{"size":3211,"mtime":1617975995899,"results":"81","hashOfConfig":"63"},{"size":10914,"mtime":1617976008647,"results":"82","hashOfConfig":"63"},{"size":874,"mtime":1617310121071,"results":"83","hashOfConfig":"63"},{"size":874,"mtime":1617310131079,"results":"84","hashOfConfig":"63"},{"size":872,"mtime":1617310143115,"results":"85","hashOfConfig":"63"},{"size":925,"mtime":1617307454316,"results":"86","hashOfConfig":"63"},{"size":3251,"mtime":1617975914823,"results":"87","hashOfConfig":"63"},{"size":2128,"mtime":1617975919823,"results":"88","hashOfConfig":"63"},{"size":1357,"mtime":1617856035594,"results":"89","hashOfConfig":"63"},{"size":1692,"mtime":1615465342420,"results":"90","hashOfConfig":"63"},{"size":967,"mtime":1615465342420,"results":"91","hashOfConfig":"63"},{"size":2461,"mtime":1617975912823,"results":"92","hashOfConfig":"63"},{"size":1265,"mtime":1617197432162,"results":"93","hashOfConfig":"63"},{"size":892,"mtime":1617993814853,"results":"94","hashOfConfig":"63"},{"size":4942,"mtime":1617975988383,"results":"95","hashOfConfig":"63"},{"size":2567,"mtime":1617976006935,"results":"96","hashOfConfig":"63"},{"size":2117,"mtime":1617976005247,"results":"97","hashOfConfig":"63"},{"size":1448,"mtime":1617975994095,"results":"98","hashOfConfig":"63"},{"size":309,"mtime":1617197432162,"results":"99","hashOfConfig":"63"},{"size":4190,"mtime":1617975942383,"results":"100","hashOfConfig":"63"},{"size":1223,"mtime":1617975928427,"results":"101","hashOfConfig":"63"},{"size":1054,"mtime":1617975923007,"results":"102","hashOfConfig":"63"},{"size":903,"mtime":1617975925087,"results":"103","hashOfConfig":"63"},{"size":1344,"mtime":1617975940079,"results":"104","hashOfConfig":"63"},{"size":382,"mtime":1615465342428,"results":"105","hashOfConfig":"63"},{"size":304,"mtime":1617976012383,"results":"106","hashOfConfig":"63"},{"size":2088,"mtime":1617976007571,"results":"107","hashOfConfig":"63"},{"size":1595,"mtime":1617975916683,"results":"108","hashOfConfig":"63"},{"size":1010,"mtime":1617309852324,"results":"109","hashOfConfig":"63"},{"size":1098,"mtime":1617197432170,"results":"110","hashOfConfig":"63"},{"size":1548,"mtime":1617975990707,"results":"111","hashOfConfig":"63"},{"size":868,"mtime":1617197432166,"results":"112","hashOfConfig":"63"},{"size":1024,"mtime":1617197432162,"results":"113","hashOfConfig":"63"},{"size":3583,"mtime":1617993825261,"results":"114","hashOfConfig":"63"},{"size":1436,"mtime":1617199033669,"results":"115","hashOfConfig":"63"},{"size":1358,"mtime":1617976008039,"results":"116","hashOfConfig":"63"},{"size":1841,"mtime":1617976006087,"results":"117","hashOfConfig":"63"},{"size":287,"mtime":1617398321382,"results":"118","hashOfConfig":"63"},{"size":725,"mtime":1617975743183,"results":"119","hashOfConfig":"63"},{"size":941,"mtime":1617975948747,"results":"120","hashOfConfig":"63"},{"size":376,"mtime":1617975691723,"results":"121","hashOfConfig":"63"},{"size":69,"mtime":1617975498437,"results":"122","hashOfConfig":"63"},{"size":574,"mtime":1617975910507,"results":"123","hashOfConfig":"63"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},"1me94a7",{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"126"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"126"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"126"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"126"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"126"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"126"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"126"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"126"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"126"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"126"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"126"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"126"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"126"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"126"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"126"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"126"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"126"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"126"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"126"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"126"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"126"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"126"},"/home/george/Documents/Projects/budget-tracker/src/index.tsx",[],["269","270"],"/home/george/Documents/Projects/budget-tracker/src/reportWebVitals.ts",[],"/home/george/Documents/Projects/budget-tracker/src/App.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/routes.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/loginPage/LoginPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/transactionPage/WeeklyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/transactionPage/DailyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/transactionPage/MonthlyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/transactionPage/YearlyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/homePage/HomePage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/statsPage/WeeklyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/statsPage/MonthlyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/statsPage/DailyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/statsPage/YearlyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/login/LoginContainer.tsx",["271"],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/weeklyContainer/WeeklyContainer.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/yearlyContainer/YearlyContainer.tsx",["272"],"import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Moment from \"moment\";\nimport { getYearlyOrWeekly } from \"../service/TransactionService\";\nimport { Month, TransactionReducer } from \"../../../interfaces/Transaction\";\nimport { UserReducer } from \"../../../interfaces/User\";\nimport NavBarMenu from \"../../../layout/navBar/NavBar\";\nimport InfoTableHead from \"../components/InfoTableHead/InfoTableHead\";\nimport YearlyTableRow from \"./components/YearlyTableRow\";\nimport styles from \"./YearlyStyle.module.css\";\n\nconst YearlyContainer = () => {\n  const [monthsInYear, setMonthsInYear] = useState<Month[]>([]);\n  const [sumIncome, setSumIncome] = useState(0);\n  const [sumExpense, setSumExpense] = useState(0);\n\n  const stateTransaction = useSelector(\n    (state: {\n      userReducer: UserReducer;\n      transactionReducer: TransactionReducer;\n    }) => state.transactionReducer\n  );\n\n  useEffect(() => {\n    getYear(stateTransaction.date);\n  }, [stateTransaction.date]);\n\n  const getYear = async (date: Date) => {\n    let months: Month[] = [];\n\n    for (let i = 0; i <= 11; i++) {\n      months.push({\n        from: Moment(date).set(\"month\", i).startOf(\"month\").toDate(),\n        to: Moment(date).set(\"month\", i).endOf(\"month\").toDate(),\n        income: 0,\n        expense: 0,\n      });\n    }\n\n    let data = await getYearlyOrWeekly(months);\n\n    if (Moment(date).get(\"year\") < Moment().get(\"year\")) {\n      setMonthsInYear(data.months.reverse());\n      setSumExpense(data.sumExpense);\n      setSumIncome(data.sumIncome);\n    }\n    if (Moment(date).get(\"year\") === Moment().get(\"year\")) {\n      setSumExpense(data.sumExpense);\n      setSumIncome(data.sumIncome);\n      setMonths(data.months);\n    }\n    if (Moment(date).get(\"year\") > Moment().get(\"year\")) {\n      setMonthsInYear(\n        data.months\n          .filter((month: Month) => month.expense > 0 || month.income > 0)\n          .reverse()\n      );\n      setSumExpense(data.sumExpense);\n      setSumIncome(data.sumIncome);\n    }\n  };\n\n  const setMonths = (months: Month[]) => {\n    let year: Month[] = [];\n\n    const newMonths: Month[] = months.filter(\n      month => month.expense > 0 || month.income > 0\n    );\n\n    let lastMonth: number = Moment().get(\"month\");\n\n    if (\n      newMonths.length > 0 &&\n      lastMonth < Moment(newMonths[newMonths.length - 1].from).get(\"month\")\n    ) {\n      lastMonth = Moment(newMonths[newMonths.length - 1].from).get(\"month\");\n    }\n\n    for (let i = 0; i <= lastMonth; i++) {\n      if (\n        newMonths.filter(month => Moment(month.from).get(\"month\") === i)\n          .length > 0\n      ) {\n        year.push(\n          newMonths.filter(month => Moment(month.from).get(\"month\") === i)[0]\n        );\n      } else {\n        year.push({\n          from: Moment().startOf(\"month\").set(\"month\", i).toDate(),\n          to: Moment().endOf(\"month\").set(\"month\", i).toDate(),\n          income: 0,\n          expense: 0,\n        });\n      }\n    }\n\n    setMonthsInYear(year.reverse());\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <NavBarMenu />\n      <div className={styles.container}>\n        <table className={styles.table}>\n          <InfoTableHead sumIncome={sumIncome} sumExpense={sumExpense} />\n          <tbody>\n            {monthsInYear.map(month => (\n              <YearlyTableRow month={month} />\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default YearlyContainer;\n","/home/george/Documents/Projects/budget-tracker/src/layout/navBar/NavBar.tsx",["273","274"],"import React, { useCallback } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Moment from \"moment\";\nimport {\n  handleNextMonth,\n  handleNextYear,\n  handlePreviousMonth,\n  handlePreviousYear,\n} from \"../../modules/transaction/actions/transactionActions\";\nimport {\n  isTransactionContainer,\n  isSelectedTitle,\n} from \"../../helpers/Variables\";\nimport { TransactionReducer } from \"../../interfaces/Transaction\";\nimport styles from \"./NavBarStyle.module.css\";\n\nconst NavBarMenu = () => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const state = useSelector(\n    (state: { transactionReducer: TransactionReducer }) =>\n      state.transactionReducer\n  );\n\n  const handlePreviousYearOrMonth = useCallback(() => {\n    isSelectedTitle(location.pathname, \"yearly\")\n      ? dispatch(handlePreviousYear())\n      : dispatch(handlePreviousMonth());\n  }, []);\n  const handleNextYearOrMonth = useCallback(() => {\n    isSelectedTitle(location.pathname, \"yearly\")\n      ? dispatch(handleNextYear())\n      : dispatch(handleNextMonth());\n  }, []);\n  return (\n    <div className={styles.container}>\n      <div className={styles.container_navigation}>\n        <Link\n          to={\n            isTransactionContainer(location.pathname)\n              ? \"/transaction/daily\"\n              : \"/stats/daily\"\n          }\n          className={\n            isSelectedTitle(location.pathname, \"daily\")\n              ? styles.title_selected\n              : styles.title\n          }\n        >\n          Daily\n        </Link>\n\n        <Link\n          to={\n            isTransactionContainer(location.pathname)\n              ? \"/transaction/weekly\"\n              : \"/stats/weekly\"\n          }\n          className={\n            isSelectedTitle(location.pathname, \"weekly\")\n              ? styles.title_selected\n              : styles.title\n          }\n        >\n          Weekly\n        </Link>\n\n        <Link\n          to={\n            isTransactionContainer(location.pathname)\n              ? \"/transaction/monthly\"\n              : \"/stats/monthly\"\n          }\n          className={\n            isSelectedTitle(location.pathname, \"monthly\")\n              ? styles.title_selected\n              : styles.title\n          }\n        >\n          Monthly\n        </Link>\n\n        <Link\n          to={\n            isTransactionContainer(location.pathname)\n              ? \"/transaction/yearly\"\n              : \"/stats/yearly\"\n          }\n          className={\n            isSelectedTitle(location.pathname, \"yearly\")\n              ? styles.title_selected\n              : styles.title\n          }\n        >\n          Yearly\n        </Link>\n\n        <Link\n          to={\n            isTransactionContainer(location.pathname)\n              ? \"/transaction/period\"\n              : \"/stats/period\"\n          }\n          className={\n            isSelectedTitle(location.pathname, \"period\")\n              ? styles.title_selected\n              : styles.title\n          }\n        >\n          Period\n        </Link>\n      </div>\n      <div className={styles.change_month_content}>\n        <div\n          className={styles.change_month_button}\n          onClick={handlePreviousYearOrMonth}\n        >\n          {\"<\"}\n        </div>\n        {isSelectedTitle(location.pathname, \"yearly\")\n          ? Moment(state.date).format(\"YYYY\")\n          : Moment(state.date).format(\"MMM YYYY\")}\n        <div\n          className={styles.change_month_button}\n          onClick={handleNextYearOrMonth}\n        >\n          {\">\"}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NavBarMenu;\n","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/dailyContainer/DailyContainer.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/monthlyContainer/MonthlyContainer.tsx",["275"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Moment from \"moment\";\nimport AddTransactionModal from \"../components/addTransactionModal/AddTransactionModal\";\nimport NavBarMenu from \"../../../layout/navBar/NavBar\";\nimport InfoModal from \"../components/infoModal/InfoModal\";\nimport Calendar from \"./Calendar/Calendar\";\nimport { State as StateTransaction } from \"../reducers/transactionReducer\";\nimport {\n  firstDateOfFirstWeekOfTheMonth,\n  transaction,\n  firstDateOfTheMonth,\n  lastDateOfTheMonth,\n  lastDateOfLastWeekOfTheMonth,\n  isTheSameDate,\n} from \"../../../helpers/Variables\";\nimport { validateTransaction } from \"../../../helpers/Validation\";\nimport {\n  createTransactionRequest,\n  deleteTransaction,\n  editTransaction,\n  getSpecificDatePeriod,\n} from \"../service/TransactionService\";\nimport {\n  handleInput,\n  setDate,\n  setTransaction,\n} from \"../actions/transactionActions\";\nimport {\n  Transaction,\n  TransactionEvent,\n  TransactionReducer,\n} from \"../../../interfaces/Transaction\";\nimport { HandleInput } from \"../../../interfaces/Function\";\nimport { Error } from \"../../../interfaces/Error\";\nimport \"../../../scss/variables.scss\";\n\ntype Props = {\n  filters: any;\n  stateTransaction: StateTransaction;\n  handleInput: (event: HandleInput) => void;\n  setTransaction: (event: TransactionEvent) => void;\n  setDate: (date: Date) => void;\n};\n\ntype State = {\n  isAddTransactionOpen: boolean;\n  isInfoTransactionOpen: boolean;\n  isEditTransactionOpen: boolean;\n  selectedDay: Transaction;\n  isTransfer: boolean;\n  errors: Error;\n  date: Date;\n  calendarDates: { date: Date }[];\n  transactions: Transaction[];\n};\n\nclass MonthlyContainer extends React.Component<Props> {\n  state: State = {\n    isInfoTransactionOpen: false,\n    isAddTransactionOpen: false,\n    isEditTransactionOpen: false,\n    date: Moment().toDate(),\n    isTransfer: false,\n    selectedDay: {\n      _id: \"\",\n      createdAt: Moment().startOf(\"date\").toDate(),\n      events: [],\n      expense: 0,\n      income: 0,\n    },\n    errors: {\n      account: \"\",\n      from: \"\",\n      category: \"\",\n      to: \"\",\n      amount: \"\",\n    },\n    transactions: [],\n    calendarDates: [],\n  };\n\n  componentDidMount() {\n    const { stateTransaction, filters, setDate } = this.props;\n    if (filters.date) {\n      console.log(\"filter\");\n      this.setState({\n        date: filters.date,\n      });\n      setDate(filters.date);\n      this.getTransactions(filters.date);\n      this.setCalendar(filters.date);\n    } else {\n      this.setState({\n        date: stateTransaction.date,\n      });\n      this.getTransactions(stateTransaction.date);\n      this.setCalendar(stateTransaction.date);\n    }\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>) {\n    const { stateTransaction, filters } = this.props;\n\n    if (prevProps.stateTransaction.date !== stateTransaction.date) {\n      if (!filters.date) {\n        this.setCalendar(stateTransaction.date);\n        this.getTransactions(stateTransaction.date);\n      }\n    }\n  }\n\n  getTransactions = async (date: Date) => {\n    const { selectedDay } = this.state;\n    let from: Date = firstDateOfFirstWeekOfTheMonth(date).toDate();\n    let to: Date = lastDateOfLastWeekOfTheMonth(date).toDate();\n\n    let data = await getSpecificDatePeriod(from, to);\n    data.transactions.map((transaction: Transaction) => {\n      if (isTheSameDate(selectedDay.createdAt, transaction.createdAt)) {\n        this.setState({\n          selectedDay: transaction,\n        });\n      }\n    });\n    this.setState({ transactions: data.transactions });\n  };\n\n  handleDelete = async (eventId: string) => {\n    await deleteTransaction(this.state.selectedDay._id, eventId);\n    let newEvents: TransactionEvent[] = this.state.selectedDay.events.filter(\n      event => event._id !== eventId\n    );\n    this.setState({\n      selectedDay: { ...this.state.selectedDay, events: newEvents },\n      isEditTransactionOpen: false,\n    });\n    this.clearState();\n    this.getTransactions(this.state.date);\n  };\n  handleOpenEdit = (event: TransactionEvent) => {\n    const { isEditTransactionOpen } = this.state;\n    if (isEditTransactionOpen) {\n      this.setState({ isEditTransactionOpen: false });\n      this.clearState();\n    } else {\n      this.setState({\n        isEditTransactionOpen: true,\n      });\n\n      this.props.setTransaction({\n        ...event,\n        amount: (parseFloat(event.amount) / 100).toFixed(2),\n        fees: (parseFloat(event.fees!) / 100).toFixed(2),\n      });\n    }\n  };\n  handleNextDay = async () => {\n    const { selectedDay, transactions } = this.state;\n\n    let newDate: Date = Moment(selectedDay.createdAt).add(1, \"days\").toDate();\n\n    this.setState({\n      selectedDay: { createdAt: newDate, events: [] },\n      date: newDate,\n    });\n\n    transactions.forEach(transaction => {\n      if (isTheSameDate(newDate, transaction.createdAt)) {\n        this.setState({\n          selectedDay: transaction,\n        });\n      }\n    });\n  };\n  handlePreviousDay = async () => {\n    const { selectedDay, transactions } = this.state;\n\n    let newDate: Date = Moment(selectedDay.createdAt).add(-1, \"days\").toDate();\n    this.setState({\n      selectedDay: { createdAt: newDate, events: [] },\n      date: newDate,\n    });\n\n    transactions.forEach(transaction => {\n      if (isTheSameDate(newDate, transaction.createdAt)) {\n        this.setState({\n          selectedDay: transaction,\n        });\n      }\n    });\n  };\n  handleOpenTransaction = () => {\n    if (this.state.isAddTransactionOpen) {\n      this.setState({\n        isAddTransactionOpen: false,\n      });\n      this.clearState();\n    } else {\n      this.props.handleInput({\n        target: {\n          name: \"date\",\n          value: this.state.selectedDay.createdAt,\n        },\n      });\n      this.setState({\n        isAddTransactionOpen: true,\n      });\n    }\n  };\n  handleOpenInfoModal = (date: Date) => {\n    const { isInfoTransactionOpen } = this.state;\n    console.log(date);\n    if (isInfoTransactionOpen) {\n      this.setState({\n        isInfoTransactionOpen: false,\n        selectedDay: { events: [] },\n      });\n    } else {\n      this.setState({\n        isInfoTransactionOpen: true,\n        selectedDay: { createdAt: date, events: [] },\n      });\n      this.selectedDay(date);\n    }\n  };\n  selectedDay = (date: Date) => {\n    this.state.transactions.forEach(transaction => {\n      if (isTheSameDate(date, transaction.createdAt)) {\n        this.setState({\n          selectedDay: transaction,\n        });\n      }\n    });\n  };\n\n  handleSave = async () => {\n    const { isEditTransactionOpen, selectedDay } = this.state;\n    const { transactionEvent, date } = this.props.stateTransaction;\n    const errors: Error = validateTransaction(transactionEvent);\n    const isValid: boolean = Object.values(errors).filter(Boolean).length <= 0;\n\n    if (!isValid) {\n      this.setState({ errors: errors });\n      return;\n    }\n    let event = transaction(transactionEvent);\n\n    if (isEditTransactionOpen) {\n      await editTransaction(\n        selectedDay._id,\n        transactionEvent._id,\n        event.events[0]\n      );\n      this.getTransactions(transactionEvent.date);\n      this.clearState();\n    } else {\n      await createTransactionRequest(event);\n      this.getTransactions(date);\n      this.clearState();\n    }\n    this.setState({\n      ...this.state,\n      errors: {},\n      isAddTransactionOpen: false,\n      isEditTransactionOpen: false,\n    });\n  };\n\n  clearState = () => {\n    this.props.setTransaction({\n      _id: \"\",\n      type: \"income\",\n      date: Moment().toDate(),\n      account: \"\",\n      from: \"\",\n      category: \"\",\n      fees: \"0\",\n      to: \"\",\n      amount: \"0\",\n      note: \"\",\n      description: \"\",\n      transactionId: \"\",\n    });\n  };\n\n  setCalendar = async (date: Date) => {\n    await this.setState({ calendarDates: [] });\n    const { calendarDates } = this.state;\n\n    if (firstDateOfTheMonth(date).get(\"day\") !== 1) {\n      this.setFirstWeek(date);\n    }\n\n    for (let i = 1; i <= lastDateOfTheMonth(date).get(\"date\"); i++) {\n      calendarDates.push({\n        date: Moment(firstDateOfTheMonth(date)).set(\"date\", i).toDate(),\n      });\n    }\n\n    if (lastDateOfTheMonth(date).get(\"day\") !== 0) {\n      this.setLastWeek(date);\n    }\n  };\n\n  setFirstWeek = (date: Date) => {\n    const lastDateOfPreviusMonth: number = Moment(date)\n      .set(\"date\", 0)\n      .get(\"date\");\n\n    for (\n      let i = firstDateOfFirstWeekOfTheMonth(date).get(\"date\");\n      i <= lastDateOfPreviusMonth;\n      i++\n    ) {\n      this.state.calendarDates.push({\n        date: Moment(firstDateOfFirstWeekOfTheMonth(date))\n          .set(\"date\", i)\n          .toDate(),\n      });\n    }\n  };\n  setLastWeek = (date: Date) => {\n    for (let i = 1; i <= lastDateOfLastWeekOfTheMonth(date).get(\"date\"); i++) {\n      this.state.calendarDates.push({\n        date: Moment(lastDateOfLastWeekOfTheMonth(date))\n          .startOf(\"date\")\n          .set(\"date\", i)\n          .toDate(),\n      });\n    }\n  };\n\n  render() {\n    const {\n      errors,\n      selectedDay,\n      transactions,\n      calendarDates,\n      isAddTransactionOpen,\n      isEditTransactionOpen,\n      isInfoTransactionOpen,\n    } = this.state;\n    const { date, transactionEvent } = this.props.stateTransaction;\n    return (\n      <div className=\"wrapper\">\n        <NavBarMenu />\n        <Calendar\n          handleOpenInfoModal={this.handleOpenInfoModal}\n          transactions={transactions}\n          calendarDates={calendarDates}\n          date={date}\n        />\n        <InfoModal\n          handleDelete={this.handleDelete}\n          selectedDay={selectedDay}\n          handleNextDay={this.handleNextDay}\n          isInfoTransactionOpen={isInfoTransactionOpen}\n          handlePreviousDay={this.handlePreviousDay}\n          handleOpenInfoModal={this.handleOpenInfoModal}\n          handleOpenTransaction={this.handleOpenTransaction}\n          handleOpenEdit={this.handleOpenEdit}\n        />\n        <AddTransactionModal\n          isEditTransactionOpen={isEditTransactionOpen}\n          errors={errors}\n          transactionEvent={transactionEvent}\n          handleSave={this.handleSave}\n          handleOpenEdit={this.handleOpenEdit}\n          handleInputChange={this.props.handleInput}\n          isAddTransactionOpen={isAddTransactionOpen}\n          handleOpenTransaction={this.handleOpenTransaction}\n          handleDelete={this.handleDelete}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: { transactionReducer: TransactionReducer }) => {\n  return {\n    stateTransaction: state.transactionReducer,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    handleInput: (event: HandleInput) => dispatch(handleInput(event)),\n    setTransaction: (event: TransactionEvent) =>\n      dispatch(setTransaction(event)),\n    setDate: (date: Date) => dispatch(setDate(date)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonthlyContainer);\n","/home/george/Documents/Projects/budget-tracker/src/modules/stats/weeklyContainer/WeeklyContainer.tsx",["276","277","278","279","280","281"],"import React, { useState } from \"react\";\nimport NavBarMenu from \"../../../layout/navBar/NavBar\";\nimport StatsForm from \"../components/StatsForm\";\n\nconst WeeklyContainer = () => {\n  const [date, setDate] = useState(new Date());\n  const [sumIncome, setSumIncome] = useState(0);\n  const [sumExpense, setSumExpense] = useState(0);\n\n  const data = [\n    {\n      category: \"food\",\n      value: 16900,\n      color: \"#E38627\",\n      label: \"category\",\n    },\n    { category: \"beauty\", value: 4000, color: \"red\", label: \"beauty\" },\n    { category: \"culture\", value: 45699, color: \"blue\", label: \"culture\" },\n  ];\n  return (\n    <div className=\"wrapper\">\n      <NavBarMenu />\n      <div className=\"stats_container\">\n        <StatsForm stats={data} isIncome={true} />\n        <StatsForm stats={data} isIncome={false} />\n      </div>\n    </div>\n  );\n};\n\nexport default WeeklyContainer;\n","/home/george/Documents/Projects/budget-tracker/src/modules/stats/yearlyContainer/YearlyContainer.tsx",["282","283","284","285","286","287"],"import React, { useState } from \"react\";\nimport NavBarMenu from \"../../../layout/navBar/NavBar\";\nimport StatsForm from \"../components/StatsForm\";\n\nconst YearlyContainer = () => {\n  const [date, setDate] = useState(new Date());\n  const [sumIncome, setSumIncome] = useState(0);\n  const [sumExpense, setSumExpense] = useState(0);\n\n  const data = [\n    {\n      category: \"food\",\n      value: 16900,\n      color: \"#E38627\",\n      label: \"category\",\n    },\n    { category: \"beauty\", value: 4000, color: \"red\", label: \"beauty\" },\n    { category: \"culture\", value: 45699, color: \"blue\", label: \"culture\" },\n  ];\n  return (\n    <div className=\"wrapper\">\n      <NavBarMenu />\n      <div className=\"stats_container\">\n        <StatsForm stats={data} isIncome={true} />\n        <StatsForm stats={data} isIncome={false} />\n      </div>\n    </div>\n  );\n};\n\nexport default YearlyContainer;\n","/home/george/Documents/Projects/budget-tracker/src/modules/stats/dailyContainer/DailyContainer.tsx",["288","289","290","291","292","293"],"import React, { useState } from \"react\";\nimport NavBarMenu from \"../../../layout/navBar/NavBar\";\nimport StatsForm from \"../components/StatsForm\";\n\nconst DailyContainer = () => {\n  const [date, setDate] = useState(new Date());\n  const [sumIncome, setSumIncome] = useState(0);\n  const [sumExpense, setSumExpense] = useState(0);\n\n  const data = [\n    {\n      category: \"food\",\n      value: 16900,\n      color: \"#E38627\",\n      label: \"category\",\n    },\n    { category: \"beauty\", value: 4000, color: \"red\", label: \"beauty\" },\n    { category: \"culture\", value: 45699, color: \"blue\", label: \"culture\" },\n  ];\n  return (\n    <div className=\"wrapper\">\n      <NavBarMenu />\n      <div className=\"stats_container\">\n        <StatsForm stats={data} isIncome={true} />\n        <StatsForm stats={data} isIncome={false} />\n      </div>\n    </div>\n  );\n};\n\nexport default DailyContainer;\n","/home/george/Documents/Projects/budget-tracker/src/modules/stats/monthlyContainer/MonthlyContainer.tsx",["294","295","296","297","298","299","300"],"import React, { useEffect, useState } from \"react\";\nimport NavBarMenu from \"../../../layout/navBar/NavBar\";\nimport StatsForm from \"../components/StatsForm\";\nimport \"../../../scss/variables.scss\";\nconst MonthlyContainer = () => {\n  const [date, setDate] = useState(new Date());\n  const [sumIncome, setSumIncome] = useState(0);\n  const [sumExpense, setSumExpense] = useState(0);\n\n  const data = [\n    {\n      category: \"food\",\n      value: 16900,\n      color: \"#E38627\",\n      label: \"category\",\n    },\n    { category: \"beauty\", value: 4000, color: \"red\", label: \"beauty\" },\n    { category: \"culture\", value: 45699, color: \"blue\", label: \"culture\" },\n  ];\n  return (\n    <div className=\"wrapper\">\n      <NavBarMenu />\n      <div className=\"stats_container\">\n        <StatsForm stats={data} isIncome={true} />\n        <StatsForm stats={data} isIncome={false} />\n      </div>\n    </div>\n  );\n};\n\nexport default MonthlyContainer;\n","/home/george/Documents/Projects/budget-tracker/src/helpers/Variables.tsx",["301","302","303","304","305"],"import Moment from \"moment\";\nimport { TransactionEvent } from \"../interfaces/Transaction\";\n\nexport const firstDateOfTheMonth = (date: Date) =>\n  Moment(date).startOf(\"month\");\n\nexport const lastDateOfTheMonth = (date: Date) => Moment(date).endOf(\"month\");\n\nexport const firstDateOfFirstWeekOfTheMonth = (date: Date) =>\n  firstDateOfTheMonth(date).startOf(\"isoWeek\");\n\nexport const lastDateOfFirstWeekOfTheMonth = (date: Date) =>\n  firstDateOfTheMonth(date).endOf(\"isoWeek\");\n\nexport const firstDateOfLastWeekOfTheMonth = (date: Date) =>\n  lastDateOfTheMonth(date).startOf(\"isoWeek\");\n\nexport const lastDateOfLastWeekOfTheMonth = (date: Date) =>\n  lastDateOfTheMonth(date).startOf(\"day\").endOf(\"isoWeek\");\n\nexport const isTheSameDate = (calendarDate: Date, transactionDate: Date) =>\n  Moment(calendarDate).diff(transactionDate, \"day\") === 0;\n\nexport const isTypeTransfer = (type: string) =>\n  type.toLowerCase() === TransactionTypes.Transfer;\n\nexport const isTransactionContainer = (pathname: string) =>\n  pathname.includes(TransactionPage.Transaction);\n\nexport const isSelectedTitle = (pathname: string, path: string) =>\n  pathname === `/transaction/${path}` || pathname === `/stats/${path}`;\n\nexport const isTransactionTypeIncome = (type: string, amount: string) =>\n  type === TransactionTypes.Income ? (parseFloat(amount) / 100).toFixed(2) : \"\";\n\nexport const isTransactionTypeExpense = (type: string, amount: string) =>\n  type === TransactionTypes.Expense || type === TransactionTypes.Transfer\n    ? (parseFloat(amount) / 100).toFixed(2)\n    : \"\";\n\nexport enum DaysOfWeek {\n  Monday = \"M\",\n  Thuesday = \"T\",\n  Wednesday = \"W\",\n  Thursday = \"Th\",\n  Friday = \"F\",\n  Saturday = \"Sa\",\n  Sunday = \"Su\",\n}\n\nexport enum TransactionTypes {\n  Transfer = \"Ttransfer\",\n  Income = \"income\",\n  Expense = \"expense\",\n  Currency = \"Bg\",\n}\nexport enum TransactionPage {\n  Transaction = \"transaction\",\n  Stats = \"stats\",\n  Export = \"export\",\n  Accounts = \"accounts\",\n}\n\nexport const headerTitle = (path: string) => {\n  switch (true) {\n    case path.includes(\"/transaction\"):\n      return TransactionPage.Transaction.toLocaleUpperCase();\n    case path.includes(\"/stats\"):\n      return TransactionPage.Stats.toLocaleUpperCase();\n    case path.includes(\"/export\"):\n      return TransactionPage.Export.toLocaleUpperCase();\n    case path.includes(\"/accounts\"):\n      return TransactionPage.Accounts.toLocaleUpperCase();\n    default:\n      return \"\";\n  }\n};\n\nexport const transaction = (transaction: TransactionEvent) => {\n  const {\n    type,\n    transferId,\n    date,\n    account,\n    category,\n    from,\n    fees,\n    to,\n    amount,\n    note,\n    description,\n  } = transaction;\n  return {\n    events: [\n      {\n        type: type.toLowerCase(),\n        currency: TransactionTypes.Currency,\n        transferId: transferId,\n        date: Moment(date),\n        account: isTypeTransfer(type) ? \"\" : account,\n        category: isTypeTransfer(type) ? \"\" : category,\n        from: isTypeTransfer(type) ? from : \"\",\n        fees: parseFloat(fees!) * 100,\n        to: isTypeTransfer(type) ? to : \"\",\n        amount: parseFloat(amount) * 100,\n        note: note,\n        description: description,\n      },\n    ],\n    createdAt: Moment(transaction.date).startOf(\"date\"),\n  };\n};\n","/home/george/Documents/Projects/budget-tracker/src/helpers/Validation.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/login/components/LoginForm.tsx",["306"],"import React, { ReactElement } from \"react\";\nimport LoginContainerStyle from \"../LoginContainerStyle.module.css\";\n\ntype Props = {\n  Submit: () => void;\n  handleEnterPress: (event: any) => void;\n  errors: {\n    email: string;\n    password: string;\n  };\n  handleInput: (event: any) => void;\n};\n\nconst LoginForm: React.FC<Props> = ({\n  Submit,\n  errors,\n  handleInput,\n  handleEnterPress,\n}) => {\n  return (\n    <div className={LoginContainerStyle.login_content}>\n      <label className={LoginContainerStyle.login_label}>Email</label>\n      <input\n        className={LoginContainerStyle.input}\n        name=\"email\"\n        onChange={handleInput}\n      />\n      {errors.email && (\n        <div className={LoginContainerStyle.error_msg}>\n          <span>{errors.email}</span>\n        </div>\n      )}\n      <label className={LoginContainerStyle.login_label}>Password</label>\n      <input\n        type=\"password\"\n        className={LoginContainerStyle.input}\n        name=\"password\"\n        onKeyPress={handleEnterPress}\n        onChange={handleInput}\n      />\n      {errors.password && (\n        <div className={LoginContainerStyle.error_msg}>\n          <span>{errors.password}</span>\n        </div>\n      )}\n      <button className={LoginContainerStyle.login_button} onClick={Submit}>\n        Log in\n      </button>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","/home/george/Documents/Projects/budget-tracker/src/modules/login/components/RegistrationForm.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/login/components/SocialNetworks.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/service/TransactionService.tsx",["307","308"],"import axios from \"axios\";\nimport {\n  Transaction,\n  TransactionReducer,\n} from \"../../../interfaces/Transaction\";\n\nlet config = {\n  headers: {\n    Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n  },\n};\n\nexport const createTransactionRequest = async (data: any) => {\n  const url = `http://localhost:5000/transaction/create`;\n\n  const request: any = {\n    method: \"POST\",\n    data,\n    headers: config.headers,\n    url,\n  };\n\n  try {\n    const response = await axios(request);\n    return response;\n  } catch (e) {\n    return { error: e };\n  }\n};\n\nexport const getSpecificDatePeriod = async (from: Date, to: Date) => {\n  const url = `http://localhost:5000/transaction/specificDatePeriod/${from}/${to}`;\n\n  const request: any = {\n    method: \"GET\",\n    headers: config.headers,\n    url,\n  };\n  try {\n    const response = await axios(request);\n    return response.data;\n  } catch (e) {\n    console.error(e);\n    return [];\n  }\n};\n\nexport const getYearlyOrWeekly = async (data: any) => {\n  const url = `http://localhost:5000/transaction/getYearlyOrWeekly`;\n\n  const request: any = {\n    method: \"POST\",\n    data,\n    headers: config.headers,\n    url,\n  };\n  try {\n    const response = await axios(request);\n    return response.data;\n  } catch (e) {\n    console.error(e);\n    return [];\n  }\n};\nexport const editTransaction = async (\n  selectedDayId: string,\n  transactionId: string,\n  data: any\n) => {\n  const url = `http://localhost:5000/transaction/event/edit/${selectedDayId}/${transactionId}`;\n\n  const request: any = {\n    method: \"PUT\",\n    data,\n    headers: config.headers,\n    url,\n  };\n\n  try {\n    const response = await axios(request);\n    return response;\n  } catch (e) {\n    return { error: e };\n  }\n};\nexport const deleteTransaction = async (\n  selectedDayId: string,\n  transactionId: string\n) => {\n  const url = `http://localhost:5000/transaction/event/delete/${selectedDayId}/${transactionId}`;\n\n  const request: any = {\n    method: \"PUT\",\n    data: {},\n    headers: config.headers,\n    url,\n  };\n\n  try {\n    const response = await axios(request);\n    return response;\n  } catch (e) {\n    return { error: e };\n  }\n};\nexport const getUserByJWToken = async () => {\n  const url = `http://localhost:5000/user/logged`;\n\n  const request: any = {\n    method: \"GET\",\n    headers: config.headers,\n    url,\n  };\n  try {\n    const response = await axios(request);\n\n    return response.data;\n  } catch (e) {\n    console.error(e);\n    return [];\n  }\n};\n","/home/george/Documents/Projects/budget-tracker/src/layout/sideBar/SideBar.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/actions/transactionActions.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/AddTransactionModal.tsx",["309","310","311","312","313"],"import React, { useCallback } from \"react\";\nimport styles from \"./AddTransactionStyle.module.css\";\nimport { TransactionEvent } from \"../../../../interfaces/Transaction\";\nimport { Error } from \"../../../../interfaces/Error\";\nimport { HandleInput } from \"../../../../interfaces/Function\";\nimport { TransactionTypes } from \"../../../../helpers/Variables\";\nimport { Tabs, TabList, TabPanel, Tab } from \"react-tabs\";\nimport Form from \"./form/Form\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport Moment from \"moment\";\n\ntype Props = {\n  isAddTransactionOpen: boolean;\n  transactionEvent: TransactionEvent;\n  errors: Error;\n  isEditTransactionOpen: boolean;\n  handleInputChange: (event: HandleInput) => void;\n  handleSave: () => void;\n  handleOpenTransaction: (date: Date) => void;\n  handleOpenEdit: (event: TransactionEvent) => void;\n  handleDelete: (eventId: string) => void;\n};\n\nconst AddTransactionModal: React.FC<Props> = ({\n  isAddTransactionOpen,\n  transactionEvent,\n  handleInputChange,\n  errors,\n  handleSave,\n  handleOpenTransaction,\n  isEditTransactionOpen,\n  handleOpenEdit,\n  handleDelete,\n}) => {\n  const ChooseCategory = (event: string) => {\n    switch (event) {\n      case TransactionTypes.Income:\n        return 0;\n      case TransactionTypes.Expense:\n        return 1;\n      case TransactionTypes.Transfer:\n        return 2;\n    }\n  };\n\n  const handleOpen = useCallback(() => {\n    isEditTransactionOpen\n      ? handleOpenEdit(transactionEvent)\n      : handleOpenTransaction(Moment().toDate());\n  }, [isEditTransactionOpen, transactionEvent]);\n  const handleSetIncomeType = useCallback(() => {\n    handleInputChange({\n      target: { value: TransactionTypes.Income, name: \"type\" },\n    });\n  }, []);\n  const handleSetExpenseType = useCallback(() => {\n    handleInputChange({\n      target: { value: TransactionTypes.Expense, name: \"type\" },\n    });\n  }, []);\n  const handleSetTransferType = useCallback(() => {\n    handleInputChange({\n      target: { value: TransactionTypes.Transfer, name: \"type\" },\n    });\n  }, []);\n  const handleDeleteTransaction = useCallback(() => {\n    handleDelete(transactionEvent._id);\n  }, [transactionEvent._id]);\n  return (\n    <div>\n      {isAddTransactionOpen || isEditTransactionOpen ? (\n        <div className={styles.modal_wrapper}>\n          <div className={styles.container}>\n            <FontAwesomeIcon\n              className={styles.close_button}\n              onClick={handleOpen}\n              icon={faTimesCircle}\n            />\n            <Tabs\n              selectedTabClassName={styles.selected_tab}\n              selectedIndex={ChooseCategory(transactionEvent.type)}\n            >\n              <TabList className={styles.tab_list}>\n                <Tab className={styles.tab} onClick={handleSetIncomeType}>\n                  <span>Income</span>\n                </Tab>\n                <Tab className={styles.tab} onClick={handleSetExpenseType}>\n                  <span>Expense</span>\n                </Tab>\n                <Tab className={styles.tab} onClick={handleSetTransferType}>\n                  <span>Transfer</span>\n                </Tab>\n              </TabList>\n\n              <TabPanel>\n                <Form\n                  transaction={transactionEvent}\n                  handleInputChange={handleInputChange}\n                  errors={errors}\n                />\n              </TabPanel>\n              <TabPanel>\n                <Form\n                  transaction={transactionEvent}\n                  handleInputChange={handleInputChange}\n                  errors={errors}\n                />\n              </TabPanel>\n              <TabPanel>\n                <Form\n                  transaction={transactionEvent}\n                  handleInputChange={handleInputChange}\n                  errors={errors}\n                />\n              </TabPanel>\n            </Tabs>\n            <input\n              type=\"text\"\n              className={styles.input}\n              name=\"description\"\n              value={transactionEvent.description}\n              onChange={handleInputChange}\n            />\n\n            {isEditTransactionOpen ? (\n              <div className={styles.buttons_content}>\n                <button className={styles.save_button} onClick={handleSave}>\n                  Save\n                </button>\n\n                <button\n                  className={styles.delete_button}\n                  onClick={handleDeleteTransaction}\n                >\n                  Delete\n                </button>\n              </div>\n            ) : (\n              <div className={styles.buttons_content}>\n                <button className={styles.save_button} onClick={handleSave}>\n                  Save\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default AddTransactionModal;\n","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/infoModal/InfoModal.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/dailyContainer/components/dailyTableRow/DailyTableRow.tsx",["314"],"import React, { useCallback } from \"react\";\nimport {\n  TransactionEventWithAmountNumber,\n  TransactionWithAmountNumber,\n} from \"../../../../../interfaces/Transaction\";\nimport { TransactionTypes } from \"../../../../../helpers/Variables\";\nimport styles from \"./DailyTableRow.module.css\";\ntype Props = {\n  handleSelectEvent: (\n    transactionEvent: TransactionEventWithAmountNumber,\n    transactionId: string\n  ) => void;\n  transactionEvent: TransactionEventWithAmountNumber;\n  transaction: TransactionWithAmountNumber;\n};\n\nconst DailyTableRow: React.FC<Props> = ({\n  transactionEvent,\n  handleSelectEvent,\n  transaction,\n}) => {\n  const selectEvent = useCallback(() => {\n    handleSelectEvent(transactionEvent, transaction._id);\n  }, [transactionEvent]);\n  return (\n    <tr onClick={selectEvent}>\n      <td>\n        <div className={styles.account_container}>\n          <div className={styles.account}>\n            {transactionEvent.type === TransactionTypes.Transfer\n              ? \"transfer\"\n              : transactionEvent.category}\n          </div>\n          <div className={styles.category}>\n            <div>{transactionEvent.note}</div>\n            {transactionEvent.type === TransactionTypes.Transfer ? (\n              <div>\n                {transactionEvent.from}\n                {\" ---> \"}\n                {transactionEvent.to}\n              </div>\n            ) : (\n              transactionEvent.account\n            )}\n          </div>\n        </div>\n      </td>\n      <td className={styles.income}>\n        {transactionEvent.type === TransactionTypes.Income\n          ? (transactionEvent.amount / 100).toFixed(2)\n          : null}\n      </td>\n      <td\n        className={\n          transactionEvent.type === TransactionTypes.Expense\n            ? styles.expense\n            : styles.transfer\n        }\n      >\n        <div>\n          {transactionEvent.type === TransactionTypes.Expense ||\n          transactionEvent.type === TransactionTypes.Transfer\n            ? (transactionEvent.amount / 100).toFixed(2)\n            : null}\n        </div>\n      </td>\n    </tr>\n  );\n};\n\nexport default DailyTableRow;\n","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/dailyContainer/components/dailyTableHeader/DailyTableHeader.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/actionTypes.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/Form.tsx",["315"],"import React, { forwardRef, useState, useCallback } from \"react\";\nimport styles from \"../AddTransactionStyle.module.css\";\nimport Moment from \"moment\";\nimport { TransactionEvent } from \"../../../../../interfaces/Transaction\";\nimport { HandleInput } from \"../../../../../interfaces/Function\";\nimport { Error } from \"../../../../../interfaces/Error\";\nimport { TransactionTypes } from \"../../../../../helpers/Variables\";\nimport InputTitles from \"./components/InputTitles\";\nimport SelectInput from \"./components/SelectInputs\";\nimport FeesInput from \"./components/FeesInput\";\nimport AmountInput from \"./components/AmountInput\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\ntype Props = {\n  transaction: TransactionEvent;\n  errors: Error;\n  handleInputChange: (event: HandleInput) => void;\n};\nconst Form: React.FC<Props> = ({ transaction, handleInputChange, errors }) => {\n  const [isFeesOpen, setIsFeesOpen] = useState(false);\n  const accounts = [\"\", \"cash\", \"card\", \"accounts\"];\n  const categoriesIncome = [\" \", \"salary\", \"bonus\", \"petty cash\", \"other\"];\n  const categoriesExpense = [\n    \"\",\n    \"food\",\n    \"culture\",\n    \"socialLife\",\n    \"selfDevelopment\",\n    \"transportation\",\n    \"other\",\n  ];\n\n  const selectOptions = (transactionType: string) => {\n    if (transactionType === TransactionTypes.Transfer) {\n      return accounts;\n    } else {\n      if (transactionType === TransactionTypes.Income) {\n        return categoriesIncome;\n      } else {\n        return categoriesExpense;\n      }\n    }\n  };\n  const handleSetDate = useCallback(date => {\n    handleInputChange({\n      target: { value: Moment(date).toDate(), name: \"date\" },\n    });\n  }, []);\n  const ExampleCustomInput: React.FC<any> = forwardRef(({ value, onClick }) => (\n    <div className={styles.input_container}>\n      <input className={styles.input} onClick={onClick} value={value} />\n    </div>\n  ));\n  return (\n    <div className={styles.content}>\n      <InputTitles transaction={transaction} isFeesOpen={isFeesOpen} />\n      <div className={styles.content_inputs}>\n        <DatePicker\n          selected={Moment(transaction.date).toDate()}\n          dateFormat=\" dd / MMMM / yyyy  h:mm aa\"\n          onChange={handleSetDate}\n          showTimeSelect\n          timeFormat=\"HH:mm\"\n          timeIntervals={15}\n          timeCaption=\"time\"\n          locale=\"pt-BR\"\n          customInput={<ExampleCustomInput />}\n        />\n\n        <SelectInput\n          selectValue={\n            transaction.type === TransactionTypes.Transfer\n              ? transaction.from\n              : transaction.account\n          }\n          transactionType={\n            transaction.type === TransactionTypes.Transfer ? \"from\" : \"account\"\n          }\n          options={accounts}\n          handleInputChange={handleInputChange}\n          error={\n            transaction.type === TransactionTypes.Transfer\n              ? errors.from\n              : errors.account\n          }\n        />\n        <SelectInput\n          selectValue={\n            transaction.type === TransactionTypes.Transfer\n              ? transaction.to\n              : transaction.category\n          }\n          transactionType={\n            transaction.type === TransactionTypes.Transfer ? \"to\" : \"category\"\n          }\n          options={selectOptions(transaction.type)}\n          handleInputChange={handleInputChange}\n          error={\n            transaction.type === TransactionTypes.Transfer\n              ? errors.to\n              : errors.category\n          }\n        />\n        <AmountInput\n          transaction={transaction}\n          handleInputChange={handleInputChange}\n          setIsFeesOpen={setIsFeesOpen}\n          isFeesOpen={isFeesOpen}\n          error={errors.amount}\n        />\n\n        <FeesInput\n          transaction={transaction}\n          handleInputChange={handleInputChange}\n          setIsFeesOpen={setIsFeesOpen}\n          isFeesOpen={isFeesOpen}\n        />\n\n        <input\n          type=\"text\"\n          className={styles.input}\n          name=\"note\"\n          value={transaction.note}\n          onChange={handleInputChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Form;\n","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/components/FeesInput.tsx",["316"],"import React, { useCallback } from \"react\";\nimport styles from \"../../AddTransactionStyle.module.css\";\nimport { TransactionEvent } from \"../../../../../../interfaces/Transaction\";\nimport { HandleInput } from \"../../../../../../interfaces/Function\";\ntype Props = {\n  handleInputChange: (event: HandleInput) => void;\n  setIsFeesOpen: (arg0: boolean) => void;\n  transaction: TransactionEvent;\n  isFeesOpen: boolean;\n};\n\nconst FeesInput: React.FC<Props> = ({\n  handleInputChange,\n  setIsFeesOpen,\n  transaction,\n  isFeesOpen,\n}) => {\n  const closeFees = useCallback(() => {\n    handleInputChange({ target: { value: \"0\", name: \"fees\" } });\n    setIsFeesOpen(!isFeesOpen);\n  }, [isFeesOpen]);\n  return (\n    <>\n      {isFeesOpen ? (\n        <div className={styles.input_container}>\n          <div className={styles.amount_container}>\n            <input\n              type=\"text\"\n              className={styles.input}\n              name=\"fees\"\n              value={transaction.fees}\n              onChange={handleInputChange}\n            />\n\n            <div className={styles.fees} onClick={closeFees}>\n              X\n            </div>\n          </div>\n        </div>\n      ) : null}\n    </>\n  );\n};\nexport default FeesInput;\n","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/components/InputTitles.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/components/SelectInputs.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/components/AmountInput.tsx",["317"],"import React, { useCallback } from \"react\";\nimport styles from \"../../AddTransactionStyle.module.css\";\nimport { TransactionEvent } from \"../../../../../../interfaces/Transaction\";\nimport { HandleInput } from \"../../../../../../interfaces/Function\";\nimport { errorMsg } from \"../../../../../../helpers/Validation\";\nimport { TransactionTypes } from \"../../../../../../helpers/Variables\";\ntype Props = {\n  handleInputChange: (event: HandleInput) => void;\n  setIsFeesOpen: (isOpen: boolean) => void;\n  transaction: TransactionEvent;\n  isFeesOpen: boolean;\n  error: string;\n};\n\nconst AmountInput: React.FC<Props> = ({\n  handleInputChange,\n  setIsFeesOpen,\n  transaction,\n  isFeesOpen,\n  error,\n}) => {\n  const setFeesOpen = useCallback(() => {\n    setIsFeesOpen(!isFeesOpen);\n  }, []);\n\n  return (\n    <div className={styles.input_container}>\n      <div className={styles.amount_container}>\n        <input\n          type=\"number\"\n          name=\"amount\"\n          className={styles.input}\n          value={transaction.amount}\n          onChange={handleInputChange}\n        />\n        {transaction.type === TransactionTypes.Transfer && !isFeesOpen ? (\n          <div className={styles.fees} onClick={setFeesOpen}>\n            Fees\n          </div>\n        ) : null}\n      </div>\n      {errorMsg(error)}\n    </div>\n  );\n};\nexport default AmountInput;\n","/home/george/Documents/Projects/budget-tracker/src/store/store.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/store/reducers/index.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/reducers/transactionReducer.tsx",["318"],"import { ActionTypes } from \"../actionTypes\";\nimport { TransactionEvent } from \"../../../interfaces/Transaction\";\nimport Moment from \"moment\";\n\nexport interface State {\n  date: Date;\n  transactionEvent: TransactionEvent;\n}\nconst initialState = {\n  date: Moment().toDate(),\n\n  transactionEvent: {\n    _id: \"\",\n    type: \"income\",\n    date: \"\",\n    account: \"\",\n    from: \"\",\n    category: \"\",\n    fees: \"0\",\n    transferId: \"\",\n    to: \"\",\n    amount: \"0\",\n    note: \"\",\n    description: \"\",\n    transactionId: \"\",\n  },\n};\nexport default function (state = initialState, action: any) {\n  switch (action.type) {\n    case ActionTypes.HANDLE_NEXT_MONTH:\n      const nextMonth = Moment(state.date).add(1, \"month\");\n      return {\n        ...state,\n        date: nextMonth,\n      };\n    case ActionTypes.HANDLE_PREVIOUS_MONTH:\n      const previousMonth = Moment(state.date).add(-1, \"month\");\n      return {\n        ...state,\n        date: previousMonth,\n      };\n    case ActionTypes.HANDLE_NEXT_YEAR:\n      let nextYear = Moment(state.date).add(1, \"year\").toDate();\n\n      return {\n        ...state,\n        date: nextYear,\n      };\n    case ActionTypes.HANDLE_PREVIOUS_YEAR:\n      let previousYear = Moment(state.date).add(-1, \"year\");\n      return {\n        ...state,\n        date: previousYear,\n      };\n\n    case ActionTypes.HANDLE_INPUT:\n      if (action.payload.name === \"type\") {\n        return {\n          ...state,\n          transactionEvent: {\n            ...state.transactionEvent,\n            [action.payload.name]: action.payload.value,\n            category: \"\",\n            to: \"\",\n          },\n        };\n      } else {\n        return {\n          ...state,\n          transactionEvent: {\n            ...state.transactionEvent,\n            [action.payload.name]: action.payload.value,\n          },\n        };\n      }\n    case ActionTypes.SET_TRANSACTION:\n      return {\n        ...state,\n        transactionEvent: action.payload,\n      };\n    case ActionTypes.SET_DATE:\n      return {\n        ...state,\n        date: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","/home/george/Documents/Projects/budget-tracker/src/layout/header/Header.tsx",["319","320"],"import React, { useState } from \"react\";\nimport styles from \"./HeaderStyle.module.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCaretDown, faBars, faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport SideBar from \"../sideBar/SideBar\";\nimport { useSelector } from \"react-redux\";\nimport { headerTitle } from \"../../helpers/Variables\";\nimport { User, UserReducer } from \"../../interfaces/User\";\nimport AccountMenu from \"../accountMenu/AccountMenu\";\nimport { TransactionReducer } from \"../../interfaces/Transaction\";\nconst NavBar = () => {\n  const [isSideBarOpen, setIsSideBarOpen] = useState(false);\n\n  const user = useSelector(\n    (state: { userReducer: UserReducer }) => state.userReducer.user\n  );\n\n  return (\n    <div>\n      <nav className={styles.container}>\n        <FontAwesomeIcon\n          className={styles.menu_bar}\n          icon={faBars}\n          onClick={() => setIsSideBarOpen(true)}\n        />\n\n        <div className={styles.page_title}>\n          {headerTitle(window.location.pathname)}\n        </div>\n        <div className={styles.dropdown}>\n          <div className={styles.user_content}>\n            <FontAwesomeIcon className={styles.user_email} icon={faUser} />\n            <span className={styles.user_email}>{user.email}</span>\n            <FontAwesomeIcon className={styles.caret_down} icon={faCaretDown} />\n          </div>\n          <AccountMenu />\n        </div>\n      </nav>\n      <SideBar\n        isSideBarOpen={isSideBarOpen}\n        setIsSideBarOpen={setIsSideBarOpen}\n      />\n    </div>\n  );\n};\nexport default NavBar;\n","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/weeklyContainer/components/WeeklyTableRow.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/yearlyContainer/components/YearlyTableRow.tsx",["321"],"import React from \"react\";\nimport Moment from \"moment\";\nimport styles from \"../YearlyStyle.module.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { isTheSameDate } from \"../../../../helpers/Variables\";\ntype Props = {\n  month: { from: Date; to: Date; expense: number; income: number };\n};\n\nconst YearlyTableRow: React.FC<Props> = ({ month }) => {\n  const history = useHistory();\n  return (\n    <tr onClick={() => history.push(`/transaction/monthly?date=${month.from}`)}>\n      {\" \"}\n      <td className={styles.month_content}>\n        <div\n          className={\n            Moment(month.from).diff(\n              Moment().startOf(\"month\").toDate(),\n              \"month\"\n            ) === 0\n              ? styles.month_selected\n              : styles.month\n          }\n        >\n          {Moment(month.from).format(\"MMMM\")}\n        </div>\n      </td>\n      <td className={styles.income}>{(month.income / 100).toFixed(2)}</td>\n      <td className={styles.expense}>{(month.expense / 100).toFixed(2)}</td>\n    </tr>\n  );\n};\n\nYearlyTableRow.propTypes = {};\n\nexport default YearlyTableRow;\n","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/infoModal/components/TableRow.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/InfoTableHead/InfoTableHead.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/layout/accountMenu/AccountMenu.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/layout/addTranasctionButton/AddTransactionButton.tsx",["322"],"/home/george/Documents/Projects/budget-tracker/src/modules/stats/components/StatsForm.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/monthlyContainer/Calendar/Calendar.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/monthlyContainer/Calendar/CalendarDate.tsx",["323","324"],"import React, { useCallback } from \"react\";\nimport Moment from \"moment\";\nimport { Transaction, CalendarDates } from \"../../../../interfaces/Transaction\";\nimport { isTheSameDate } from \"../../../../helpers/Variables\";\nimport styles from \"../MonthlyStyle.module.css\";\ntype Props = {\n  calendarDate: { date: Date };\n  transactions: Transaction[];\n  date: Date;\n  handleOpenInfoModal: (date: Date) => void;\n};\n\nconst CalendarDate: React.FC<Props> = ({\n  calendarDate,\n  transactions,\n  date,\n  handleOpenInfoModal,\n}) => {\n  const openInfoModal = useCallback(() => {\n    handleOpenInfoModal(Moment(calendarDate.date).startOf(\"date\").toDate());\n  }, [calendarDate]);\n\n  return (\n    <div\n      className={\n        Moment(date).get(\"month\") === Moment(calendarDate.date).get(\"month\")\n          ? styles.calendar_date_box_container\n          : styles.calendar_date_box_container_other_month\n      }\n      onClick={openInfoModal}\n    >\n      <div\n        className={\n          isTheSameDate(calendarDate.date, Moment().startOf(\"date\").toDate())\n            ? styles.current_date\n            : styles.calendar_date\n        }\n      >\n        {Moment(calendarDate.date).get(\"date\")}\n      </div>\n      {transactions.map(transaction =>\n        isTheSameDate(calendarDate.date, transaction.createdAt) ? (\n          <div key={transaction._id} className={styles.calendar_events_content}>\n            <div className={styles.income}>\n              {(transaction.income / 100).toFixed(2)}\n            </div>\n            <div className={styles.expense}>\n              {(transaction.expense / 100).toFixed(2)}\n            </div>\n            <div className={styles.total}>\n              {((transaction.income - transaction.expense) / 100).toFixed(2)}\n            </div>\n          </div>\n        ) : null\n      )}\n    </div>\n  );\n};\n\nexport default CalendarDate;\n","/home/george/Documents/Projects/budget-tracker/src/pages/exportPage/ExportPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/export/ExportContainer.tsx",["325","326"],"import React, { useState } from \"react\";\nimport Select from \"react-select\";\nimport \"./ExportStyle.css\";\n\nconst ExportContainer = (props: any) => {\n  const [selectedType, setSelectedType] = useState(\"\");\n  const options = [\" \", \"salary\", \"bonus\", \"petty cash\", \"other\"];\n  const handleInputChange = (event: any) => {};\n  return (\n    <div className=\"wrapper\">\n      <div>\n        <select\n          className=\"input\"\n          value={selectedType}\n          onChange={event => setSelectedType(event.target.value)}\n        >\n          {options.map(option => (\n            <option value={option}>{option}</option>\n          ))}\n        </select>\n      </div>\n      <div></div>\n    </div>\n  );\n};\n\nexport default ExportContainer;\n","/home/george/Documents/Projects/budget-tracker/src/helpers/AuthProvider.tsx",["327"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { getUserByJWToken } from \"../modules/transaction/service/TransactionService\";\nimport { singIn } from \"../modules/login/actions/usersActions\";\n\nconst AuthProvider = (props: any) => {\n  const [isLoading, setIsLoading] = useState(true);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    getUser();\n  }, []);\n\n  const getUser = async () => {\n    const user = await getUserByJWToken();\n\n    if (!user.user) {\n      localStorage.removeItem(\"jwt\");\n      setIsLoading(false);\n    } else {\n      dispatch(singIn(user));\n      setIsLoading(false);\n    }\n  };\n\n  if (isLoading) {\n    return <div />;\n  }\n  if (\n    !localStorage.getItem(\"jwt\") &&\n    !(window.location.pathname === \"/authentication\")\n  ) {\n    window.location.pathname = \"/authentication\";\n    return <div />;\n  }\n\n  return props.children;\n};\nexport default AuthProvider;\n","/home/george/Documents/Projects/budget-tracker/src/modules/login/actions/usersActions.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/login/actionTypes.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/login/reducer/userReducer.tsx",["328"],"import { SIGN_IN } from \"../actionTypes\";\n\nexport interface State {\n  user: any;\n  token: string;\n  loading: boolean;\n}\n\nconst initialState = {\n  user: {},\n  token: \"\",\n  loading: true,\n};\n\nexport default function (state = initialState, action: any) {\n  switch (action.type) {\n    case SIGN_IN:\n      if (action.payload.token) {\n        localStorage.setItem(\"jwt\", action.payload.token);\n      }\n\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n",{"ruleId":"329","replacedBy":"330"},{"ruleId":"331","replacedBy":"332"},{"ruleId":"333","severity":1,"message":"334","line":36,"column":11,"nodeType":"335","messageId":"336","endLine":36,"endColumn":14},{"ruleId":"337","severity":1,"message":"338","line":26,"column":6,"nodeType":"339","endLine":26,"endColumn":29,"suggestions":"340"},{"ruleId":"337","severity":1,"message":"341","line":30,"column":6,"nodeType":"339","endLine":30,"endColumn":8,"suggestions":"342"},{"ruleId":"337","severity":1,"message":"341","line":35,"column":6,"nodeType":"339","endLine":35,"endColumn":8,"suggestions":"343"},{"ruleId":"344","severity":1,"message":"345","line":119,"column":54,"nodeType":"346","messageId":"347","endLine":119,"endColumn":56},{"ruleId":"333","severity":1,"message":"348","line":6,"column":10,"nodeType":"335","messageId":"336","endLine":6,"endColumn":14},{"ruleId":"333","severity":1,"message":"349","line":6,"column":16,"nodeType":"335","messageId":"336","endLine":6,"endColumn":23},{"ruleId":"333","severity":1,"message":"350","line":7,"column":10,"nodeType":"335","messageId":"336","endLine":7,"endColumn":19},{"ruleId":"333","severity":1,"message":"351","line":7,"column":21,"nodeType":"335","messageId":"336","endLine":7,"endColumn":33},{"ruleId":"333","severity":1,"message":"352","line":8,"column":10,"nodeType":"335","messageId":"336","endLine":8,"endColumn":20},{"ruleId":"333","severity":1,"message":"353","line":8,"column":22,"nodeType":"335","messageId":"336","endLine":8,"endColumn":35},{"ruleId":"333","severity":1,"message":"348","line":6,"column":10,"nodeType":"335","messageId":"336","endLine":6,"endColumn":14},{"ruleId":"333","severity":1,"message":"349","line":6,"column":16,"nodeType":"335","messageId":"336","endLine":6,"endColumn":23},{"ruleId":"333","severity":1,"message":"350","line":7,"column":10,"nodeType":"335","messageId":"336","endLine":7,"endColumn":19},{"ruleId":"333","severity":1,"message":"351","line":7,"column":21,"nodeType":"335","messageId":"336","endLine":7,"endColumn":33},{"ruleId":"333","severity":1,"message":"352","line":8,"column":10,"nodeType":"335","messageId":"336","endLine":8,"endColumn":20},{"ruleId":"333","severity":1,"message":"353","line":8,"column":22,"nodeType":"335","messageId":"336","endLine":8,"endColumn":35},{"ruleId":"333","severity":1,"message":"348","line":6,"column":10,"nodeType":"335","messageId":"336","endLine":6,"endColumn":14},{"ruleId":"333","severity":1,"message":"349","line":6,"column":16,"nodeType":"335","messageId":"336","endLine":6,"endColumn":23},{"ruleId":"333","severity":1,"message":"350","line":7,"column":10,"nodeType":"335","messageId":"336","endLine":7,"endColumn":19},{"ruleId":"333","severity":1,"message":"351","line":7,"column":21,"nodeType":"335","messageId":"336","endLine":7,"endColumn":33},{"ruleId":"333","severity":1,"message":"352","line":8,"column":10,"nodeType":"335","messageId":"336","endLine":8,"endColumn":20},{"ruleId":"333","severity":1,"message":"353","line":8,"column":22,"nodeType":"335","messageId":"336","endLine":8,"endColumn":35},{"ruleId":"333","severity":1,"message":"354","line":1,"column":17,"nodeType":"335","messageId":"336","endLine":1,"endColumn":26},{"ruleId":"333","severity":1,"message":"348","line":6,"column":10,"nodeType":"335","messageId":"336","endLine":6,"endColumn":14},{"ruleId":"333","severity":1,"message":"349","line":6,"column":16,"nodeType":"335","messageId":"336","endLine":6,"endColumn":23},{"ruleId":"333","severity":1,"message":"350","line":7,"column":10,"nodeType":"335","messageId":"336","endLine":7,"endColumn":19},{"ruleId":"333","severity":1,"message":"351","line":7,"column":21,"nodeType":"335","messageId":"336","endLine":7,"endColumn":33},{"ruleId":"333","severity":1,"message":"352","line":8,"column":10,"nodeType":"335","messageId":"336","endLine":8,"endColumn":20},{"ruleId":"333","severity":1,"message":"353","line":8,"column":22,"nodeType":"335","messageId":"336","endLine":8,"endColumn":35},{"ruleId":"355","severity":1,"message":"356","line":25,"column":26,"nodeType":"335","messageId":"357","endLine":25,"endColumn":42},{"ruleId":"355","severity":1,"message":"358","line":28,"column":21,"nodeType":"335","messageId":"357","endLine":28,"endColumn":36},{"ruleId":"355","severity":1,"message":"356","line":34,"column":12,"nodeType":"335","messageId":"357","endLine":34,"endColumn":28},{"ruleId":"355","severity":1,"message":"356","line":37,"column":12,"nodeType":"335","messageId":"357","endLine":37,"endColumn":28},{"ruleId":"355","severity":1,"message":"356","line":37,"column":49,"nodeType":"335","messageId":"357","endLine":37,"endColumn":65},{"ruleId":"333","severity":1,"message":"359","line":1,"column":17,"nodeType":"335","messageId":"336","endLine":1,"endColumn":29},{"ruleId":"333","severity":1,"message":"360","line":3,"column":3,"nodeType":"335","messageId":"336","endLine":3,"endColumn":14},{"ruleId":"333","severity":1,"message":"361","line":4,"column":3,"nodeType":"335","messageId":"336","endLine":4,"endColumn":21},{"ruleId":"337","severity":1,"message":"362","line":51,"column":6,"nodeType":"339","endLine":51,"endColumn":47,"suggestions":"363"},{"ruleId":"337","severity":1,"message":"364","line":56,"column":6,"nodeType":"339","endLine":56,"endColumn":8,"suggestions":"365"},{"ruleId":"337","severity":1,"message":"364","line":61,"column":6,"nodeType":"339","endLine":61,"endColumn":8,"suggestions":"366"},{"ruleId":"337","severity":1,"message":"364","line":66,"column":6,"nodeType":"339","endLine":66,"endColumn":8,"suggestions":"367"},{"ruleId":"337","severity":1,"message":"368","line":69,"column":6,"nodeType":"339","endLine":69,"endColumn":28,"suggestions":"369"},{"ruleId":"337","severity":1,"message":"370","line":24,"column":6,"nodeType":"339","endLine":24,"endColumn":24,"suggestions":"371"},{"ruleId":"337","severity":1,"message":"364","line":49,"column":6,"nodeType":"339","endLine":49,"endColumn":8,"suggestions":"372"},{"ruleId":"337","severity":1,"message":"373","line":21,"column":6,"nodeType":"339","endLine":21,"endColumn":18,"suggestions":"374"},{"ruleId":"337","severity":1,"message":"375","line":24,"column":6,"nodeType":"339","endLine":24,"endColumn":8,"suggestions":"376"},{"ruleId":"377","severity":1,"message":"378","line":28,"column":1,"nodeType":"379","endLine":89,"endColumn":2},{"ruleId":"333","severity":1,"message":"380","line":8,"column":10,"nodeType":"335","messageId":"336","endLine":8,"endColumn":14},{"ruleId":"333","severity":1,"message":"361","line":10,"column":10,"nodeType":"335","messageId":"336","endLine":10,"endColumn":28},{"ruleId":"333","severity":1,"message":"381","line":5,"column":10,"nodeType":"335","messageId":"336","endLine":5,"endColumn":23},{"ruleId":"333","severity":1,"message":"382","line":8,"column":10,"nodeType":"335","messageId":"336","endLine":8,"endColumn":21},{"ruleId":"333","severity":1,"message":"383","line":3,"column":23,"nodeType":"335","messageId":"336","endLine":3,"endColumn":36},{"ruleId":"337","severity":1,"message":"384","line":21,"column":6,"nodeType":"339","endLine":21,"endColumn":20,"suggestions":"385"},{"ruleId":"333","severity":1,"message":"386","line":2,"column":8,"nodeType":"335","messageId":"336","endLine":2,"endColumn":14},{"ruleId":"333","severity":1,"message":"387","line":8,"column":9,"nodeType":"335","messageId":"336","endLine":8,"endColumn":26},{"ruleId":"337","severity":1,"message":"388","line":12,"column":6,"nodeType":"339","endLine":12,"endColumn":8,"suggestions":"389"},{"ruleId":"377","severity":1,"message":"378","line":15,"column":1,"nodeType":"379","endLine":31,"endColumn":2},"no-native-reassign",["390"],"no-negated-in-lhs",["391"],"@typescript-eslint/no-unused-vars","'key' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getYear'. Either include it or remove the dependency array.","ArrayExpression",["392"],"React Hook useCallback has missing dependencies: 'dispatch' and 'location.pathname'. Either include them or remove the dependency array.",["393"],["394"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'date' is assigned a value but never used.","'setDate' is assigned a value but never used.","'sumIncome' is assigned a value but never used.","'setSumIncome' is assigned a value but never used.","'sumExpense' is assigned a value but never used.","'setSumExpense' is assigned a value but never used.","'useEffect' is defined but never used.","@typescript-eslint/no-use-before-define","'TransactionTypes' was used before it was defined.","noUseBeforeDefine","'TransactionPage' was used before it was defined.","'ReactElement' is defined but never used.","'Transaction' is defined but never used.","'TransactionReducer' is defined but never used.","React Hook useCallback has missing dependencies: 'handleOpenEdit' and 'handleOpenTransaction'. Either include them or remove the dependency array. If 'handleOpenEdit' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["395"],"React Hook useCallback has a missing dependency: 'handleInputChange'. Either include it or remove the dependency array. If 'handleInputChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["396"],["397"],["398"],"React Hook useCallback has a missing dependency: 'handleDelete'. Either include it or remove the dependency array. If 'handleDelete' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["399"],"React Hook useCallback has missing dependencies: 'handleSelectEvent' and 'transaction._id'. Either include them or remove the dependency array. If 'handleSelectEvent' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["400"],["401"],"React Hook useCallback has missing dependencies: 'handleInputChange' and 'setIsFeesOpen'. Either include them or remove the dependency array. If 'handleInputChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["402"],"React Hook useCallback has missing dependencies: 'isFeesOpen' and 'setIsFeesOpen'. Either include them or remove the dependency array. If 'setIsFeesOpen' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["403"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'User' is defined but never used.","'isTheSameDate' is defined but never used.","'UserReducer' is defined but never used.","'CalendarDates' is defined but never used.","React Hook useCallback has a missing dependency: 'handleOpenInfoModal'. Either include it or remove the dependency array. If 'handleOpenInfoModal' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["404"],"'Select' is defined but never used.","'handleInputChange' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["405"],"no-global-assign","no-unsafe-negation",{"desc":"406","fix":"407"},{"desc":"408","fix":"409"},{"desc":"408","fix":"410"},{"desc":"411","fix":"412"},{"desc":"413","fix":"414"},{"desc":"413","fix":"415"},{"desc":"413","fix":"416"},{"desc":"417","fix":"418"},{"desc":"419","fix":"420"},{"desc":"413","fix":"421"},{"desc":"422","fix":"423"},{"desc":"424","fix":"425"},{"desc":"426","fix":"427"},{"desc":"428","fix":"429"},"Update the dependencies array to be: [getYear, stateTransaction.date]",{"range":"430","text":"431"},"Update the dependencies array to be: [dispatch, location.pathname]",{"range":"432","text":"433"},{"range":"434","text":"433"},"Update the dependencies array to be: [handleOpenEdit, handleOpenTransaction, isEditTransactionOpen, transactionEvent]",{"range":"435","text":"436"},"Update the dependencies array to be: [handleInputChange]",{"range":"437","text":"438"},{"range":"439","text":"438"},{"range":"440","text":"438"},"Update the dependencies array to be: [handleDelete, transactionEvent._id]",{"range":"441","text":"442"},"Update the dependencies array to be: [handleSelectEvent, transaction._id, transactionEvent]",{"range":"443","text":"444"},{"range":"445","text":"438"},"Update the dependencies array to be: [handleInputChange, isFeesOpen, setIsFeesOpen]",{"range":"446","text":"447"},"Update the dependencies array to be: [isFeesOpen, setIsFeesOpen]",{"range":"448","text":"449"},"Update the dependencies array to be: [calendarDate.date, handleOpenInfoModal]",{"range":"450","text":"451"},"Update the dependencies array to be: [getUser]",{"range":"452","text":"453"},[989,1012],"[getYear, stateTransaction.date]",[950,952],"[dispatch, location.pathname]",[1133,1135],[1604,1645],"[handleOpenEdit, handleOpenTransaction, isEditTransactionOpen, transactionEvent]",[1799,1801],"[handleInputChange]",[1957,1959],[2117,2119],[2221,2243],"[handleDelete, transactionEvent._id]",[732,750],"[handleSelectEvent, transaction._id, transactionEvent]",[1700,1702],[672,684],"[handleInputChange, isFeesOpen, setIsFeesOpen]",[776,778],"[isFeesOpen, setIsFeesOpen]",[645,659],"[calendarDate.date, handleOpenInfoModal]",[412,414],"[getUser]"]