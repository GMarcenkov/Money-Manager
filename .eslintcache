[{"/home/george/Documents/Projects/budget-tracker/src/index.tsx":"1","/home/george/Documents/Projects/budget-tracker/src/reportWebVitals.ts":"2","/home/george/Documents/Projects/budget-tracker/src/App.tsx":"3","/home/george/Documents/Projects/budget-tracker/src/store/store.tsx":"4","/home/george/Documents/Projects/budget-tracker/src/routes.tsx":"5","/home/george/Documents/Projects/budget-tracker/src/helpers/AuthProvider.tsx":"6","/home/george/Documents/Projects/budget-tracker/src/store/reducers/index.tsx":"7","/home/george/Documents/Projects/budget-tracker/src/pages/transactionPage/MonthlyPage.tsx":"8","/home/george/Documents/Projects/budget-tracker/src/pages/transactionPage/WeeklyPage.tsx":"9","/home/george/Documents/Projects/budget-tracker/src/pages/loginPage/LoginPage.tsx":"10","/home/george/Documents/Projects/budget-tracker/src/pages/homePage/HomePage.tsx":"11","/home/george/Documents/Projects/budget-tracker/src/pages/transactionPage/DailyPage.tsx":"12","/home/george/Documents/Projects/budget-tracker/src/pages/transactionPage/YearlyPage.tsx":"13","/home/george/Documents/Projects/budget-tracker/src/pages/statsPage/WeeklyPage.tsx":"14","/home/george/Documents/Projects/budget-tracker/src/pages/statsPage/YearlyPage.tsx":"15","/home/george/Documents/Projects/budget-tracker/src/pages/statsPage/DailyPage.tsx":"16","/home/george/Documents/Projects/budget-tracker/src/pages/statsPage/MonthlyPage.tsx":"17","/home/george/Documents/Projects/budget-tracker/src/pages/exportPage/ExportPage.tsx":"18","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/service/TransactionService.tsx":"19","/home/george/Documents/Projects/budget-tracker/src/modules/login/actions/usersActions.tsx":"20","/home/george/Documents/Projects/budget-tracker/src/modules/login/reducer/userReducer.tsx":"21","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/reducers/transactionReducer.tsx":"22","/home/george/Documents/Projects/budget-tracker/src/modules/login/LoginContainer.tsx":"23","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/weeklyContainer/WeeklyContainer.tsx":"24","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/dailyContainer/DailyContainer.tsx":"25","/home/george/Documents/Projects/budget-tracker/src/modules/export/ExportContainer.tsx":"26","/home/george/Documents/Projects/budget-tracker/src/modules/login/actionTypes.tsx":"27","/home/george/Documents/Projects/budget-tracker/src/layout/header/Header.tsx":"28","/home/george/Documents/Projects/budget-tracker/src/layout/addTranasctionButton/AddTransactionButton.tsx":"29","/home/george/Documents/Projects/budget-tracker/src/modules/stats/monthlyContainer/MonthlyContainer.tsx":"30","/home/george/Documents/Projects/budget-tracker/src/modules/stats/yearlyContainer/YearlyContainer.tsx":"31","/home/george/Documents/Projects/budget-tracker/src/modules/stats/weeklyContainer/WeeklyContainer.tsx":"32","/home/george/Documents/Projects/budget-tracker/src/modules/stats/dailyContainer/DailyContainer.tsx":"33","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/monthlyContainer/MonthlyContainer.tsx":"34","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/yearlyContainer/YearlyContainer.tsx":"35","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/actionTypes.tsx":"36","/home/george/Documents/Projects/budget-tracker/src/helpers/Validation.tsx":"37","/home/george/Documents/Projects/budget-tracker/src/helpers/Variables.tsx":"38","/home/george/Documents/Projects/budget-tracker/src/modules/login/components/SocialNetworks.tsx":"39","/home/george/Documents/Projects/budget-tracker/src/modules/login/components/RegistrationForm.tsx":"40","/home/george/Documents/Projects/budget-tracker/src/modules/login/components/LoginForm.tsx":"41","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/weeklyContainer/components/WeeklyTableRow.tsx":"42","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/actions/transactionActions.tsx":"43","/home/george/Documents/Projects/budget-tracker/src/layout/accountMenu/AccountMenu.tsx":"44","/home/george/Documents/Projects/budget-tracker/src/layout/sideBar/SideBar.tsx":"45","/home/george/Documents/Projects/budget-tracker/src/layout/navBar/NavBar.tsx":"46","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/InfoTableHead/InfoTableHead.tsx":"47","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/AddTransactionModal.tsx":"48","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/dailyContainer/components/dailyTableRow/DailyTableRow.tsx":"49","/home/george/Documents/Projects/budget-tracker/src/modules/stats/components/StatsForm.tsx":"50","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/dailyContainer/components/dailyTableHeader/DailyTableHeader.tsx":"51","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/infoModal/InfoModal.tsx":"52","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/monthlyContainer/Calendar/Calendar.tsx":"53","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/yearlyContainer/components/YearlyTableRow.tsx":"54","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/Form.tsx":"55","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/infoModal/components/TableRow.tsx":"56","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/monthlyContainer/Calendar/CalendarDate.tsx":"57","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/components/SelectInputs.tsx":"58","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/components/AmountInput.tsx":"59","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/components/FeesInput.tsx":"60","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/components/InputTitles.tsx":"61"},{"size":620,"mtime":1618221138789,"results":"62","hashOfConfig":"63"},{"size":427,"mtime":1618316676127,"results":"64","hashOfConfig":"63"},{"size":246,"mtime":1618316676119,"results":"65","hashOfConfig":"63"},{"size":370,"mtime":1618221151686,"results":"66","hashOfConfig":"63"},{"size":1783,"mtime":1618316676127,"results":"67","hashOfConfig":"63"},{"size":918,"mtime":1618654511663,"results":"68","hashOfConfig":"63"},{"size":268,"mtime":1618316676127,"results":"69","hashOfConfig":"63"},{"size":317,"mtime":1618654511667,"results":"70","hashOfConfig":"63"},{"size":433,"mtime":1618316676127,"results":"71","hashOfConfig":"63"},{"size":218,"mtime":1618316676123,"results":"72","hashOfConfig":"63"},{"size":192,"mtime":1618316676123,"results":"73","hashOfConfig":"63"},{"size":427,"mtime":1618316676123,"results":"74","hashOfConfig":"63"},{"size":433,"mtime":1618316676127,"results":"75","hashOfConfig":"63"},{"size":305,"mtime":1618316676123,"results":"76","hashOfConfig":"63"},{"size":305,"mtime":1618316676123,"results":"77","hashOfConfig":"63"},{"size":299,"mtime":1618316676123,"results":"78","hashOfConfig":"63"},{"size":311,"mtime":1618316676123,"results":"79","hashOfConfig":"63"},{"size":290,"mtime":1618316676123,"results":"80","hashOfConfig":"63"},{"size":2619,"mtime":1618654511667,"results":"81","hashOfConfig":"63"},{"size":412,"mtime":1618316676123,"results":"82","hashOfConfig":"63"},{"size":625,"mtime":1618316676123,"results":"83","hashOfConfig":"63"},{"size":2149,"mtime":1618654511667,"results":"84","hashOfConfig":"63"},{"size":4007,"mtime":1618654511663,"results":"85","hashOfConfig":"63"},{"size":2802,"mtime":1618686796180,"results":"86","hashOfConfig":"63"},{"size":3232,"mtime":1618682651716,"results":"87","hashOfConfig":"63"},{"size":590,"mtime":1618654511663,"results":"88","hashOfConfig":"63"},{"size":68,"mtime":1618316676123,"results":"89","hashOfConfig":"63"},{"size":1430,"mtime":1618316676123,"results":"90","hashOfConfig":"63"},{"size":3459,"mtime":1618683755445,"results":"91","hashOfConfig":"63"},{"size":752,"mtime":1618316676123,"results":"92","hashOfConfig":"63"},{"size":711,"mtime":1618654511663,"results":"93","hashOfConfig":"63"},{"size":711,"mtime":1618654511663,"results":"94","hashOfConfig":"63"},{"size":709,"mtime":1618654511663,"results":"95","hashOfConfig":"63"},{"size":10710,"mtime":1618683009533,"results":"96","hashOfConfig":"63"},{"size":3335,"mtime":1618574509271,"results":"97","hashOfConfig":"63"},{"size":337,"mtime":1618316676123,"results":"98","hashOfConfig":"63"},{"size":2198,"mtime":1618316676123,"results":"99","hashOfConfig":"63"},{"size":3381,"mtime":1618611510526,"results":"100","hashOfConfig":"63"},{"size":767,"mtime":1618316676123,"results":"101","hashOfConfig":"63"},{"size":1698,"mtime":1618316676123,"results":"102","hashOfConfig":"63"},{"size":1280,"mtime":1618316676123,"results":"103","hashOfConfig":"63"},{"size":894,"mtime":1618585873432,"results":"104","hashOfConfig":"63"},{"size":1180,"mtime":1618316676123,"results":"105","hashOfConfig":"63"},{"size":1015,"mtime":1618316676123,"results":"106","hashOfConfig":"63"},{"size":1259,"mtime":1618238735599,"results":"107","hashOfConfig":"63"},{"size":3153,"mtime":1618583265526,"results":"108","hashOfConfig":"63"},{"size":831,"mtime":1618334317233,"results":"109","hashOfConfig":"63"},{"size":4837,"mtime":1618316676123,"results":"110","hashOfConfig":"63"},{"size":2085,"mtime":1618593653586,"results":"111","hashOfConfig":"63"},{"size":1303,"mtime":1618654511663,"results":"112","hashOfConfig":"63"},{"size":1314,"mtime":1618593594317,"results":"113","hashOfConfig":"63"},{"size":2430,"mtime":1618654511667,"results":"114","hashOfConfig":"63"},{"size":1358,"mtime":1618654511667,"results":"115","hashOfConfig":"63"},{"size":988,"mtime":1618654511667,"results":"116","hashOfConfig":"63"},{"size":3815,"mtime":1618316676123,"results":"117","hashOfConfig":"63"},{"size":1464,"mtime":1618654511667,"results":"118","hashOfConfig":"63"},{"size":1865,"mtime":1618654511667,"results":"119","hashOfConfig":"63"},{"size":846,"mtime":1618316676123,"results":"120","hashOfConfig":"63"},{"size":1359,"mtime":1618316676123,"results":"121","hashOfConfig":"63"},{"size":1249,"mtime":1618316676123,"results":"122","hashOfConfig":"63"},{"size":1045,"mtime":1618316676123,"results":"123","hashOfConfig":"63"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},"wf1fx5",{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"126"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"126"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"126"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"126"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"126"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"126"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"126"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"126"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"126"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"126"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"126"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"126"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"126"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"126"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"126"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"126"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"126"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"126"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"126"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"126"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"126"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"126"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"126"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"126"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"126"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},"/home/george/Documents/Projects/budget-tracker/src/index.tsx",[],["273","274","275","276","277","278"],"/home/george/Documents/Projects/budget-tracker/src/reportWebVitals.ts",[],"/home/george/Documents/Projects/budget-tracker/src/App.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/store/store.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/routes.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/helpers/AuthProvider.tsx",["279","280","281"],"import React, {useEffect, useState} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {getUserByJWToken} from '../modules/transaction/service/TransactionService';\nimport {singIn} from '../modules/login/actions/usersActions';\n\nconst AuthProvider = (props: any) => {\n  const [isLoading, setIsLoading] = useState(true);\n\n  const dispatch = useDispatch();\n\n  const getUser = async () => {\n    const user = await getUserByJWToken();\n\n    if (!user.user) {\n      localStorage.removeItem('jwt');\n      setIsLoading(false);\n    } else {\n      dispatch(singIn(user));\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getUser();\n  });\n\n  if (isLoading) {\n    return <div />;\n  }\n  if (!localStorage.getItem('jwt') && !(window.location.pathname === '/authentication')) {\n    window.location.pathname = '/authentication';\n    return <div />;\n  }\n\n  return props.children;\n};\nexport default AuthProvider;\n","/home/george/Documents/Projects/budget-tracker/src/store/reducers/index.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/transactionPage/MonthlyPage.tsx",["282","283","284"],"import React from 'react';\nimport queryString from 'query-string';\nimport NavBar from '../../layout/header/Header';\nimport MonthlyContainer from '../../modules/transaction/monthlyContainer/MonthlyContainer';\n\nconst MonthlyPage = (props: any): JSX.Element => {\n  const {location} = props;\n  const filters = queryString.parse(location.search);\n  return (\n    <>\n      <NavBar />\n      <MonthlyContainer />\n    </>\n  );\n};\n\nexport default MonthlyPage;\n","/home/george/Documents/Projects/budget-tracker/src/pages/transactionPage/WeeklyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/loginPage/LoginPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/homePage/HomePage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/transactionPage/DailyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/transactionPage/YearlyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/statsPage/WeeklyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/statsPage/YearlyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/statsPage/DailyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/statsPage/MonthlyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/exportPage/ExportPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/service/TransactionService.tsx",["285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305"],"import axios from 'axios';\n\nconst config = {\n  headers: {\n    Authorization: `Bearer ${localStorage.getItem('jwt')}`\n  }\n};\n\nexport const createTransactionRequest = async (data: any) => {\n  const url = `http://localhost:5000/transaction/create`;\n\n  const request: any = {\n    method: 'POST',\n    data,\n    headers: config.headers,\n    url\n  };\n\n  try {\n    const response = await axios(request);\n    return response;\n  } catch (e) {\n    return {error: e};\n  }\n};\n\nexport const getSpecificDatePeriod = async (from: Date, to: Date) => {\n  const url = `http://localhost:5000/transaction/specificDatePeriod/${from}/${to}`;\n\n  const request: any = {\n    method: 'GET',\n    headers: config.headers,\n    url\n  };\n  try {\n    const response = await axios(request);\n    return response.data;\n  } catch (e) {\n    console.error(e);\n    return [];\n  }\n};\n\nexport const getYearlyOrWeekly = async (data: any) => {\n  const url = `http://localhost:5000/transaction/getYearlyOrWeekly`;\n\n  const request: any = {\n    method: 'POST',\n    data,\n    headers: config.headers,\n    url\n  };\n  try {\n    const response = await axios(request);\n    return response.data;\n  } catch (e) {\n    console.error(e);\n    return [];\n  }\n};\nexport const editTransaction = async (selectedDayId: string, transactionId: string, data: any) => {\n  const url = `http://localhost:5000/transaction/event/edit/${selectedDayId}/${transactionId}`;\n\n  const request: any = {\n    method: 'PUT',\n    data,\n    headers: config.headers,\n    url\n  };\n\n  try {\n    const response = await axios(request);\n    return response;\n  } catch (e) {\n    return {error: e};\n  }\n};\nexport const deleteTransaction = async (selectedDayId: string, transactionId: string) => {\n  const url = `http://localhost:5000/transaction/event/delete/${selectedDayId}/${transactionId}`;\n\n  const request: any = {\n    method: 'PUT',\n    data: {},\n    headers: config.headers,\n    url\n  };\n\n  try {\n    const response = await axios(request);\n    return response;\n  } catch (e) {\n    return {error: e};\n  }\n};\nexport const getUserByJWToken = async () => {\n  const url = `http://localhost:5000/user/logged`;\n\n  const request: any = {\n    method: 'GET',\n    headers: config.headers,\n    url\n  };\n  try {\n    const response = await axios(request);\n\n    return response.data;\n  } catch (e) {\n    console.error(e);\n    return [];\n  }\n};\n","/home/george/Documents/Projects/budget-tracker/src/modules/login/actions/usersActions.tsx",["306","307","308"],"import {SIGN_IN} from '../actionTypes';\n\nexport const singIn = (user: {\n  email: string;\n  password: string;\n  categories: [];\n  createdAt: string;\n  username: string;\n  updatedAt: string;\n  type: string;\n  id: string;\n}) => async (dispatch: any): Promise<void> => {\n  try {\n    await dispatch({\n      type: SIGN_IN,\n      payload: user\n    });\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport default singIn;\n","/home/george/Documents/Projects/budget-tracker/src/modules/login/reducer/userReducer.tsx",["309","310","311"],"import {UserRegister} from '../../../models/User';\nimport {SIGN_IN} from '../actionTypes';\n\nexport interface State {\n  user: UserRegister;\n  token: string;\n  loading: boolean;\n}\n\nconst initialState = {\n  user: {},\n  token: '',\n  loading: true\n};\n\nexport default (state = initialState, action: any) => {\n  switch (action.type) {\n    case SIGN_IN:\n      if (action.payload.token) {\n        localStorage.setItem('jwt', action.payload.token);\n      }\n\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        loading: false\n      };\n    default:\n      return state;\n  }\n};\n","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/reducers/transactionReducer.tsx",["312","313","314"],"import Moment from 'moment';\nimport {ActionTypes} from '../actionTypes';\nimport {TransactionEvent} from '../../../models/Transaction';\n\nexport interface State {\n  date: Date;\n  transactionEvent: TransactionEvent;\n}\nconst initialState = {\n  date: Moment().toDate(),\n\n  transactionEvent: {\n    _id: '',\n    type: 'income',\n    date: '',\n    account: '',\n    from: '',\n    category: '',\n    fees: '0',\n    transferId: '',\n    to: '',\n    amount: '0',\n    note: '',\n    description: '',\n    transactionId: ''\n  }\n};\nexport default (state = initialState, action: any) => {\n  switch (action.type) {\n    case ActionTypes.HANDLE_NEXT_MONTH: {\n      const nextMonth = Moment(state.date).add(1, 'month');\n      return {\n        ...state,\n        date: nextMonth\n      };\n    }\n\n    case ActionTypes.HANDLE_PREVIOUS_MONTH: {\n      const previousMonth = Moment(state.date).add(-1, 'month');\n      return {\n        ...state,\n        date: previousMonth\n      };\n    }\n\n    case ActionTypes.HANDLE_NEXT_YEAR: {\n      const nextYear = Moment(state.date).add(1, 'year').toDate();\n\n      return {\n        ...state,\n        date: nextYear\n      };\n    }\n\n    case ActionTypes.HANDLE_PREVIOUS_YEAR: {\n      const previousYear = Moment(state.date).add(-1, 'year');\n      return {\n        ...state,\n        date: previousYear\n      };\n    }\n\n    case ActionTypes.HANDLE_INPUT:\n      if (action.payload.name === 'type') {\n        return {\n          ...state,\n          transactionEvent: {\n            ...state.transactionEvent,\n            [action.payload.name]: action.payload.value,\n            category: '',\n            to: ''\n          }\n        };\n      }\n      return {\n        ...state,\n        transactionEvent: {\n          ...state.transactionEvent,\n          [action.payload.name]: action.payload.value\n        }\n      };\n\n    case ActionTypes.SET_TRANSACTION:\n      return {\n        ...state,\n        transactionEvent: action.payload\n      };\n    case ActionTypes.SET_DATE:\n      return {\n        ...state,\n        date: action.payload\n      };\n    default:\n      return state;\n  }\n};\n","/home/george/Documents/Projects/budget-tracker/src/modules/login/LoginContainer.tsx",["315"],"import React, {useState} from 'react';\nimport {Tabs, TabList, TabPanel, Tab} from 'react-tabs';\nimport {useDispatch} from 'react-redux';\nimport axios from 'axios';\nimport LoginForm from './components/LoginForm';\nimport RegistrationForm from './components/RegistrationForm';\nimport SocialNetworks from './components/SocialNetworks';\nimport {validateLogin} from '../../helpers/Validation';\nimport {singIn} from './actions/usersActions';\nimport style from './LoginContainerStyle.module.css';\n\nconst LoginContainer = (): JSX.Element => {\n  const [user, setUser] = useState({\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [isLogin, setIsLogin] = useState(true);\n  const [errors, setErrors] = useState({\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n\n  const dispatch = useDispatch();\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setUser({\n      ...user,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleLogin = async () => {\n    const validationErrors = validateLogin(user, isLogin);\n    const isValid = Object.values(errors).filter(Boolean).length <= 0;\n    if (!isValid) {\n      setErrors({\n        email: validationErrors.email,\n        password: validationErrors.password,\n        confirmPassword: validationErrors.confirmPassword\n      });\n      return;\n    }\n    localStorage.removeItem('jwt');\n    const loggedUser = await axios.post(`http://localhost:5000/signIn`, user);\n\n    if (loggedUser.data.user) {\n      dispatch(singIn(loggedUser.data));\n      window.location.pathname = '/';\n      setErrors({email: '', password: '', confirmPassword: ''});\n    } else {\n      setErrors({\n        email: '',\n        password: loggedUser.data.errorMSG,\n        confirmPassword: ''\n      });\n    }\n  };\n  const handleRegister = async () => {\n    const validationErrors = validateLogin(user, isLogin);\n    const isValid = Object.values(errors).filter(Boolean).length <= 0;\n    if (!isValid) {\n      setErrors({\n        email: validationErrors.email,\n        password: validationErrors.password,\n        confirmPassword: validationErrors.confirmPassword\n      });\n      return;\n    }\n    localStorage.removeItem('jwt');\n\n    const newUser = {\n      username: user.email,\n      email: user.email,\n      password: user.password,\n      type: 'admin',\n      currency: 'BG'\n    };\n    try {\n      const signUp = await axios.post(`http://localhost:5000/signUp`, newUser);\n\n      if (signUp.data.user) {\n        dispatch(singIn(signUp.data));\n        window.location.pathname = '/';\n        setErrors({email: '', password: '', confirmPassword: ''});\n      }\n    } catch (e) {\n      alert(e);\n    }\n  };\n  return (\n    <div className={style.container}>\n      <div className={style.login_form}>\n        <Tabs selectedTabClassName={style.selected_tab}>\n          <TabList className={style.tab_list}>\n            <Tab\n              className={style.tab}\n              onClick={() => {\n                setUser({email: '', password: '', confirmPassword: ''});\n                setErrors({email: '', password: '', confirmPassword: ''});\n                setIsLogin(true);\n              }}\n            >\n              Sign In\n            </Tab>\n            <Tab\n              className={style.tab}\n              onClick={() => {\n                setUser({email: '', password: '', confirmPassword: ''});\n                setErrors({email: '', password: '', confirmPassword: ''});\n                setIsLogin(false);\n              }}\n            >\n              Register\n            </Tab>\n          </TabList>\n          <TabPanel>\n            <LoginForm Submit={handleLogin} errors={errors} handleInput={handleInputChange} />\n          </TabPanel>\n          <TabPanel>\n            <RegistrationForm Submit={handleRegister} errors={errors} handleInput={handleInputChange} />\n          </TabPanel>\n        </Tabs>\n        <SocialNetworks />\n      </div>\n    </div>\n  );\n};\nexport default LoginContainer;\n","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/weeklyContainer/WeeklyContainer.tsx",["316"],"import React, {useEffect, useState} from 'react';\nimport {useSelector} from 'react-redux';\nimport Moment from 'moment';\nimport NavBarMenu from '../../../layout/navBar/NavBar';\nimport InfoTableHead from '../components/InfoTableHead/InfoTableHead';\nimport WeeklyTableRow from './components/WeeklyTableRow';\nimport {getYearlyOrWeekly} from '../service/TransactionService';\nimport {\n  firstDateOfFirstWeekOfTheMonth,\n  lastDateOfFirstWeekOfTheMonth,\n  firstDateOfLastWeekOfTheMonth,\n  lastDateOfLastWeekOfTheMonth\n} from '../../../helpers/Variables';\nimport {Month, TransactionReducer} from '../../../models/Transaction';\nimport {UserReducer} from '../../../models/User';\nimport styles from './WeeklyStyle.module.css';\nimport '../../../scss/variables.scss';\n\nconst WeeklyContainer = (): JSX.Element => {\n  const [weeksInMonth, setWeeks] = useState<Month[]>([]);\n  const [sumIncome, setSumIncome] = useState(0);\n  const [sumExpense, setSumExpense] = useState(0);\n\n  const stateTransaction = useSelector(\n    (state: {userReducer: UserReducer; transactionReducer: TransactionReducer}) => state.transactionReducer\n  );\n  const {amount} = stateTransaction.transactionEvent;\n  const getWeeks = async (date: Date) => {\n    const weeks: Month[] = [];\n\n    setWeeks([]);\n    console.log(weeks);\n    weeks.push({\n      from: firstDateOfFirstWeekOfTheMonth(date).toDate(),\n      to: lastDateOfFirstWeekOfTheMonth(date).toDate(),\n      income: 0,\n      expense: 0\n    });\n\n    for (\n      let i = lastDateOfFirstWeekOfTheMonth(date).get('date');\n      i <= firstDateOfLastWeekOfTheMonth(date).get('date') - 7;\n      i += 7\n    ) {\n      weeks.push({\n        from: Moment(date)\n          .set('date', i + 1)\n          .startOf('date')\n          .toDate(),\n        to: Moment(date)\n          .set('date', i + 7)\n          .startOf('date')\n          .toDate(),\n        income: 0,\n        expense: 0\n      });\n    }\n\n    weeks.push({\n      from: firstDateOfLastWeekOfTheMonth(date).startOf('date').toDate(),\n      to: lastDateOfLastWeekOfTheMonth(date).startOf('date').toDate(),\n      income: 0,\n      expense: 0\n    });\n\n    const data = await getYearlyOrWeekly(weeks);\n\n    setWeeks(data.months.reverse());\n    setSumExpense(data.sumExpense);\n    setSumIncome(data.sumIncome);\n  };\n\n  useEffect(() => {\n    getWeeks(stateTransaction.date);\n  }, [amount, stateTransaction.date]);\n  return (\n    <div className=\"wrapper\">\n      <NavBarMenu />\n      <div className={styles.container}>\n        <table className={styles.table}>\n          <InfoTableHead sumExpense={sumExpense} sumIncome={sumIncome} />\n          <tbody>\n            {weeksInMonth.map((week) => (\n              <WeeklyTableRow week={week} />\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default WeeklyContainer;\n","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/dailyContainer/DailyContainer.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/export/ExportContainer.tsx",["317","318","319","320","321","322"],"import React, {useState} from 'react';\nimport './ExportStyle.css';\n\nconst ExportContainer = (props: any): JSX.Element => {\n  const [selectedType, setSelectedType] = useState('');\n  const options = [' ', 'salary', 'bonus', 'petty cash', 'other'];\n  const handleInputChange = (event: any) => {};\n  return (\n    <div className=\"wrapper\">\n      <div>\n        <select className=\"input\" value={selectedType} onChange={(event) => setSelectedType(event.target.value)}>\n          {options.map((option) => (\n            <option value={option}>{option}</option>\n          ))}\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExportContainer;\n","/home/george/Documents/Projects/budget-tracker/src/modules/login/actionTypes.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/layout/header/Header.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/layout/addTranasctionButton/AddTransactionButton.tsx",["323"],"import React, {useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport Moment from 'moment';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faPlusCircle} from '@fortawesome/free-solid-svg-icons';\nimport {TransactionReducer} from '../../models/Transaction';\nimport {handleInput, setTransaction, setDate} from '../../modules/transaction/actions/transactionActions';\nimport AddTransactionModal from '../../modules/transaction/components/addTransactionModal/AddTransactionModal';\nimport {validateTransaction} from '../../helpers/Validation';\nimport {getTransaction} from '../../helpers/Variables';\nimport {\n  createTransactionRequest,\n  deleteTransaction,\n  editTransaction\n} from '../../modules/transaction/service/TransactionService';\nimport styles from '../../modules/transaction/dailyContainer/DailyStyle.module.css';\n\nconst AddTransactionButton = (): JSX.Element => {\n  const [isTransactionOpen, setIsTransactionOpen] = useState(false);\n  const [errors, setErrors] = useState({\n    account: '',\n    from: '',\n    category: '',\n    to: '',\n    amount: ''\n  });\n  const dispatch = useDispatch();\n\n  const stateTransaction = useSelector((state: {transactionReducer: TransactionReducer}) => state.transactionReducer);\n\n  const {transactionId, _id: transactionEventId} = stateTransaction.transactionEvent;\n\n  const clearState = () => {\n    setErrors({account: '', from: '', category: '', to: '', amount: ''});\n    setIsTransactionOpen(false);\n    // dispatch(setDate(stateTransaction.date));\n    dispatch(\n      setTransaction({\n        _id: '',\n        type: 'income',\n        date: Moment().toDate(),\n        account: '',\n        from: '',\n        category: '',\n        fees: '0',\n        to: '',\n        amount: '0',\n        note: '',\n        description: '',\n        transactionId: ''\n      })\n    );\n  };\n  const handleSave = async () => {\n    const validationErrors = validateTransaction(stateTransaction.transactionEvent);\n    const isValid = Object.values(validationErrors).filter(Boolean).length <= 0;\n\n    if (!isValid) {\n      setErrors(errors);\n      return;\n    }\n\n    const event = getTransaction(stateTransaction.transactionEvent);\n\n    if (transactionId) {\n      await editTransaction(transactionId, transactionEventId, event.events[0]);\n    } else {\n      await createTransactionRequest(event);\n    }\n    clearState();\n  };\n  const handleDelete = async (eventId: string) => {\n    await deleteTransaction(transactionId, eventId);\n    clearState();\n  };\n\n  const handleOpenTransaction = () => {\n    if (isTransactionOpen) {\n      clearState();\n    } else {\n      setIsTransactionOpen(true);\n      dispatch(\n        handleInput({\n          target: {\n            name: 'date',\n            value: stateTransaction.date\n          }\n        })\n      );\n    }\n  };\n\n  return (\n    <>\n      <FontAwesomeIcon className={styles.add_button} icon={faPlusCircle} onClick={handleOpenTransaction} />\n\n      <AddTransactionModal\n        isAddTransactionOpen={isTransactionOpen}\n        transactionEvent={stateTransaction.transactionEvent}\n        errors={errors}\n        isEditTransactionOpen={transactionId.length > 0}\n        handleInputChange={(event) => dispatch(handleInput(event))}\n        handleSave={handleSave}\n        handleOpenTransaction={handleOpenTransaction}\n        handleOpenEdit={clearState}\n        handleDelete={handleDelete}\n      />\n    </>\n  );\n};\n\nexport default AddTransactionButton;\n","/home/george/Documents/Projects/budget-tracker/src/modules/stats/monthlyContainer/MonthlyContainer.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/stats/yearlyContainer/YearlyContainer.tsx",["324","325","326","327","328","329"],"import React, {useState} from 'react';\nimport NavBarMenu from '../../../layout/navBar/NavBar';\nimport StatsForm from '../components/StatsForm';\n\nconst YearlyContainer = (): JSX.Element => {\n  const [date, setDate] = useState(new Date());\n  const [sumIncome, setSumIncome] = useState(0);\n  const [sumExpense, setSumExpense] = useState(0);\n\n  const data = [\n    {\n      category: 'food',\n      value: 16900,\n      color: '#E38627',\n      label: 'category'\n    },\n    {category: 'beauty', value: 4000, color: 'red', label: 'beauty'},\n    {category: 'culture', value: 45699, color: 'blue', label: 'culture'}\n  ];\n  return (\n    <div className=\"wrapper\">\n      <NavBarMenu />\n      <div className=\"stats_container\">\n        <StatsForm stats={data} isIncome />\n        <StatsForm stats={data} isIncome={false} />\n      </div>\n    </div>\n  );\n};\n\nexport default YearlyContainer;\n","/home/george/Documents/Projects/budget-tracker/src/modules/stats/weeklyContainer/WeeklyContainer.tsx",["330","331","332","333","334","335"],"import React, {useState} from 'react';\nimport NavBarMenu from '../../../layout/navBar/NavBar';\nimport StatsForm from '../components/StatsForm';\n\nconst WeeklyContainer = (): JSX.Element => {\n  const [date, setDate] = useState(new Date());\n  const [sumIncome, setSumIncome] = useState(0);\n  const [sumExpense, setSumExpense] = useState(0);\n\n  const data = [\n    {\n      category: 'food',\n      value: 16900,\n      color: '#E38627',\n      label: 'category'\n    },\n    {category: 'beauty', value: 4000, color: 'red', label: 'beauty'},\n    {category: 'culture', value: 45699, color: 'blue', label: 'culture'}\n  ];\n  return (\n    <div className=\"wrapper\">\n      <NavBarMenu />\n      <div className=\"stats_container\">\n        <StatsForm stats={data} isIncome />\n        <StatsForm stats={data} isIncome={false} />\n      </div>\n    </div>\n  );\n};\n\nexport default WeeklyContainer;\n","/home/george/Documents/Projects/budget-tracker/src/modules/stats/dailyContainer/DailyContainer.tsx",["336","337","338","339","340","341"],"import React, {useState} from 'react';\nimport NavBarMenu from '../../../layout/navBar/NavBar';\nimport StatsForm from '../components/StatsForm';\n\nconst DailyContainer = (): JSX.Element => {\n  const [date, setDate] = useState(new Date());\n  const [sumIncome, setSumIncome] = useState(0);\n  const [sumExpense, setSumExpense] = useState(0);\n\n  const data = [\n    {\n      category: 'food',\n      value: 16900,\n      color: '#E38627',\n      label: 'category'\n    },\n    {category: 'beauty', value: 4000, color: 'red', label: 'beauty'},\n    {category: 'culture', value: 45699, color: 'blue', label: 'culture'}\n  ];\n  return (\n    <div className=\"wrapper\">\n      <NavBarMenu />\n      <div className=\"stats_container\">\n        <StatsForm stats={data} isIncome />\n        <StatsForm stats={data} isIncome={false} />\n      </div>\n    </div>\n  );\n};\n\nexport default DailyContainer;\n","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/monthlyContainer/MonthlyContainer.tsx",["342","343","344","345"],"import React, {useEffect, useState} from 'react';\n\nimport Moment from 'moment';\nimport {useDispatch, useSelector} from 'react-redux';\nimport NavBarMenu from '../../../layout/navBar/NavBar';\nimport InfoModal from '../components/infoModal/InfoModal';\nimport Calendar from './Calendar/Calendar';\nimport {\n  firstDateOfFirstWeekOfTheMonth,\n  firstDateOfTheMonth,\n  lastDateOfTheMonth,\n  lastDateOfLastWeekOfTheMonth,\n  isTheSameDate\n} from '../../../helpers/Variables';\nimport {deleteTransaction, getSpecificDatePeriod} from '../service/TransactionService';\nimport {handleInput, setTransaction} from '../actions/transactionActions';\nimport {\n  CalendarDates,\n  Transaction,\n  TransactionEvent,\n  TransactionEventWithAmountNumber,\n  TransactionReducer,\n  TransactionWithAmountNumber\n} from '../../../models/Transaction';\nimport {Error} from '../../../models/Error';\nimport '../../../scss/variables.scss';\nimport AddTransactionButton from '../../../layout/addTranasctionButton/AddTransactionButton';\n\ntype State = {\n  isAddTransactionOpen: boolean;\n  isInfoTransactionOpen: boolean;\n  isEditTransactionOpen: boolean;\n  selectedDay: Transaction;\n  isTransfer: boolean;\n  errors: Error;\n  date: Date;\n  calendarDates: {date: Date}[];\n  transactions: Transaction[];\n};\n\nconst MonthlyContainer = (): JSX.Element => {\n  const [transactions, setTransactions] = useState<TransactionWithAmountNumber[]>([]);\n  const [selectedTransaction, setSelectedTransaction] = useState<TransactionWithAmountNumber>({\n    _id: '',\n    createdAt: Moment().startOf('date').toDate(),\n    events: [],\n    expense: 0,\n    income: 0\n  });\n\n  const [calendarDates, setCalendarDates] = useState<State['calendarDates']>([]);\n  const [isEditTransactionOpen, setIsEditTransactionOpen] = useState(false);\n  const [isAddTransactionOpen, setIsAddTransactionOpen] = useState(false);\n  const [isInfoTransactionOpen, setIsInfoTransactionOpen] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const stateTransaction = useSelector((state: {transactionReducer: TransactionReducer}) => state.transactionReducer);\n  const {amount} = stateTransaction.transactionEvent;\n  // eslint-disable-next-line react/state-in-constructor\n\n  // componentDidMount() {\n  //   const {stateTransaction, filters, setDate: setDateWithFilter} = this.props;\n  //   if (filters.date) {\n  //     this.setState({\n  //       date: filters.date\n  //     });\n  //     setDateWithFilter(filters.date);\n  //     this.getTransactions(filters.date);\n  //     this.setCalendar(filters.date);\n  //   } else {\n  //     this.setState({\n  //       date: stateTransaction.date\n  //     });\n  //     this.getTransactions(stateTransaction.date);\n  //     this.setCalendar(stateTransaction.date);\n  //   }\n  // }\n\n  // componentDidUpdate(prevProps: Readonly<Props>) {\n  //   const {stateTransaction, filters} = this.props;\n\n  //   if (prevProps.stateTransaction.date !== stateTransaction.date) {\n  //     if (!filters.date) {\n  //       this.setCalendar(stateTransaction.date);\n  //       this.getTransactions(stateTransaction.date);\n  //     }\n  //   }\n  // }\n\n  const getTransactions = async (date: Date) => {\n    const from: Date = firstDateOfFirstWeekOfTheMonth(date).toDate();\n    const to: Date = lastDateOfLastWeekOfTheMonth(date).toDate();\n    const data = await getSpecificDatePeriod(from, to);\n    data.transactions.forEach((transactionItem: TransactionWithAmountNumber) => {\n      if (isTheSameDate(selectedTransaction.createdAt, transactionItem.createdAt)) {\n        setSelectedTransaction(transactionItem);\n      }\n    });\n    setTransactions(data.transactions);\n  };\n\n  const clearState = () => {\n    setTransaction({\n      _id: '',\n      type: 'income',\n      date: Moment().toDate(),\n      account: '',\n      from: '',\n      category: '',\n      fees: '0',\n      to: '',\n      amount: '0',\n      note: '',\n      description: '',\n      transactionId: ''\n    });\n  };\n\n  const handleDelete = async (eventId: string) => {\n    const {_id: selectedDayId} = selectedTransaction;\n\n    await deleteTransaction(selectedDayId, eventId);\n    // eslint-disable-next-line no-underscore-dangle\n    const newEvents: TransactionEventWithAmountNumber[] = selectedTransaction.events.filter(\n      ({_id: transactionEventId}) => transactionEventId !== eventId\n    );\n    // this.setState({\n    //   selectedDay: {...selectedDay, events: newEvents},\n    //   isEditTransactionOpen: false\n    // });\n    setSelectedTransaction({...selectedTransaction, events: newEvents});\n    clearState();\n    getTransactions(stateTransaction.date);\n  };\n\n  const handleOpenEdit = (event: TransactionEventWithAmountNumber) => {\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n\n    const {_id: selectedTransactionId} = selectedTransaction;\n    if (isEditTransactionOpen) {\n      setIsEditTransactionOpen(false);\n\n      clearState();\n    } else {\n      setIsEditTransactionOpen(true);\n\n      const Event: TransactionEvent = {\n        ...event,\n        amount: (event.amount / 100).toFixed(2),\n        fees: (event.fees / 100).toFixed(2),\n        transactionId: selectedTransactionId\n      };\n\n      dispatch(setTransaction(Event));\n    }\n  };\n\n  const handleNextDay = async () => {\n    const newDate: Date = Moment(selectedTransaction.createdAt).add(1, 'days').toDate();\n    setSelectedTransaction({...selectedTransaction, createdAt: newDate, events: []});\n\n    // this.setState({\n    //   selectedDay: {createdAt: newDate, events: []},\n    //   date: newDate\n    // });\n\n    transactions.forEach((transaction) => {\n      if (isTheSameDate(newDate, transaction.createdAt)) {\n        setSelectedTransaction(transaction);\n      }\n    });\n  };\n\n  const handlePreviousDay = async () => {\n    const newDate: Date = Moment(selectedTransaction.createdAt).add(-1, 'days').toDate();\n    // this.setState({\n    //   selectedDay: {createdAt: newDate, events: []},\n    //   date: newDate\n    // });\n    setSelectedTransaction({...selectedTransaction, createdAt: newDate, events: []});\n\n    transactions.forEach((transaction) => {\n      if (isTheSameDate(newDate, transaction.createdAt)) {\n        setSelectedTransaction(transaction);\n      }\n    });\n  };\n\n  const handleOpenTransaction = () => {\n    const {createdAt} = selectedTransaction;\n    // const {handleInput} = this.props;\n    if (isAddTransactionOpen) {\n      setIsAddTransactionOpen(false);\n      clearState();\n    } else {\n      handleInput({\n        target: {\n          name: 'date',\n          value: createdAt\n        }\n      });\n      setIsAddTransactionOpen(true);\n    }\n  };\n\n  const selectedDay = (date: Date) => {\n    transactions.forEach((transaction) => {\n      if (isTheSameDate(date, transaction.createdAt)) {\n        setSelectedTransaction(transaction);\n      }\n    });\n  };\n\n  const handleOpenInfoModal = (date: Date) => {\n    if (isInfoTransactionOpen) {\n      setIsInfoTransactionOpen(false);\n      setSelectedTransaction({...selectedTransaction, events: []});\n    } else {\n      setIsInfoTransactionOpen(true);\n      setSelectedTransaction({...selectedTransaction, createdAt: date, events: []});\n\n      selectedDay(date);\n    }\n  };\n\n  // const handleSave = async () => {\n  //   const {_id: transactionEventId} = stateTransaction.transactionEvent;\n  //   const errors1: Error = validateTransaction(stateTransaction.transactionEvent);\n  //   const isValid: boolean = Object.values(errors1).filter(Boolean).length <= 0;\n\n  //   if (!isValid) {\n  //     setErrors(errors);\n  //     return;\n  //   }\n  //   const event = getTransaction(stateTransaction.transactionEvent);\n\n  //   if (isEditTransactionOpen) {\n  //     await editTransaction(selectedDayId, transactionEventId, event.events[0]);\n\n  //     this.getTransactions(transactionEvent.date);\n  //     this.clearState();\n  //   } else {\n  //     await createTransactionRequest(event);\n  //     this.getTransactions(date);\n  //     this.clearState();\n  //   }\n  //   this.setState({\n  //     // eslint-disable-next-line react/no-access-state-in-setstate\n  //     ...this.state,\n  //     errors: {},\n  //     isAddTransactionOpen: false,\n  //     isEditTransactionOpen: false\n  //   });\n  // };\n\n  const setFirstWeek = (date: Date) => {\n    const lastDateOfPreviusMonth: number = Moment(date).set('date', 0).get('date');\n    const calendar: any = [];\n    for (let i = firstDateOfFirstWeekOfTheMonth(date).get('date'); i <= lastDateOfPreviusMonth; i += 1) {\n      calendar.push({\n        date: Moment(firstDateOfFirstWeekOfTheMonth(date)).set('date', i).toDate()\n      });\n    }\n    return calendar;\n  };\n\n  const setLastWeek = (date: Date) => {\n    const calendar: any = [];\n    for (let i = 1; i <= lastDateOfLastWeekOfTheMonth(date).get('date'); i += 1) {\n      calendar.push({\n        date: Moment(lastDateOfLastWeekOfTheMonth(date)).startOf('date').set('date', i).toDate()\n      });\n    }\n    return calendar;\n  };\n\n  const setCalendar = async (date: Date) => {\n    setCalendarDates([]);\n    let calendar: State['calendarDates'] = [];\n\n    if (firstDateOfTheMonth(date).get('day') !== 1) {\n      calendar = setFirstWeek(date);\n    }\n\n    for (let i = 1; i <= lastDateOfTheMonth(date).get('date'); i += 1) {\n      calendar.push({\n        date: Moment(firstDateOfTheMonth(date)).set('date', i).toDate()\n      });\n    }\n\n    if (lastDateOfTheMonth(date).get('day') !== 0) {\n      setLastWeek(date);\n      calendar = calendar.concat(setLastWeek(date));\n    }\n\n    setCalendarDates(calendar);\n  };\n\n  useEffect(() => {\n    setCalendar(stateTransaction.date);\n    getTransactions(stateTransaction.date);\n  }, [amount, stateTransaction.date]);\n\n  return (\n    <div className=\"wrapper\">\n      <NavBarMenu />\n      <Calendar\n        handleOpenInfoModal={handleOpenInfoModal}\n        transactions={transactions}\n        calendarDates={calendarDates}\n        date={stateTransaction.date}\n      />\n      <InfoModal\n        handleDelete={handleDelete}\n        selectedTransaction={selectedTransaction}\n        handleNextDay={handleNextDay}\n        isInfoTransactionOpen={isInfoTransactionOpen}\n        handlePreviousDay={handlePreviousDay}\n        handleOpenInfoModal={handleOpenInfoModal}\n        handleOpenTransaction={handleOpenTransaction}\n        handleOpenEdit={handleOpenEdit}\n      />\n      <AddTransactionButton />\n      {/* <AddTransactionModal\n        isEditTransactionOpen={isEditTransactionOpen}\n        errors={errors}\n        transactionEvent={transactionEvent}\n        handleSave={handleSave}\n        handleOpenEdit={handleOpenEdit}\n        handleInputChange={handleInput}\n        isAddTransactionOpen={isAddTransactionOpen}\n        handleOpenTransaction={handleOpenTransaction}\n        handleDelete={handleDelete}\n      /> */}\n    </div>\n  );\n};\n\nexport default MonthlyContainer;\n","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/yearlyContainer/YearlyContainer.tsx",["346"],"import React, {useEffect, useState} from 'react';\nimport {useSelector} from 'react-redux';\nimport Moment from 'moment';\nimport {getYearlyOrWeekly} from '../service/TransactionService';\nimport {Month, TransactionReducer} from '../../../models/Transaction';\nimport {UserReducer} from '../../../models/User';\nimport NavBarMenu from '../../../layout/navBar/NavBar';\nimport InfoTableHead from '../components/InfoTableHead/InfoTableHead';\nimport YearlyTableRow from './components/YearlyTableRow';\nimport styles from './YearlyStyle.module.css';\n\nconst YearlyContainer = (): JSX.Element => {\n  const [monthsInYear, setMonthsInYear] = useState<Month[]>([]);\n  const [sumIncome, setSumIncome] = useState(0);\n  const [sumExpense, setSumExpense] = useState(0);\n\n  const stateTransaction = useSelector(\n    (state: {userReducer: UserReducer; transactionReducer: TransactionReducer}) => state.transactionReducer\n  );\n  const setMonths = (months: Month[]) => {\n    const year: Month[] = [];\n    const newMonths: Month[] = months.filter((month) => month.expense > 0 || month.income > 0);\n    let lastMonth: number = Moment().get('month');\n    if (newMonths.length > 0 && lastMonth < Moment(newMonths[newMonths.length - 1].from).get('month')) {\n      lastMonth = Moment(newMonths[newMonths.length - 1].from).get('month');\n    }\n    for (let i = 0; i <= lastMonth; i += 1) {\n      if (newMonths.filter((month) => Moment(month.from).get('month') === i).length > 0) {\n        year.push(newMonths.filter((month) => Moment(month.from).get('month') === i)[0]);\n      } else {\n        year.push({\n          from: Moment().startOf('month').set('month', i).toDate(),\n          to: Moment().endOf('month').set('month', i).toDate(),\n          income: 0,\n          expense: 0\n        });\n      }\n    }\n    setMonthsInYear(year.reverse());\n  };\n\n  const getYear = async (date: Date) => {\n    const months: Month[] = [];\n\n    for (let i = 0; i <= 11; i += 1) {\n      months.push({\n        from: Moment(date).set('month', i).startOf('month').toDate(),\n        to: Moment(date).set('month', i).endOf('month').toDate(),\n        income: 0,\n        expense: 0\n      });\n    }\n\n    const data = await getYearlyOrWeekly(months);\n\n    if (Moment(date).get('year') < Moment().get('year')) {\n      setMonthsInYear(data.months.reverse());\n      setSumExpense(data.sumExpense);\n      setSumIncome(data.sumIncome);\n    }\n\n    if (Moment(date).get('year') === Moment().get('year')) {\n      setMonths(data.months);\n      setSumExpense(data.sumExpense);\n      setSumIncome(data.sumIncome);\n    }\n    if (Moment(date).get('year') > Moment().get('year')) {\n      setMonthsInYear(data.months.filter((month: Month) => month.expense > 0 || month.income > 0).reverse());\n      setSumExpense(data.sumExpense);\n      setSumIncome(data.sumIncome);\n    }\n  };\n\n  useEffect(() => {\n    getYear(stateTransaction.date);\n  }, [stateTransaction.date]);\n\n  return (\n    <div className=\"wrapper\">\n      <NavBarMenu />\n      <div className={styles.container}>\n        <table className={styles.table}>\n          <InfoTableHead sumIncome={sumIncome} sumExpense={sumExpense} />\n          <tbody>\n            {monthsInYear.map((month) => (\n              <YearlyTableRow month={month} />\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default YearlyContainer;\n","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/actionTypes.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/helpers/Validation.tsx",["347"],"import React from 'react';\nimport AddTransactionStyle from '../modules/transaction/components/addTransactionModal/AddTransactionStyle.module.css';\nimport {TransactionEvent} from '../models/Transaction';\nimport {Error} from '../models/Error';\nimport {TransactionTypes, TransactionPage} from './Variables';\nimport {UserRegister} from '../models/User';\n\nexport const validateTransaction = (value: TransactionEvent): Error => {\n  const errors: Error = {\n    account: '',\n    from: '',\n    category: '',\n    to: '',\n    amount: '',\n    fees: ''\n  };\n\n  if (!value.account && value.type !== TransactionPage.Transaction) {\n    errors.account = 'Please select an account';\n  }\n\n  if (value.type === TransactionTypes.Transfer && !value.from) {\n    errors.from = 'Please select from';\n  }\n  if (!value.category && value.type !== TransactionTypes.Transfer) {\n    errors.category = 'Please select a category';\n  }\n  if (value.type === TransactionTypes.Transfer && !value.to) {\n    errors.to = 'Please select to';\n  }\n  if (!value.amount) {\n    errors.amount = 'Please add an amount';\n  }\n\n  if (parseFloat(value.fees!) > parseFloat(value.amount)) {\n    errors.fees = \"Fees can't be greater then amount\";\n  }\n  return errors;\n};\n\nexport const validateLogin = (\n  user: UserRegister,\n  isLogin: boolean\n): {\n  email: string;\n  password: string;\n  confirmPassword: string;\n} => {\n  const isValidEmail = RegExp(\n    \"[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\"\n  );\n  const errors = {\n    email: '',\n    password: '',\n    confirmPassword: ''\n  };\n  if (!isValidEmail.test(user.email)) {\n    errors.email = 'Please enter a valid email.';\n  }\n  if (user.password !== user.confirmPassword && !isLogin) {\n    errors.confirmPassword = 'The password does not match. ';\n  }\n  if (!user.password.match(/^[0-9a-zA-Z]+$/) || user.password.length > 20 || user.password.length < 6) {\n    errors.password = 'Please enter 6-20 characters [A-Z, a-z, 0-9 only].';\n  }\n  return errors;\n};\n\nexport const errorMsg = (error: string): JSX.Element => {\n  return <>{error && <div className={AddTransactionStyle.error_msg}>{error}</div>}</>;\n};\n","/home/george/Documents/Projects/budget-tracker/src/helpers/Variables.tsx",["348","349"],"import Moment from 'moment';\nimport {TransactionEvent} from '../models/Transaction';\n\nexport enum DaysOfWeek {\n  Monday = 'M',\n  Thuesday = 'T',\n  Wednesday = 'W',\n  Thursday = 'Th',\n  Friday = 'F',\n  Saturday = 'Sa',\n  Sunday = 'Su'\n}\n\nexport enum TransactionTypes {\n  Transfer = 'transfer',\n  Income = 'income',\n  Expense = 'expense',\n  Currency = 'Bg'\n}\nexport enum TransactionPage {\n  Transaction = 'transaction',\n  Stats = 'stats',\n  Export = 'export',\n  Accounts = 'accounts'\n}\n\nexport enum UnitOfTime {\n  Date = 'date',\n  Week = 'week',\n  Month = 'month',\n  Year = 'year'\n}\n\nexport const firstDateOfTheMonth = (date: Date): Moment.Moment => Moment(date).startOf('month');\n\nexport const lastDateOfTheMonth = (date: Date): Moment.Moment => Moment(date).endOf('month');\n\nexport const firstDateOfFirstWeekOfTheMonth = (date: Date): Moment.Moment =>\n  firstDateOfTheMonth(date).startOf('isoWeek');\n\nexport const lastDateOfFirstWeekOfTheMonth = (date: Date): Moment.Moment => firstDateOfTheMonth(date).endOf('isoWeek');\n\nexport const firstDateOfLastWeekOfTheMonth = (date: Date): Moment.Moment => lastDateOfTheMonth(date).startOf('isoWeek');\n\nexport const lastDateOfLastWeekOfTheMonth = (date: Date): Moment.Moment =>\n  lastDateOfTheMonth(date).startOf('day').endOf('isoWeek');\n\nexport const isTheSameDate = (calendarDate: Date, transactionDate: Date): boolean =>\n  Moment(calendarDate).diff(transactionDate, 'day') === 0;\n\nexport const isTypeTransfer = (type: string): boolean => type.toLowerCase() === TransactionTypes.Transfer;\n\nexport const isTransactionContainer = (pathname: string): boolean => pathname.includes(TransactionPage.Transaction);\n\nexport const isSelectedTitle = (pathname: string, path: string): boolean =>\n  pathname === `/transaction/${path}` || pathname === `/stats/${path}`;\n\nexport const isTransactionTypeIncome = (type: string, amount: number): string =>\n  type === TransactionTypes.Income ? (amount / 100).toFixed(2) : '';\n\nexport const isTransactionTypeExpense = (type: string, amount: number): string =>\n  type === TransactionTypes.Expense || type === TransactionTypes.Transfer ? (amount / 100).toFixed(2) : '';\n\nexport const headerTitle = (path: string): string => {\n  switch (true) {\n    case path.includes('/transaction'):\n      return TransactionPage.Transaction.toLocaleUpperCase();\n    case path.includes('/stats'):\n      return TransactionPage.Stats.toLocaleUpperCase();\n    case path.includes('/export'):\n      return TransactionPage.Export.toLocaleUpperCase();\n    case path.includes('/accounts'):\n      return TransactionPage.Accounts.toLocaleUpperCase();\n    default:\n      return '';\n  }\n};\n\nexport const getTransaction = (transactionEvent: TransactionEvent) => {\n  const {type, transferId, date, account, category, from, fees, to, amount, note, description} = transactionEvent;\n  return {\n    events: [\n      {\n        type: type.toLowerCase(),\n        currency: TransactionTypes.Currency,\n        transferId,\n        date: Moment(date),\n        account: isTypeTransfer(type) ? '' : account,\n        category: isTypeTransfer(type) ? '' : category,\n        from: isTypeTransfer(type) ? from : '',\n        fees: parseFloat(fees!) * 100,\n        to: isTypeTransfer(type) ? to : '',\n        amount: parseFloat(amount) * 100,\n        note,\n        description\n      }\n    ],\n    createdAt: Moment(transactionEvent.date).startOf('date')\n  };\n};\n","/home/george/Documents/Projects/budget-tracker/src/modules/login/components/SocialNetworks.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/login/components/RegistrationForm.tsx",["350"],"import React from 'react';\nimport LoginContainerStyle from '../LoginContainerStyle.module.css';\n\ntype Props = {\n  Submit: () => void;\n  errors: {\n    email: string;\n    password: string;\n    confirmPassword: string;\n  };\n  handleInput: (event: any) => void;\n};\n\nconst RegistrationForm: React.FC<Props> = ({Submit, errors, handleInput}) => {\n  return (\n    <div className={LoginContainerStyle.login_content}>\n      <label htmlFor=\"Email\" className={LoginContainerStyle.login_label}>\n        Email\n        <input className={LoginContainerStyle.input} name=\"email\" onChange={handleInput} />\n      </label>\n      {errors.email && (\n        <div className={LoginContainerStyle.error_msg}>\n          <span>{errors.email}</span>\n        </div>\n      )}\n      <label htmlFor=\"Password\" className={LoginContainerStyle.login_label}>\n        Password\n        <input type=\"password\" className={LoginContainerStyle.input} name=\"password\" onChange={handleInput} />\n      </label>\n      {errors.password && (\n        <div className={LoginContainerStyle.error_msg}>\n          <span>{errors.password}</span>\n        </div>\n      )}\n      <label htmlFor=\"Confirm password\" className={LoginContainerStyle.login_label}>\n        Confirm Password\n        <input type=\"password\" className={LoginContainerStyle.input} name=\"confirmPassword\" onChange={handleInput} />\n      </label>\n      {errors.confirmPassword && (\n        <div className={LoginContainerStyle.error_msg}>\n          <span>{errors.confirmPassword}</span>\n        </div>\n      )}\n      <button type=\"button\" className={LoginContainerStyle.login_button} onClick={Submit}>\n        Register\n      </button>\n    </div>\n  );\n};\n\nexport default RegistrationForm;\n","/home/george/Documents/Projects/budget-tracker/src/modules/login/components/LoginForm.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/weeklyContainer/components/WeeklyTableRow.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/actions/transactionActions.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/layout/accountMenu/AccountMenu.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/layout/sideBar/SideBar.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/layout/navBar/NavBar.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/InfoTableHead/InfoTableHead.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/AddTransactionModal.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/dailyContainer/components/dailyTableRow/DailyTableRow.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/stats/components/StatsForm.tsx",["351","352","353"],"import React from 'react';\nimport {PieChart} from 'react-minimal-pie-chart';\nimport './StatsFormStyle.css';\n\ntype Props = {\n  stats: any;\n  isIncome: boolean;\n};\nconst StatsForm: React.FC<Props> = ({stats, isIncome}) => {\n  return (\n    <div className=\"form_wrapper\">\n      <div className=\"title\">{isIncome ? 'Income' : 'Expense'}</div>\n      <div className=\"pie_wrapper\">\n        <PieChart\n          labelStyle={(index) => ({\n            fontSize: '8px',\n            fontFamily: 'sans-serif'\n          })}\n          radius={42}\n          labelPosition={112}\n          animate\n          label={({dataEntry}) => dataEntry.category}\n          data={stats}\n        />\n      </div>\n      <div>\n        <table className=\"content_table\">\n          <tbody>\n            {stats.map((stat: any) => (\n              <tr>\n                <td className=\"percent_content\">\n                  <div className=\"percent\" style={{backgroundColor: stat.color}}>\n                    63%\n                  </div>\n                </td>\n                <td>{stat.category.charAt(0).toUpperCase() + stat.category.slice(1)}</td>\n                <td className=\"amount\">{(stat.value / 100).toFixed(2)}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default StatsForm;\n","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/dailyContainer/components/dailyTableHeader/DailyTableHeader.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/infoModal/InfoModal.tsx",["354","355"],"import React from 'react';\nimport Moment from 'moment';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faAngleRight, faAngleLeft, faPlusCircle} from '@fortawesome/free-solid-svg-icons';\nimport {faTimesCircle} from '@fortawesome/free-regular-svg-icons';\nimport TableRow from './components/TableRow';\nimport {\n  Transaction,\n  TransactionEvent,\n  TransactionEventWithAmountNumber,\n  TransactionWithAmountNumber\n} from '../../../../models/Transaction';\nimport styles from './infoModalStyle.module.css';\n\ntype Props = {\n  isInfoTransactionOpen: boolean;\n  handleOpenTransaction: (date: Date) => void;\n  handleOpenInfoModal: (date: Date) => void;\n  handleDelete: (eventId: string) => void;\n  selectedTransaction: TransactionWithAmountNumber;\n  handlePreviousDay: () => void;\n  handleNextDay: () => void;\n  handleOpenEdit: (event: TransactionEventWithAmountNumber) => void;\n};\n\nconst InfoModal: React.FC<Props> = ({\n  isInfoTransactionOpen,\n  handleOpenTransaction,\n  handleDelete,\n  handleOpenInfoModal,\n  selectedTransaction,\n  handleNextDay,\n  handlePreviousDay,\n  handleOpenEdit\n}) => (\n  <>\n    {isInfoTransactionOpen ? (\n      <div className={styles.modal_wrapper}>\n        <div className={styles.wrapper_container}>\n          <FontAwesomeIcon onClick={() => handlePreviousDay()} className={styles.change_date} icon={faAngleLeft} />\n          <div>\n            <FontAwesomeIcon\n              onClick={() => handleOpenInfoModal(Moment().toDate())}\n              className={styles.close_button}\n              icon={faTimesCircle}\n            />\n            <div className={styles.container}>\n              <div className={styles.date}>{Moment(selectedTransaction.createdAt).format('DD.MM.YYYY(dddd)')}</div>\n              <div className={styles.content}>\n                <table>\n                  {selectedTransaction.events.map((event) => (\n                    <TableRow event={event} handleDelete={handleDelete} handleOpenEdit={handleOpenEdit} />\n                  ))}\n                </table>\n              </div>\n\n              <FontAwesomeIcon\n                onClick={() => handleOpenTransaction(Moment().toDate())}\n                className={styles.add_button}\n                icon={faPlusCircle}\n              />\n            </div>\n          </div>\n          <FontAwesomeIcon onClick={() => handleNextDay()} className={styles.change_date} icon={faAngleRight} />\n        </div>\n      </div>\n    ) : null}\n  </>\n);\n\nexport default InfoModal;\n","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/monthlyContainer/Calendar/Calendar.tsx",["356"],"import React, {useState} from 'react';\nimport CalendarDate from './CalendarDate';\nimport {Transaction, CalendarDates, TransactionWithAmountNumber} from '../../../../models/Transaction';\nimport {DaysOfWeek} from '../../../../helpers/Variables';\nimport styles from '../MonthlyStyle.module.css';\n\ntype Props = {\n  calendarDates: CalendarDates[];\n  date: Date;\n  transactions: TransactionWithAmountNumber[];\n  handleOpenInfoModal: (date: Date) => void;\n};\n\nconst Calendar: React.FC<Props> = ({calendarDates, date, transactions, handleOpenInfoModal}) => {\n  const [days] = useState([\n    DaysOfWeek.Monday,\n    DaysOfWeek.Thuesday,\n    DaysOfWeek.Wednesday,\n    DaysOfWeek.Thursday,\n    DaysOfWeek.Friday,\n    DaysOfWeek.Saturday,\n    DaysOfWeek.Sunday\n  ]);\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.days_wrapper}>\n        {days.map((day) => (\n          <div key={day} className={styles.day_container}>\n            {day}\n          </div>\n        ))}\n      </div>\n      <div className={styles.calendar_wrapper}>\n        {calendarDates.map((calendarDate: {date: Date}) => (\n          <CalendarDate\n            calendarDate={calendarDate}\n            transactions={transactions}\n            date={date}\n            handleOpenInfoModal={handleOpenInfoModal}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Calendar;\n","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/yearlyContainer/components/YearlyTableRow.tsx",["357"],"import React from 'react';\nimport Moment from 'moment';\nimport {useHistory} from 'react-router-dom';\nimport styles from '../YearlyStyle.module.css';\nimport {isTheSameDate} from '../../../../helpers/Variables';\n\ntype Props = {\n  month: {from: Date; to: Date; expense: number; income: number};\n};\n\nconst YearlyTableRow: React.FC<Props> = ({month}) => {\n  const history = useHistory();\n  return (\n    <tr onClick={() => history.push(`/transaction/monthly?date=${month.from}`)}>\n      {' '}\n      <td className={styles.month_content}>\n        <div\n          className={\n            Moment(month.from).diff(Moment().startOf('month').toDate(), 'month') === 0\n              ? styles.month_selected\n              : styles.month\n          }\n        >\n          {Moment(month.from).format('MMMM')}\n        </div>\n      </td>\n      <td className={styles.income}>{(month.income / 100).toFixed(2)}</td>\n      <td className={styles.expense}>{(month.expense / 100).toFixed(2)}</td>\n    </tr>\n  );\n};\n\nYearlyTableRow.propTypes = {};\n\nexport default YearlyTableRow;\n","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/Form.tsx",["358"],"import React, {forwardRef, useState, useCallback} from 'react';\nimport Moment from 'moment';\nimport DatePicker from 'react-datepicker';\nimport styles from '../AddTransactionStyle.module.css';\nimport {TransactionEvent} from '../../../../../models/Transaction';\nimport {HandleInput} from '../../../../../models/Function';\nimport {Error} from '../../../../../models/Error';\nimport {TransactionTypes} from '../../../../../helpers/Variables';\nimport InputTitles from './components/InputTitles';\nimport SelectInput from './components/SelectInputs';\nimport FeesInput from './components/FeesInput';\nimport AmountInput from './components/AmountInput';\nimport 'react-datepicker/dist/react-datepicker.css';\n\ntype Props = {\n  transaction: TransactionEvent;\n  errors: Error;\n  handleInputChange: (event: HandleInput) => void;\n};\nconst Form: React.FC<Props> = ({transaction, handleInputChange, errors}) => {\n  const [isFeesOpen, setIsFeesOpen] = useState(false);\n  const accounts = ['', 'cash', 'card', 'accounts'];\n  const categoriesIncome = [' ', 'salary', 'bonus', 'petty cash', 'other'];\n  const categoriesExpense = ['', 'food', 'culture', 'socialLife', 'selfDevelopment', 'transportation', 'other'];\n\n  const selectOptions = (transactionType: string) => {\n    if (transactionType === TransactionTypes.Transfer) {\n      return accounts;\n    }\n    if (transactionType === TransactionTypes.Income) {\n      return categoriesIncome;\n    }\n    return categoriesExpense;\n  };\n  const handleSetDate = useCallback(\n    (date) => {\n      handleInputChange({\n        target: {value: Moment(date).toDate(), name: 'date'}\n      });\n    },\n    [handleInputChange]\n  );\n  const ExampleCustomInput: React.FC<any> = forwardRef(({value, onClick}) => (\n    <div className={styles.input_container}>\n      <input className={styles.input} onClick={onClick} value={value} />\n    </div>\n  ));\n  return (\n    <div className={styles.content}>\n      <InputTitles transaction={transaction} isFeesOpen={isFeesOpen} />\n      <div className={styles.content_inputs}>\n        <DatePicker\n          selected={Moment(transaction.date).toDate()}\n          dateFormat=\" dd / MMMM / yyyy  h:mm aa\"\n          onChange={handleSetDate}\n          showTimeSelect\n          timeFormat=\"HH:mm\"\n          timeIntervals={15}\n          timeCaption=\"time\"\n          locale=\"pt-BR\"\n          customInput={<ExampleCustomInput />}\n        />\n\n        <SelectInput\n          selectValue={transaction.type === TransactionTypes.Transfer ? transaction.from : transaction.account}\n          transactionType={transaction.type === TransactionTypes.Transfer ? 'from' : 'account'}\n          options={accounts}\n          handleInputChange={handleInputChange}\n          error={transaction.type === TransactionTypes.Transfer ? errors.from : errors.account}\n        />\n        <SelectInput\n          selectValue={transaction.type === TransactionTypes.Transfer ? transaction.to : transaction.category}\n          transactionType={transaction.type === TransactionTypes.Transfer ? 'to' : 'category'}\n          options={selectOptions(transaction.type)}\n          handleInputChange={handleInputChange}\n          error={transaction.type === TransactionTypes.Transfer ? errors.to : errors.category}\n        />\n        <AmountInput\n          transaction={transaction}\n          handleInputChange={handleInputChange}\n          setIsFeesOpen={setIsFeesOpen}\n          isFeesOpen={isFeesOpen}\n          error={errors.amount}\n        />\n\n        <FeesInput\n          transaction={transaction}\n          handleInputChange={handleInputChange}\n          setIsFeesOpen={setIsFeesOpen}\n          isFeesOpen={isFeesOpen}\n        />\n\n        <input type=\"text\" className={styles.input} name=\"note\" value={transaction.note} onChange={handleInputChange} />\n      </div>\n    </div>\n  );\n};\n\nexport default Form;\n","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/infoModal/components/TableRow.tsx",["359"],"import React from 'react';\nimport {faPen, faTrash} from '@fortawesome/free-solid-svg-icons';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {isTransactionTypeIncome, isTransactionTypeExpense} from '../../../../../helpers/Variables';\nimport {TransactionEvent, TransactionEventWithAmountNumber} from '../../../../../models/Transaction';\nimport styles from '../infoModalStyle.module.css';\n\ntype Props = {\n  handleDelete: (eventId: string) => void;\n  handleOpenEdit: (event: TransactionEventWithAmountNumber) => void;\n  event: TransactionEventWithAmountNumber;\n};\nconst TableRow: React.FC<Props> = ({handleDelete, handleOpenEdit, event}) => {\n  const {category, from, account, to, type, amount, _id: eventId} = event;\n  return (\n    <tr>\n      <th className={styles.content_row}>\n        {category}\n        {from}\n      </th>\n      <th className={styles.content_row}>\n        {account}\n        {to}\n      </th>\n      <th className={styles.content_row}>{isTransactionTypeIncome(type, amount)}</th>\n      <th className={styles.content_row}>{isTransactionTypeExpense(type, amount)}</th>\n      <th className={styles.content_row}>\n        <div className={styles.function_container}>\n          <FontAwesomeIcon className={styles.edit} onClick={() => handleOpenEdit(event)} icon={faPen} />\n          <FontAwesomeIcon className={styles.delete} onClick={() => handleDelete(eventId)} icon={faTrash} />\n        </div>\n      </th>\n    </tr>\n  );\n};\nexport default TableRow;\n","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/monthlyContainer/Calendar/CalendarDate.tsx",["360"],"import React, {useCallback} from 'react';\nimport Moment from 'moment';\nimport {Transaction, TransactionWithAmountNumber} from '../../../../models/Transaction';\nimport {isTheSameDate} from '../../../../helpers/Variables';\nimport styles from '../MonthlyStyle.module.css';\n\ntype Props = {\n  calendarDate: {date: Date};\n  transactions: TransactionWithAmountNumber[];\n  date: Date;\n  handleOpenInfoModal: (date: Date) => void;\n};\n\nconst CalendarDate: React.FC<Props> = ({calendarDate, transactions, date, handleOpenInfoModal}) => {\n  const openInfoModal = useCallback(() => {\n    handleOpenInfoModal(Moment(calendarDate.date).startOf('date').toDate());\n  }, [calendarDate.date, handleOpenInfoModal]);\n\n  return (\n    <button\n      type=\"button\"\n      className={\n        Moment(date).get('month') === Moment(calendarDate.date).get('month')\n          ? styles.calendar_date_box_container\n          : styles.calendar_date_box_container_other_month\n      }\n      onClick={openInfoModal}\n    >\n      <div\n        className={\n          isTheSameDate(calendarDate.date, Moment().startOf('date').toDate())\n            ? styles.current_date\n            : styles.calendar_date\n        }\n      >\n        {Moment(calendarDate.date).get('date')}\n      </div>\n      {transactions.map((transaction) => {\n        const {_id: transactionId} = transaction;\n        return isTheSameDate(calendarDate.date, transaction.createdAt) ? (\n          <div key={transactionId} className={styles.calendar_events_content}>\n            <div className={styles.income}>{(transaction.income / 100).toFixed(2)}</div>\n            <div className={styles.expense}>{(transaction.expense / 100).toFixed(2)}</div>\n            <div className={styles.total}>{((transaction.income - transaction.expense) / 100).toFixed(2)}</div>\n          </div>\n        ) : null;\n      })}\n    </button>\n  );\n};\n\nexport default CalendarDate;\n","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/components/SelectInputs.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/components/AmountInput.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/components/FeesInput.tsx",[],["361","362","363","364","365","366"],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/components/InputTitles.tsx",[],{"ruleId":"367","replacedBy":"368"},{"ruleId":"369","replacedBy":"370"},{"ruleId":"371","replacedBy":"372"},{"ruleId":"373","replacedBy":"374"},{"ruleId":"375","replacedBy":"376"},{"ruleId":"377","replacedBy":"378"},{"ruleId":"379","severity":1,"message":"380","line":6,"column":22,"nodeType":"381","messageId":"382","endLine":6,"endColumn":37},{"ruleId":"379","severity":1,"message":"383","line":6,"column":23,"nodeType":"384","messageId":"385","endLine":6,"endColumn":33},{"ruleId":"386","severity":1,"message":"387","line":6,"column":30,"nodeType":"388","messageId":"389","endLine":6,"endColumn":33,"suggestions":"390"},{"ruleId":"379","severity":1,"message":"383","line":6,"column":22,"nodeType":"384","messageId":"385","endLine":6,"endColumn":32},{"ruleId":"386","severity":1,"message":"387","line":6,"column":29,"nodeType":"388","messageId":"389","endLine":6,"endColumn":32,"suggestions":"391"},{"ruleId":"392","severity":1,"message":"393","line":8,"column":9,"nodeType":"384","messageId":"394","endLine":8,"endColumn":16},{"ruleId":"379","severity":1,"message":"380","line":9,"column":41,"nodeType":"381","messageId":"382","endLine":9,"endColumn":61},{"ruleId":"379","severity":1,"message":"395","line":9,"column":48,"nodeType":"384","messageId":"385","endLine":9,"endColumn":57},{"ruleId":"386","severity":1,"message":"387","line":9,"column":54,"nodeType":"388","messageId":"389","endLine":9,"endColumn":57,"suggestions":"396"},{"ruleId":"386","severity":1,"message":"387","line":12,"column":18,"nodeType":"388","messageId":"389","endLine":12,"endColumn":21,"suggestions":"397"},{"ruleId":"379","severity":1,"message":"380","line":27,"column":38,"nodeType":"381","messageId":"382","endLine":27,"endColumn":69},{"ruleId":"386","severity":1,"message":"387","line":30,"column":18,"nodeType":"388","messageId":"389","endLine":30,"endColumn":21,"suggestions":"398"},{"ruleId":"399","severity":1,"message":"400","line":39,"column":5,"nodeType":"401","messageId":"402","endLine":39,"endColumn":18},{"ruleId":"379","severity":1,"message":"380","line":44,"column":34,"nodeType":"381","messageId":"382","endLine":44,"endColumn":54},{"ruleId":"379","severity":1,"message":"395","line":44,"column":41,"nodeType":"384","messageId":"385","endLine":44,"endColumn":50},{"ruleId":"386","severity":1,"message":"387","line":44,"column":47,"nodeType":"388","messageId":"389","endLine":44,"endColumn":50,"suggestions":"403"},{"ruleId":"386","severity":1,"message":"387","line":47,"column":18,"nodeType":"388","messageId":"389","endLine":47,"endColumn":21,"suggestions":"404"},{"ruleId":"399","severity":1,"message":"400","line":57,"column":5,"nodeType":"401","messageId":"402","endLine":57,"endColumn":18},{"ruleId":"379","severity":1,"message":"380","line":61,"column":32,"nodeType":"381","messageId":"382","endLine":61,"endColumn":98},{"ruleId":"379","severity":1,"message":"395","line":61,"column":85,"nodeType":"384","messageId":"385","endLine":61,"endColumn":94},{"ruleId":"386","severity":1,"message":"387","line":61,"column":91,"nodeType":"388","messageId":"389","endLine":61,"endColumn":94,"suggestions":"405"},{"ruleId":"386","severity":1,"message":"387","line":64,"column":18,"nodeType":"388","messageId":"389","endLine":64,"endColumn":21,"suggestions":"406"},{"ruleId":"379","severity":1,"message":"380","line":78,"column":34,"nodeType":"381","messageId":"382","endLine":78,"endColumn":89},{"ruleId":"386","severity":1,"message":"387","line":81,"column":18,"nodeType":"388","messageId":"389","endLine":81,"endColumn":21,"suggestions":"407"},{"ruleId":"379","severity":1,"message":"380","line":95,"column":33,"nodeType":"381","messageId":"382","endLine":95,"endColumn":44},{"ruleId":"386","severity":1,"message":"387","line":98,"column":18,"nodeType":"388","messageId":"389","endLine":98,"endColumn":21,"suggestions":"408"},{"ruleId":"399","severity":1,"message":"400","line":108,"column":5,"nodeType":"401","messageId":"402","endLine":108,"endColumn":18},{"ruleId":"379","severity":1,"message":"409","line":12,"column":14,"nodeType":"384","messageId":"385","endLine":12,"endColumn":27},{"ruleId":"386","severity":1,"message":"387","line":12,"column":24,"nodeType":"388","messageId":"389","endLine":12,"endColumn":27,"suggestions":"410"},{"ruleId":"399","severity":1,"message":"400","line":19,"column":5,"nodeType":"401","messageId":"402","endLine":19,"endColumn":16},{"ruleId":"379","severity":1,"message":"380","line":16,"column":16,"nodeType":"381","messageId":"382","endLine":16,"endColumn":54},{"ruleId":"379","severity":1,"message":"411","line":16,"column":39,"nodeType":"384","messageId":"385","endLine":16,"endColumn":50},{"ruleId":"386","severity":1,"message":"387","line":16,"column":47,"nodeType":"388","messageId":"389","endLine":16,"endColumn":50,"suggestions":"412"},{"ruleId":"379","severity":1,"message":"380","line":28,"column":16,"nodeType":"381","messageId":"382","endLine":28,"endColumn":54},{"ruleId":"379","severity":1,"message":"411","line":28,"column":39,"nodeType":"384","messageId":"385","endLine":28,"endColumn":50},{"ruleId":"386","severity":1,"message":"387","line":28,"column":47,"nodeType":"388","messageId":"389","endLine":28,"endColumn":50,"suggestions":"413"},{"ruleId":"414","severity":1,"message":"415","line":89,"column":7,"nodeType":"416","messageId":"402","endLine":89,"endColumn":15},{"ruleId":"399","severity":1,"message":"400","line":32,"column":5,"nodeType":"401","messageId":"402","endLine":32,"endColumn":16},{"ruleId":"379","severity":1,"message":"383","line":4,"column":26,"nodeType":"384","messageId":"385","endLine":4,"endColumn":36},{"ruleId":"392","severity":1,"message":"417","line":4,"column":26,"nodeType":"384","messageId":"394","endLine":4,"endColumn":36},{"ruleId":"386","severity":1,"message":"387","line":4,"column":33,"nodeType":"388","messageId":"389","endLine":4,"endColumn":36,"suggestions":"418"},{"ruleId":"392","severity":1,"message":"419","line":7,"column":9,"nodeType":"384","messageId":"394","endLine":7,"endColumn":26},{"ruleId":"392","severity":1,"message":"420","line":7,"column":30,"nodeType":"384","messageId":"394","endLine":7,"endColumn":40},{"ruleId":"386","severity":1,"message":"387","line":7,"column":37,"nodeType":"388","messageId":"389","endLine":7,"endColumn":40,"suggestions":"421"},{"ruleId":"392","severity":1,"message":"422","line":7,"column":38,"nodeType":"384","messageId":"394","endLine":7,"endColumn":45},{"ruleId":"392","severity":1,"message":"423","line":6,"column":10,"nodeType":"384","messageId":"394","endLine":6,"endColumn":14},{"ruleId":"392","severity":1,"message":"424","line":6,"column":16,"nodeType":"384","messageId":"394","endLine":6,"endColumn":23},{"ruleId":"392","severity":1,"message":"425","line":7,"column":10,"nodeType":"384","messageId":"394","endLine":7,"endColumn":19},{"ruleId":"392","severity":1,"message":"426","line":7,"column":21,"nodeType":"384","messageId":"394","endLine":7,"endColumn":33},{"ruleId":"392","severity":1,"message":"427","line":8,"column":10,"nodeType":"384","messageId":"394","endLine":8,"endColumn":20},{"ruleId":"392","severity":1,"message":"428","line":8,"column":22,"nodeType":"384","messageId":"394","endLine":8,"endColumn":35},{"ruleId":"392","severity":1,"message":"423","line":6,"column":10,"nodeType":"384","messageId":"394","endLine":6,"endColumn":14},{"ruleId":"392","severity":1,"message":"424","line":6,"column":16,"nodeType":"384","messageId":"394","endLine":6,"endColumn":23},{"ruleId":"392","severity":1,"message":"425","line":7,"column":10,"nodeType":"384","messageId":"394","endLine":7,"endColumn":19},{"ruleId":"392","severity":1,"message":"426","line":7,"column":21,"nodeType":"384","messageId":"394","endLine":7,"endColumn":33},{"ruleId":"392","severity":1,"message":"427","line":8,"column":10,"nodeType":"384","messageId":"394","endLine":8,"endColumn":20},{"ruleId":"392","severity":1,"message":"428","line":8,"column":22,"nodeType":"384","messageId":"394","endLine":8,"endColumn":35},{"ruleId":"392","severity":1,"message":"423","line":6,"column":10,"nodeType":"384","messageId":"394","endLine":6,"endColumn":14},{"ruleId":"392","severity":1,"message":"424","line":6,"column":16,"nodeType":"384","messageId":"394","endLine":6,"endColumn":23},{"ruleId":"392","severity":1,"message":"425","line":7,"column":10,"nodeType":"384","messageId":"394","endLine":7,"endColumn":19},{"ruleId":"392","severity":1,"message":"426","line":7,"column":21,"nodeType":"384","messageId":"394","endLine":7,"endColumn":33},{"ruleId":"392","severity":1,"message":"427","line":8,"column":10,"nodeType":"384","messageId":"394","endLine":8,"endColumn":20},{"ruleId":"392","severity":1,"message":"428","line":8,"column":22,"nodeType":"384","messageId":"394","endLine":8,"endColumn":35},{"ruleId":"392","severity":1,"message":"429","line":18,"column":3,"nodeType":"384","messageId":"394","endLine":18,"endColumn":16},{"ruleId":"386","severity":1,"message":"387","line":259,"column":21,"nodeType":"388","messageId":"389","endLine":259,"endColumn":24,"suggestions":"430"},{"ruleId":"386","severity":1,"message":"387","line":269,"column":21,"nodeType":"388","messageId":"389","endLine":269,"endColumn":24,"suggestions":"431"},{"ruleId":"432","severity":1,"message":"433","line":303,"column":6,"nodeType":"434","endLine":303,"endColumn":37,"suggestions":"435"},{"ruleId":"432","severity":1,"message":"436","line":76,"column":6,"nodeType":"434","endLine":76,"endColumn":29,"suggestions":"437"},{"ruleId":"438","severity":1,"message":"439","line":35,"column":18,"nodeType":"440","messageId":"441","endLine":35,"endColumn":29},{"ruleId":"379","severity":1,"message":"380","line":79,"column":31,"nodeType":"381","messageId":"382","endLine":79,"endColumn":70},{"ruleId":"438","severity":1,"message":"439","line":91,"column":26,"nodeType":"440","messageId":"441","endLine":91,"endColumn":31},{"ruleId":"386","severity":1,"message":"387","line":11,"column":24,"nodeType":"388","messageId":"389","endLine":11,"endColumn":27,"suggestions":"442"},{"ruleId":"386","severity":1,"message":"387","line":6,"column":10,"nodeType":"388","messageId":"389","endLine":6,"endColumn":13,"suggestions":"443"},{"ruleId":"392","severity":1,"message":"444","line":15,"column":24,"nodeType":"384","messageId":"394","endLine":15,"endColumn":29},{"ruleId":"386","severity":1,"message":"387","line":29,"column":31,"nodeType":"388","messageId":"389","endLine":29,"endColumn":34,"suggestions":"445"},{"ruleId":"392","severity":1,"message":"446","line":8,"column":3,"nodeType":"384","messageId":"394","endLine":8,"endColumn":14},{"ruleId":"392","severity":1,"message":"447","line":9,"column":3,"nodeType":"384","messageId":"394","endLine":9,"endColumn":19},{"ruleId":"392","severity":1,"message":"446","line":3,"column":9,"nodeType":"384","messageId":"394","endLine":3,"endColumn":20},{"ruleId":"392","severity":1,"message":"448","line":5,"column":9,"nodeType":"384","messageId":"394","endLine":5,"endColumn":22},{"ruleId":"386","severity":1,"message":"387","line":43,"column":38,"nodeType":"388","messageId":"389","endLine":43,"endColumn":41,"suggestions":"449"},{"ruleId":"392","severity":1,"message":"447","line":5,"column":9,"nodeType":"384","messageId":"394","endLine":5,"endColumn":25},{"ruleId":"392","severity":1,"message":"446","line":3,"column":9,"nodeType":"384","messageId":"394","endLine":3,"endColumn":20},{"ruleId":"367","replacedBy":"450"},{"ruleId":"369","replacedBy":"451"},{"ruleId":"371","replacedBy":"452"},{"ruleId":"373","replacedBy":"453"},{"ruleId":"375","replacedBy":"454"},{"ruleId":"377","replacedBy":"455"},"jest/no-try-expect",["456"],"lines-around-directive",["457"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","Argument 'props' should be typed with a non-any type.","Identifier","anyTypedArg","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["458","459"],["460","461"],"@typescript-eslint/no-unused-vars","'filters' is assigned a value but never used.","unusedVar","Argument 'data' should be typed with a non-any type.",["462","463"],["464","465"],["466","467"],"no-console","Unexpected console statement.","MemberExpression","unexpected",["468","469"],["470","471"],["472","473"],["474","475"],["476","477"],["478","479"],"Argument 'dispatch' should be typed with a non-any type.",["480","481"],"Argument 'action' should be typed with a non-any type.",["482","483"],["484","485"],"no-alert","Unexpected alert.","CallExpression","'props' is defined but never used.",["486","487"],"'handleInputChange' is assigned a value but never used.","'event' is defined but never used.",["488","489"],"'setDate' is defined but never used.","'date' is assigned a value but never used.","'setDate' is assigned a value but never used.","'sumIncome' is assigned a value but never used.","'setSumIncome' is assigned a value but never used.","'sumExpense' is assigned a value but never used.","'setSumExpense' is assigned a value but never used.","'CalendarDates' is defined but never used.",["490","491"],["492","493"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getTransactions' and 'setCalendar'. Either include them or remove the dependency array.","ArrayExpression",["494"],"React Hook useEffect has a missing dependency: 'getYear'. Either include it or remove the dependency array.",["495"],"@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull",["496","497"],["498","499"],"'index' is defined but never used.",["500","501"],"'Transaction' is defined but never used.","'TransactionEvent' is defined but never used.","'isTheSameDate' is defined but never used.",["502","503"],["456"],["457"],[],[],[],[],"no-conditional-expect","padding-line-between-statements",{"messageId":"504","fix":"505","desc":"506"},{"messageId":"507","fix":"508","desc":"509"},{"messageId":"504","fix":"510","desc":"506"},{"messageId":"507","fix":"511","desc":"509"},{"messageId":"504","fix":"512","desc":"506"},{"messageId":"507","fix":"513","desc":"509"},{"messageId":"504","fix":"514","desc":"506"},{"messageId":"507","fix":"515","desc":"509"},{"messageId":"504","fix":"516","desc":"506"},{"messageId":"507","fix":"517","desc":"509"},{"messageId":"504","fix":"518","desc":"506"},{"messageId":"507","fix":"519","desc":"509"},{"messageId":"504","fix":"520","desc":"506"},{"messageId":"507","fix":"521","desc":"509"},{"messageId":"504","fix":"522","desc":"506"},{"messageId":"507","fix":"523","desc":"509"},{"messageId":"504","fix":"524","desc":"506"},{"messageId":"507","fix":"525","desc":"509"},{"messageId":"504","fix":"526","desc":"506"},{"messageId":"507","fix":"527","desc":"509"},{"messageId":"504","fix":"528","desc":"506"},{"messageId":"507","fix":"529","desc":"509"},{"messageId":"504","fix":"530","desc":"506"},{"messageId":"507","fix":"531","desc":"509"},{"messageId":"504","fix":"532","desc":"506"},{"messageId":"507","fix":"533","desc":"509"},{"messageId":"504","fix":"534","desc":"506"},{"messageId":"507","fix":"535","desc":"509"},{"messageId":"504","fix":"536","desc":"506"},{"messageId":"507","fix":"537","desc":"509"},{"messageId":"504","fix":"538","desc":"506"},{"messageId":"507","fix":"539","desc":"509"},{"messageId":"504","fix":"540","desc":"506"},{"messageId":"507","fix":"541","desc":"509"},{"messageId":"504","fix":"542","desc":"506"},{"messageId":"507","fix":"543","desc":"509"},{"desc":"544","fix":"545"},{"desc":"546","fix":"547"},{"messageId":"504","fix":"548","desc":"506"},{"messageId":"507","fix":"549","desc":"509"},{"messageId":"504","fix":"550","desc":"506"},{"messageId":"507","fix":"551","desc":"509"},{"messageId":"504","fix":"552","desc":"506"},{"messageId":"507","fix":"553","desc":"509"},{"messageId":"504","fix":"554","desc":"506"},{"messageId":"507","fix":"555","desc":"509"},"suggestUnknown",{"range":"556","text":"557"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"556","text":"558"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"559","text":"557"},{"range":"559","text":"558"},{"range":"560","text":"557"},{"range":"560","text":"558"},{"range":"561","text":"557"},{"range":"561","text":"558"},{"range":"562","text":"557"},{"range":"562","text":"558"},{"range":"563","text":"557"},{"range":"563","text":"558"},{"range":"564","text":"557"},{"range":"564","text":"558"},{"range":"565","text":"557"},{"range":"565","text":"558"},{"range":"566","text":"557"},{"range":"566","text":"558"},{"range":"567","text":"557"},{"range":"567","text":"558"},{"range":"568","text":"557"},{"range":"568","text":"558"},{"range":"569","text":"557"},{"range":"569","text":"558"},{"range":"570","text":"557"},{"range":"570","text":"558"},{"range":"571","text":"557"},{"range":"571","text":"558"},{"range":"572","text":"557"},{"range":"572","text":"558"},{"range":"573","text":"557"},{"range":"573","text":"558"},{"range":"574","text":"557"},{"range":"574","text":"558"},{"range":"575","text":"557"},{"range":"575","text":"558"},"Update the dependencies array to be: [amount, getTransactions, setCalendar, stateTransaction.date]",{"range":"576","text":"577"},"Update the dependencies array to be: [getYear, stateTransaction.date]",{"range":"578","text":"579"},{"range":"580","text":"557"},{"range":"580","text":"558"},{"range":"581","text":"557"},{"range":"581","text":"558"},{"range":"582","text":"557"},{"range":"582","text":"558"},{"range":"583","text":"557"},{"range":"583","text":"558"},[267,270],"unknown","never",[237,240],[178,181],[264,267],[637,640],[890,893],[987,990],[1294,1297],[1418,1421],[1823,1826],[2140,2143],[242,245],[293,296],[558,561],[100,103],[282,285],[8263,8266],[8587,8590],[9529,9560],"[amount, getTransactions, setCalendar, stateTransaction.date]",[2865,2888],"[getYear, stateTransaction.date]",[244,247],[133,136],[780,783],[1683,1686]]