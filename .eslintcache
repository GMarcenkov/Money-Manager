[{"/home/george/Documents/Projects/budget-tracker/src/index.tsx":"1","/home/george/Documents/Projects/budget-tracker/src/reportWebVitals.ts":"2","/home/george/Documents/Projects/budget-tracker/src/App.tsx":"3","/home/george/Documents/Projects/budget-tracker/src/desktop/store/store.tsx":"4","/home/george/Documents/Projects/budget-tracker/src/desktop/routes.tsx":"5","/home/george/Documents/Projects/budget-tracker/src/desktop/pages/transactionPage/WeeklyPage.tsx":"6","/home/george/Documents/Projects/budget-tracker/src/desktop/pages/transactionPage/DailyPage.tsx":"7","/home/george/Documents/Projects/budget-tracker/src/desktop/pages/loginPage/LoginPage.tsx":"8","/home/george/Documents/Projects/budget-tracker/src/desktop/pages/homePage/HomePage.tsx":"9","/home/george/Documents/Projects/budget-tracker/src/desktop/store/reducers/index.tsx":"10","/home/george/Documents/Projects/budget-tracker/src/desktop/store/reducers/userReducer.tsx":"11","/home/george/Documents/Projects/budget-tracker/src/desktop/layout/navBar/NavBar.tsx":"12","/home/george/Documents/Projects/budget-tracker/src/desktop/modules/transaction/weeklyContainer/WeeklyContainer.tsx":"13","/home/george/Documents/Projects/budget-tracker/src/desktop/modules/transaction/monthlyContainer/TransactionContainer.tsx":"14","/home/george/Documents/Projects/budget-tracker/src/desktop/modules/transaction/dailyContainer/DailyContainer.tsx":"15","/home/george/Documents/Projects/budget-tracker/src/desktop/modules/login/LoginContainer.tsx":"16","/home/george/Documents/Projects/budget-tracker/src/desktop/store/types.tsx":"17","/home/george/Documents/Projects/budget-tracker/src/desktop/layout/sideBar/SideBar.tsx":"18","/home/george/Documents/Projects/budget-tracker/src/desktop/modules/login/components/SocialNetworks.tsx":"19","/home/george/Documents/Projects/budget-tracker/src/desktop/modules/login/components/LoginForm.tsx":"20","/home/george/Documents/Projects/budget-tracker/src/desktop/modules/transaction/components/addTransactionModal/AddTransactionModal.tsx":"21","/home/george/Documents/Projects/budget-tracker/src/desktop/modules/login/components/RegistrationForm.tsx":"22","/home/george/Documents/Projects/budget-tracker/src/desktop/modules/transaction/components/infoRow/InfoRow.tsx":"23","/home/george/Documents/Projects/budget-tracker/src/desktop/store/actions/usersActions.tsx":"24","/home/george/Documents/Projects/budget-tracker/src/desktop/modules/transaction/components/addTransactionModal/form/Form.tsx":"25","/home/george/Documents/Projects/budget-tracker/src/desktop/pages/transactionPage/MonthlyPage.tsx":"26","/home/george/Documents/Projects/budget-tracker/src/desktop/pages/transactionPage/YearlyPage.tsx":"27","/home/george/Documents/Projects/budget-tracker/src/desktop/modules/transaction/yearlyContainer/YearlyContainer.tsx":"28","/home/george/Documents/Projects/budget-tracker/src/desktop/modules/transaction/components/infoModal/InfoModal.tsx":"29","/home/george/Documents/Projects/budget-tracker/src/desktop/pages/statsPage/WeeklyPage.tsx":"30","/home/george/Documents/Projects/budget-tracker/src/desktop/pages/statsPage/DailyPage.tsx":"31","/home/george/Documents/Projects/budget-tracker/src/desktop/pages/statsPage/YearlyPage.tsx":"32","/home/george/Documents/Projects/budget-tracker/src/desktop/pages/statsPage/MonthlyPage.tsx":"33","/home/george/Documents/Projects/budget-tracker/src/desktop/modules/stats/dailyContainer/DailyContainer.tsx":"34","/home/george/Documents/Projects/budget-tracker/src/desktop/layout/navBarMenu/NavBarMenu.tsx":"35","/home/george/Documents/Projects/budget-tracker/src/desktop/modules/stats/weeklyContainer/WeeklyContainer.tsx":"36","/home/george/Documents/Projects/budget-tracker/src/desktop/modules/stats/monthlyContainer/MonthlyContainer.tsx":"37","/home/george/Documents/Projects/budget-tracker/src/desktop/modules/stats/yearlyContainer/YearlyContainer.tsx":"38","/home/george/Documents/Projects/budget-tracker/src/desktop/modules/transaction/monthlyContainer/NewCalendar.tsx":"39","/home/george/Documents/Projects/budget-tracker/src/desktop/modules/transaction/dailyContainer/components/dailyTableRow/DailyTableRow.tsx":"40","/home/george/Documents/Projects/budget-tracker/src/desktop/helpers/AuthRoute.tsx":"41","/home/george/Documents/Projects/budget-tracker/src/desktop/modules/transaction/weeklyContainer/WeeklyTableRow.tsx":"42","/home/george/Documents/Projects/budget-tracker/src/desktop/modules/transaction/yearlyContainer/YearlyTableRow.tsx":"43"},{"size":630,"mtime":1610266103362,"results":"44","hashOfConfig":"45"},{"size":425,"mtime":1608638830636,"results":"46","hashOfConfig":"45"},{"size":188,"mtime":1608638830636,"results":"47","hashOfConfig":"45"},{"size":382,"mtime":1610266103362,"results":"48","hashOfConfig":"45"},{"size":2294,"mtime":1611177055975,"results":"49","hashOfConfig":"45"},{"size":304,"mtime":1610266103362,"results":"50","hashOfConfig":"45"},{"size":322,"mtime":1610266103362,"results":"51","hashOfConfig":"45"},{"size":228,"mtime":1608638830636,"results":"52","hashOfConfig":"45"},{"size":200,"mtime":1610266103362,"results":"53","hashOfConfig":"45"},{"size":141,"mtime":1610266103362,"results":"54","hashOfConfig":"45"},{"size":567,"mtime":1610266103362,"results":"55","hashOfConfig":"45"},{"size":1368,"mtime":1611181890892,"results":"56","hashOfConfig":"45"},{"size":4464,"mtime":1611177055975,"results":"57","hashOfConfig":"45"},{"size":19853,"mtime":1611177055971,"results":"58","hashOfConfig":"45"},{"size":4781,"mtime":1611177055971,"results":"59","hashOfConfig":"45"},{"size":4690,"mtime":1611219199867,"results":"60","hashOfConfig":"45"},{"size":68,"mtime":1610266103362,"results":"61","hashOfConfig":"45"},{"size":1143,"mtime":1611177055967,"results":"62","hashOfConfig":"45"},{"size":967,"mtime":1608638830636,"results":"63","hashOfConfig":"45"},{"size":1160,"mtime":1611177055967,"results":"64","hashOfConfig":"45"},{"size":4310,"mtime":1611177055967,"results":"65","hashOfConfig":"45"},{"size":1692,"mtime":1611177055967,"results":"66","hashOfConfig":"45"},{"size":942,"mtime":1611177055971,"results":"67","hashOfConfig":"45"},{"size":387,"mtime":1611177055975,"results":"68","hashOfConfig":"45"},{"size":6964,"mtime":1611177055971,"results":"69","hashOfConfig":"45"},{"size":473,"mtime":1610487333285,"results":"70","hashOfConfig":"45"},{"size":322,"mtime":1610487333285,"results":"71","hashOfConfig":"45"},{"size":3485,"mtime":1611177055975,"results":"72","hashOfConfig":"45"},{"size":4402,"mtime":1611177055971,"results":"73","hashOfConfig":"45"},{"size":321,"mtime":1611177055975,"results":"74","hashOfConfig":"45"},{"size":292,"mtime":1611177055975,"results":"75","hashOfConfig":"45"},{"size":322,"mtime":1611177055975,"results":"76","hashOfConfig":"45"},{"size":329,"mtime":1611177055975,"results":"77","hashOfConfig":"45"},{"size":883,"mtime":1611177055967,"results":"78","hashOfConfig":"45"},{"size":3350,"mtime":1611177055967,"results":"79","hashOfConfig":"45"},{"size":885,"mtime":1611177055967,"results":"80","hashOfConfig":"45"},{"size":2807,"mtime":1611177055967,"results":"81","hashOfConfig":"45"},{"size":886,"mtime":1611177055967,"results":"82","hashOfConfig":"45"},{"size":2780,"mtime":1611177055971,"results":"83","hashOfConfig":"45"},{"size":1704,"mtime":1611177055971,"results":"84","hashOfConfig":"45"},{"size":538,"mtime":1611177055963,"results":"85","hashOfConfig":"45"},{"size":1018,"mtime":1611177055975,"results":"86","hashOfConfig":"45"},{"size":1121,"mtime":1611177055975,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"1me94a7",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"90"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"90"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"90"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"90"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"90"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"/home/george/Documents/Projects/budget-tracker/src/index.tsx",[],["180","181"],"/home/george/Documents/Projects/budget-tracker/src/reportWebVitals.ts",[],"/home/george/Documents/Projects/budget-tracker/src/App.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/store/store.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/routes.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/pages/transactionPage/WeeklyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/pages/transactionPage/DailyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/pages/loginPage/LoginPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/pages/homePage/HomePage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/store/reducers/index.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/store/reducers/userReducer.tsx",["182"],"import { SIGN_IN } from \"../types\";\n\nexport interface State {\n  user: {};\n  token: string;\n  loading: boolean;\n}\n\nconst initialState = {\n  user: {},\n  token: \"\",\n  loading: true,\n};\n\nexport default function (state = initialState, action: any) {\n  switch (action.type) {\n    case SIGN_IN:\n      if (action.payload.token) {\n        localStorage.setItem(\"jwt\", action.payload.token);\n      }\n\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n","/home/george/Documents/Projects/budget-tracker/src/desktop/layout/navBar/NavBar.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/modules/transaction/weeklyContainer/WeeklyContainer.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/modules/transaction/monthlyContainer/TransactionContainer.tsx",["183","184","185","186","187"],"import React from \"react\";\nimport TransactionStyl from \"./TransactionStyle.module.css\";\nimport AddTransactionModal from \"../components/addTransactionModal/AddTransactionModal\";\nimport NavBarMenu from \"../../../layout/navBarMenu/NavBarMenu\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport InfoModal from \"../components/infoModal/InfoModal\";\nimport NewCalendar from \"./NewCalendar\";\n\ntype Props = {\n  filters: any;\n};\nexport interface State {\n  isAddTransactionOpen: boolean;\n  isInfoTransactionOpen: boolean;\n  isEditTransactionOpen: boolean;\n  transaction: {\n    _id?: string;\n    type: string;\n    date: any;\n    account?: string;\n    from?: string;\n    to?: string;\n    fees: string;\n    category?: string;\n    amount: string;\n    note: string;\n    description: string;\n  };\n  selectedDay: {\n    _id?: string;\n    createdAt?: any;\n    events: State[\"transaction\"][];\n    income?: number;\n    expense?: number;\n  };\n  isTransfer: boolean;\n  errors: {\n    account?: string;\n    from?: string;\n    to?: string;\n    category?: string;\n    amount: string;\n    fees?: string;\n  };\n  date: any;\n  transactions: {\n    _id: string;\n    createdAt: any;\n    events: State[\"transaction\"][];\n    income: number;\n    expense: number;\n  }[];\n  calendarDates: {\n    date: any;\n  }[];\n}\nclass TransactionContainer extends React.Component<Props> {\n  state: State = {\n    isInfoTransactionOpen: false,\n    isAddTransactionOpen: false,\n    isEditTransactionOpen: false,\n    date: new Date(),\n    isTransfer: false,\n    transaction: {\n      type: \"income\",\n      date: \"\",\n      account: \"\",\n      from: \"\",\n      category: \"\",\n      fees: \"0\",\n      to: \"\",\n      amount: \"0\",\n      note: \"\",\n      description: \"\",\n    },\n    selectedDay: {\n      events: [],\n    },\n    errors: {\n      account: \"\",\n      from: \"\",\n      category: \"\",\n      to: \"\",\n      amount: \"\",\n    },\n    transactions: [],\n    calendarDates: [],\n  };\n\n  componentDidMount() {\n    console.log(this.props.filters.date)\n    if (this.props.filters.date) {\n      this.setState({\n        date: new Date(this.props.filters.date),\n      });\n      this.getTransactions(new Date(this.props.filters.date));\n      this.setCalendar(new Date(this.props.filters.date));\n    } else {\n\n      this.setState({\n        date: new Date(),\n      });\n      this.getTransactions(new Date());\n    }\n    if (this.props.filters.date===undefined) {\n      this.setCalendar(new Date());\n    }\n  }\n\n  getTransactions = (date: any) => {\n    let firstDay = moment(date).startOf(\"month\").startOf(\"week\").get(\"date\");\n    let firstMonth = moment(date).startOf(\"month\").startOf(\"week\").get(\"month\");\n    let firstYear = moment(date).startOf(\"month\").startOf(\"week\").get(\"year\");\n    let lastDay = moment(date).endOf(\"month\").endOf(\"week\").get(\"date\");\n    let lastMonth = moment(date).endOf(\"month\").endOf(\"week\").get(\"month\");\n    let lastYear = moment(date).endOf(\"month\").endOf(\"week\").get(\"year\");\n\n    let from = moment(new Date(firstYear, firstMonth, firstDay));\n    let to = moment(new Date(lastYear, lastMonth, lastDay));\n\n    let config = {\n      headers: {\n        Authorization:\n          \"Bearer \" +\n          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVmZjRjZjcyMDIwNTM5MmM3MGU5MmJlZiIsImlhdCI6MTYxMDIyNzAwOH0.bL8WKWjEe1NP2-07udR7ORGkraoavQZEyjtOUd9-5Po\",\n      },\n    };\n    axios\n      .get(\n        `http://localhost:5000/transaction/specificDatePeriod/${from}/${to}`,\n        config\n      )\n      .then((data) => {\n        data.data.transactions.map((transaction: any) => {\n          if (\n            new Date(this.state.selectedDay.createdAt).getDate() ===\n              new Date(transaction.createdAt).getDate() &&\n            new Date(this.state.selectedDay.createdAt).getMonth() ===\n              new Date(transaction.createdAt).getMonth()\n          ) {\n            this.setState({\n              selectedDay: transaction,\n            });\n          }\n        });\n        this.setState({ transactions: data.data.transactions });\n      });\n  };\n  validateForm = (value: State[\"transaction\"]) => {\n    let errors = {\n      account: \"\",\n      from: \"\",\n      category: \"\",\n      to: \"\",\n      amount: \"\",\n      fees: \"\",\n    };\n\n    if (value.account === \"\" && !(value.type === \"transfer\")) {\n      errors.account = \"Please select a account\";\n    }\n    if (\n      value.type === \"transfer\" &&\n      (value.from === \"\" || value.from === undefined)\n    ) {\n      errors.from = \"Please select  from\";\n    }\n    if (value.category === \"\" && !(value.type === \"transfer\")) {\n      errors.category = \"Please select a category\";\n    }\n    if (\n      value.type === \"transfer\" &&\n      (value.to === \"\" || value.to === undefined)\n    ) {\n      errors.to = \"Please select  to\";\n    }\n    if (value.amount === \"\") {\n      errors.amount = \"Please select a amount\";\n    }\n\n    if (parseFloat(value.fees) > parseFloat(value.amount)) {\n      errors.fees = \"Fees can't be greater then amount\";\n    }\n    return errors;\n  };\n  handleDelete = (transactionId: any, eventId: any) => {\n    let config = {\n      headers: {\n        Authorization:\n          \"Bearer \" +\n          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVmZjRjZjcyMDIwNTM5MmM3MGU5MmJlZiIsImlhdCI6MTYxMDIyNzAwOH0.bL8WKWjEe1NP2-07udR7ORGkraoavQZEyjtOUd9-5Po\",\n      },\n    };\n    let data = {};\n    axios\n      .put(\n        `http://localhost:5000/transaction/event/delete/${transactionId}/${eventId}`,\n        data,\n        config\n      )\n      .then(() => {\n       let newEvents= this.state.selectedDay.events.filter(event=>event._id!==eventId)\n        this.setState({selectedDay:{...this.state.selectedDay,events:newEvents}})\n        this.getTransactions(this.state.date);\n      });\n  };\n  handleOpenEdit = (event: any) => {\n    const { isEditTransactionOpen } = this.state;\n\n    isEditTransactionOpen\n      ? this.setState({ isEditTransactionOpen: false })\n      : this.setState({\n          isEditTransactionOpen: true,\n          transaction: {\n            ...event,\n            amount: (event.amount / 100).toFixed(2),\n            fees: (event.fees / 100).toFixed(2),\n          },\n        });\n  };\n  handleNextMonth = async () => {\n    const { date } = this.state;\n    let Month = new Date(date).getMonth();\n    let Year = date.getFullYear();\n    let newMonth = new Date(Year, Month + 1);\n    await this.setState({\n      date: new Date(newMonth),\n      calendarDates: [],\n    });\n    this.getTransactions(new Date(newMonth));\n    this.setCalendar(new Date(newMonth));\n  };\n  handlePreviousMonth = async () => {\n    const { date } = this.state;\n    let Month = new Date(date).getMonth();\n    let Year = date.getFullYear();\n    let newMonth = new Date(Year, Month - 1);\n    await this.setState({\n      date: new Date(newMonth),\n      calendarDates: [],\n    });\n    this.getTransactions(new Date(newMonth));\n    this.setCalendar(new Date(newMonth));\n  };\n  handleNextDay = async () => {\n    const { selectedDay, transactions } = this.state;\n\n    let date = new Date(selectedDay.createdAt);\n\n    let newDate = new Date(\n      date.getFullYear(),\n      date.getMonth(),\n      date.getDate() + 1\n    );\n\n    await this.setState({\n      selectedDay: { createdAt: newDate, events: [] },\n      date: newDate,\n    });\n\n    await transactions.map((transaction) => {\n      if (\n        newDate.getDate() === new Date(transaction.createdAt).getDate() &&\n        newDate.getMonth() === new Date(transaction.createdAt).getMonth()\n      ) {\n        this.setState({\n          selectedDay: transaction,\n        });\n      }\n    });\n  };\n  handlePreviousDay = async () => {\n    const { selectedDay, transactions } = this.state;\n\n    let date = new Date(selectedDay.createdAt);\n\n    let newDate = new Date(\n      date.getFullYear(),\n      date.getMonth(),\n      date.getDate() - 1\n    );\n    this.setState({\n      selectedDay: { createdAt: newDate, events: [] },\n      date: newDate,\n    });\n\n    await transactions.map((transaction) => {\n      if (\n        newDate.getDate() === new Date(transaction.createdAt).getDate() &&\n        newDate.getMonth() === new Date(transaction.createdAt).getMonth()\n      ) {\n        this.setState({\n          selectedDay: transaction,\n        });\n      }\n    });\n  };\n  handleOpenTransaction = () => {\n    if (this.state.isAddTransactionOpen) {\n      this.setState({\n        isAddTransactionOpen: false,\n        transaction: {\n          type: \"income\",\n          date: \"\",\n          account: \"\",\n          from: \"\",\n          category: \"\",\n          fees: \"\",\n          to: \"\",\n          amount: \"0\",\n          note: \"\",\n          description: \"\",\n        },\n      });\n    } else {\n      this.setState({\n        isAddTransactionOpen: true,\n        transaction: {\n          ...this.state.transaction,\n          date: this.state.selectedDay.createdAt,\n        },\n      });\n    }\n  };\n  handleOpenInfoModal = (date: any) => {\n    const { isInfoTransactionOpen, transactions, transaction } = this.state;\n    if (isInfoTransactionOpen) {\n      this.setState({\n        isInfoTransactionOpen: false,\n        selectedDay: { events: [] },\n      });\n    } else {\n      this.setState({\n        isInfoTransactionOpen: true,\n        selectedDay: { createdAt: new Date(date), events: [] },\n      });\n\n      transactions.map((transaction) => {\n        if (\n          new Date(date).getDate() ===\n            new Date(transaction.createdAt).getDate() &&\n          new Date(date).getMonth() ===\n            new Date(transaction.createdAt).getMonth()\n        ) {\n          this.setState({\n            selectedDay: transaction,\n          });\n        }\n      });\n    }\n  };\n  handleInputChange = (event: any) => {\n    this.setState({\n      ...this.state,\n      transaction: {\n        ...this.state.transaction,\n        [event.target.name]: event.target.value,\n      },\n    });\n  };\n\n  handleSave = () => {\n    const { transaction, isEditTransactionOpen, selectedDay } = this.state;\n    const errors = this.validateForm(transaction);\n    const isValid = Object.values(errors).filter(Boolean).length <= 0;\n\n    if (!isValid) {\n      this.setState({ errors: errors });\n      return;\n    } else {\n      this.setState({\n        ...this.state,\n        errors: {},\n        isAddTransactionOpen: false,\n        isEditTransactionOpen: false,\n      });\n    }\n\n    let config = {\n      headers: {\n        Authorization:\n          \"Bearer \" +\n          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVmZjRjZjcyMDIwNTM5MmM3MGU5MmJlZiIsImlhdCI6MTYxMDIyNzAwOH0.bL8WKWjEe1NP2-07udR7ORGkraoavQZEyjtOUd9-5Po\",\n      },\n    };\n\n    let incomeOrExpense = {\n      events: [\n        {\n          type: transaction.type.toLowerCase(),\n          currency: \"BG\",\n          date: new Date(\n            new Date(transaction.date).setHours(16, 33, 22)\n          ).toISOString(),\n          account: transaction.account,\n          category: transaction.category,\n          amount: parseFloat(transaction.amount) * 100,\n          note: transaction.note,\n          description: transaction.description,\n        },\n      ],\n      createdAt: new Date(\n        new Date(transaction.date).setHours(0o0, 0o0, 0o0)\n      ).toISOString(),\n    };\n    let transfer = {\n      events: [\n        {\n          type: transaction.type.toLowerCase(),\n          currency: \"BG\",\n          date: new Date(\n            new Date(transaction.date).setHours(13, 21, 30)\n          ).toISOString(),\n          from: transaction.from,\n          fees: parseFloat(transaction.fees) * 100,\n          to: transaction.to,\n          amount: parseFloat(transaction.amount) * 100,\n          note: transaction.note,\n          description: transaction.description,\n        },\n      ],\n      createdAt: new Date(\n        new Date(transaction.date).setHours(0o0, 0o0, 0o0)\n      ).toISOString(),\n    };\n\n    if (isEditTransactionOpen) {\n      if (transaction.type === \"transfer\") {\n        axios\n          .put(\n            `http://localhost:5000/transaction/event/edit/${selectedDay._id}/${transaction._id}`,\n            transfer.events[0],\n            config\n          )\n          .then(() => {\n            this.getTransactions(this.state.date);\n            this.setState({\n              transaction: {\n                type: \"income\",\n                date: \"\",\n                account: \"\",\n                from: \"\",\n                fees: \"0\",\n                category: \"\",\n                to: \"\",\n                amount: \"0\",\n                note: \"\",\n                description: \"\",\n              },\n            });\n          });\n      } else {\n        axios\n          .put(\n            `http://localhost:5000/transaction/event/edit/${selectedDay._id}/${transaction._id}`,\n            incomeOrExpense.events[0],\n            config\n          )\n          .then(() => {\n            this.getTransactions(this.state.date);\n            this.setState({\n              selectedDay: { createdAt: transaction.date, events: [] },\n              transaction: {\n                type: \"income\",\n                date: \"\",\n                account: \"\",\n                from: \"\",\n                category: \"\",\n                fees: \"0\",\n                to: \"\",\n                amount: \"0\",\n                note: \"\",\n                description: \"\",\n              },\n            });\n          });\n      }\n    } else {\n      if (transaction.type === \"transfer\") {\n        axios\n          .post(`http://localhost:5000/transaction/create`, transfer, config)\n          .then(() => {\n            this.getTransactions(this.state.date);\n            this.setState({\n              transaction: {\n                type: \"income\",\n                date: \"\",\n                account: \"\",\n                from: \"\",\n                fees: \"0\",\n                category: \"\",\n                to: \"\",\n                amount: \"0\",\n                note: \"\",\n                description: \"\",\n              },\n            });\n          });\n      } else {\n        axios\n          .post(\n            `http://localhost:5000/transaction/create`,\n            incomeOrExpense,\n            config\n          )\n          .then(() => {\n            this.getTransactions(this.state.date);\n            this.setState({\n              selectedDay: { createdAt: transaction.date, events: [] },\n              transaction: {\n                type: \"income\",\n                date: \"\",\n                account: \"\",\n                from: \"\",\n                category: \"\",\n                fees: \"0\",\n                to: \"\",\n                amount: \"0\",\n                note: \"\",\n                description: \"\",\n              },\n            });\n          });\n      }\n    }\n  };\n\n  setCalendar = (date: any) => {\n    const { calendarDates } = this.state;\n    let firstDay = moment(date).startOf(\"month\").get(\"date\");\n    let firstMonth = moment(date).startOf(\"month\").get(\"month\");\n    let firstYear = moment(date).startOf(\"month\").get(\"year\");\n\n    let fromDate = new Date(firstYear, firstMonth, firstDay);\n\n    let lastDay = moment(date).endOf(\"month\").get(\"date\");\n    let lastMonth = moment(date).endOf(\"month\").get(\"month\");\n    let lastYear = moment(date).endOf(\"month\").get(\"year\");\n\n    let toDate = new Date(lastYear, lastMonth, lastDay);\n\n    if (fromDate.getDay() !== 1 && fromDate.getDay() !== 0) {\n      this.setFirstWeek(date);\n    }\n\n    if (fromDate.getDay() === 0) {\n      let lastDay = new Date(date.getFullYear(), date.getMonth(), 0).getDate();\n      for (let i = lastDay - 5; i <= lastDay; i++) {\n        this.state.calendarDates.push({\n          date: new Date(date.getFullYear(), date.getMonth() - 1, i),\n        });\n      }\n    }\n\n    for (let i = 1; i <= toDate.getDate(); i++) {\n      calendarDates.push({\n        date: new Date(date.getFullYear(), date.getMonth(), i),\n      });\n    }\n    if (toDate.getDay() !== 0) this.setLastWeek(date);\n  };\n  setFirstWeek = (date: any) => {\n    let firstDay = moment(date).startOf(\"month\").startOf(\"week\").get(\"date\");\n    let firstMonth = moment(date).startOf(\"month\").startOf(\"week\").get(\"month\");\n    let firstYear = moment(date).startOf(\"month\").startOf(\"week\").get(\"year\");\n\n    let fromDate = new Date(firstYear, firstMonth, firstDay + 1);\n\n    let lastDay = moment(fromDate).endOf(\"month\").get(\"date\");\n    let lastMonth = moment(fromDate).endOf(\"month\").get(\"month\");\n    let lastYear = moment(fromDate).endOf(\"month\").get(\"year\");\n\n    let toDate = new Date(lastYear, lastMonth, lastDay);\n    for (let i = fromDate.getDate(); i <= toDate.getDate(); i++) {\n      this.state.calendarDates.push({\n        date: new Date(fromDate.getFullYear(), fromDate.getMonth(), i),\n      });\n    }\n  };\n  setLastWeek = (date: any) => {\n    let lastDay = moment(date).endOf(\"month\").endOf(\"week\").get(\"date\");\n    let lastMonth = moment(date).endOf(\"month\").endOf(\"week\").get(\"month\");\n    let lastYear = moment(date).endOf(\"month\").endOf(\"week\").get(\"year\");\n\n    let toDate = new Date(lastYear, lastMonth, lastDay + 1);\n\n    for (let i = 1; i <= toDate.getDate(); i++) {\n      this.state.calendarDates.push({\n        date: new Date(toDate.getFullYear(), toDate.getMonth(), i),\n      });\n    }\n  };\n\n  render() {\n    const {\n      date,\n      errors,\n      isTransfer,\n      selectedDay,\n      transaction,\n      transactions,\n      calendarDates,\n      isAddTransactionOpen,\n      isEditTransactionOpen,\n      isInfoTransactionOpen,\n    } = this.state;\n    return (\n      <div className={TransactionStyl.wrapper}>\n        <NavBarMenu\n          date={date}\n          handleNextMonth={this.handleNextMonth}\n          handlePreviousMonth={this.handlePreviousMonth}\n        />\n        <NewCalendar\n          handleOpenInfoModal={this.handleOpenInfoModal}\n          transactions={transactions}\n          calendarDate={calendarDates}\n          date={date}\n        />\n        <InfoModal\n          handleDelete={this.handleDelete}\n          selectedDay={selectedDay}\n          handleNextDay={this.handleNextDay}\n          isInfoTransactionOpen={isInfoTransactionOpen}\n          handlePreviousDay={this.handlePreviousDay}\n          handleOpenInfoModal={this.handleOpenInfoModal}\n          handleOpenTransaction={this.handleOpenTransaction}\n          handleOpenEdit={this.handleOpenEdit}\n        />\n        <AddTransactionModal\n          isEditTransactionOpen={isEditTransactionOpen}\n          errors={errors}\n          transaction={transaction}\n          isTransfer={isTransfer}\n          handleSave={this.handleSave}\n          handleOpenEdit={this.handleOpenEdit}\n          handleInputChange={this.handleInputChange}\n          isAddTransactionOpen={isAddTransactionOpen}\n          handleOpenTransaction={this.handleOpenTransaction}\n        />\n      </div>\n    );\n  }\n}\n\nexport default TransactionContainer;\n\n/*<Calendar*/\n\n/*  activeStartDate={this.state.date}*/\n\n/*  // onChange={(date) => console.log(date)}*/\n\n/*  calendarType={\"US\"}*/\n\n/*  className={TransactionStyl.calendar}*/\n\n/*  onClickDay={(date) => this.handleOpenInfoModal(date)}*/\n\n/*  showNavigation={false}*/\n\n/*  tileContent={({ date, view }) => this.handleSetEvent(date, view)}*/\n\n/*/>*/\n\n// handleSetEvent = (date: any, view: any) => {\n//   return (\n//     <div>\n//       {this.state.events.map((event) => (\n//         <div onClick={() => this.handleGetSpecificDay(event)}>\n//           {view === \"month\" &&\n//           date.getDate() === new Date(event.createdAt).getDate() &&\n//           date.getMonth() === new Date(event.createdAt).getMonth() &&\n//           date.getFullYear() === new Date(event.createdAt).getFullYear() ? (\n//             <div className={TransactionStyl.content_day}>\n//               <div className={TransactionStyl.income}>\n//                 ${(event.income / 100).toFixed(2)}\n//               </div>\n//               <div className={TransactionStyl.expense}>\n//                 ${(event.expense / 100).toFixed(2)}\n//               </div>\n//             </div>\n//           ) : null}\n//         </div>\n//       ))}\n//     </div>\n//   );\n// };\n","/home/george/Documents/Projects/budget-tracker/src/desktop/modules/transaction/dailyContainer/DailyContainer.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/modules/login/LoginContainer.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/store/types.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/layout/sideBar/SideBar.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/modules/login/components/SocialNetworks.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/modules/login/components/LoginForm.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/modules/transaction/components/addTransactionModal/AddTransactionModal.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/modules/login/components/RegistrationForm.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/modules/transaction/components/infoRow/InfoRow.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/store/actions/usersActions.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/modules/transaction/components/addTransactionModal/form/Form.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/pages/transactionPage/MonthlyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/pages/transactionPage/YearlyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/modules/transaction/yearlyContainer/YearlyContainer.tsx",["188","189"],"import React from \"react\";\nimport Moment from \"moment\";\nimport NavBarMenu from \"../../../layout/navBarMenu/NavBarMenu\";\nimport YearlyStyle from \"./YearlyStyle.module.css\";\nimport InfoRow from \"../components/infoRow/InfoRow\";\nimport {useHistory} from 'react-router-dom'\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport YearlyTableRow from \"./YearlyTableRow\";\n\nexport interface State {\n  date: any;\n  months: { from: any; to: any; expense: number; income: number }[];\n  sumIncome: number;\n  sumExpense: number;\n}\n\nclass YearlyContainer extends React.Component {\n  state: State = {\n    date: new Date(),\n    months: [],\n    sumIncome: 0,\n    sumExpense: 0,\n  };\n\n  componentDidMount() {\n    this.setYear();\n  }\n  setYear = async () => {\n    let months = [];\n\n    const { date } = this.state;\n\n    if (date.getFullYear() === new Date().getFullYear()) {\n      for (let i = 0; i <= date.getMonth(); i++) {\n        await months.push({\n          from: moment(\n            new Date(date.getFullYear(), date.getMonth() + i, 2)\n          ).toISOString(),\n          to: moment(\n            new Date(date.getFullYear(), date.getMonth() + i + 1, 1)\n          ).toISOString(),\n          income: 0,\n          expense: 0,\n        });\n      }\n    }\n    if (date.getFullYear() < new Date().getFullYear()) {\n      for (let i = 0; i <= 11; i++) {\n        await months.push({\n          from: moment(\n            new Date(date.getFullYear(), date.getMonth() + i, 2)\n          ).toISOString(),\n          to: moment(\n            new Date(date.getFullYear(), date.getMonth() + i + 1, 1)\n          ).toISOString(),\n          income: 0,\n          expense: 0,\n        });\n      }\n    }\n    let config = {\n      headers: {\n        Authorization:\n          \"Bearer \" +\n          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVmZjRjZjcyMDIwNTM5MmM3MGU5MmJlZiIsImlhdCI6MTYxMDIyNzAwOH0.bL8WKWjEe1NP2-07udR7ORGkraoavQZEyjtOUd9-5Po\",\n      },\n    };\n\n    axios\n      .post(\n        `http://localhost:5000/transaction/getYearlyOrWeekly`,\n        months,\n        config\n      )\n      .then((data) => {\n        this.setState({\n          months: data.data.months,\n          sumIncome: data.data.sumIncome,\n          sumExpense: data.data.sumExpense,\n        });\n      });\n  };\n  handleNextYear = async () => {\n    let Year = this.state.date.getFullYear();\n    let newYear = new Date().setFullYear(Year + 1);\n\n    await this.setState({\n      date: new Date(newYear),\n      months: [],\n    });\n\n    this.setYear();\n  };\n  handlePreviousYear = async () => {\n    let Year = this.state.date.getFullYear();\n    let newYear = new Date().setFullYear(Year - 1);\n\n    await this.setState({\n      ...this.state,\n      date: new Date(newYear),\n      months: [],\n    });\n\n    this.setYear();\n  };\n\n\n  render() {\n    const { date, months, sumExpense, sumIncome } = this.state;\n    return (\n      <div className={YearlyStyle.wrapper}>\n        <NavBarMenu\n          handlePreviousMonth={this.handlePreviousYear}\n          handleNextMonth={this.handleNextYear}\n          date={date}\n        />\n        <div className={YearlyStyle.container}>\n          <table className={YearlyStyle.table}>\n            <InfoRow sumIncome={sumIncome} sumExpense={sumExpense} />\n            <tbody >\n            {months.reverse().map((month, index) => (\n                <YearlyTableRow month={month} date={date}/>\n            ))}\n            </tbody>\n          </table>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default YearlyContainer;\n","/home/george/Documents/Projects/budget-tracker/src/desktop/modules/transaction/components/infoModal/InfoModal.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/pages/statsPage/WeeklyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/pages/statsPage/DailyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/pages/statsPage/YearlyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/pages/statsPage/MonthlyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/modules/stats/dailyContainer/DailyContainer.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/layout/navBarMenu/NavBarMenu.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/modules/stats/weeklyContainer/WeeklyContainer.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/modules/stats/monthlyContainer/MonthlyContainer.tsx",["190","191","192"],"import React, { useEffect, useState } from \"react\";\nimport NavBarMenu from \"../../../layout/navBarMenu/NavBarMenu\";\nimport { PieChart } from \"react-minimal-pie-chart\";\nimport moment from \"moment\";\nimport axios from \"axios\";\n\ntype Props = {\n  sumIncome: number;\n  sumExpense: number;\n  transactions: {\n    createdAt: any;\n    income: number;\n    expense: number;\n    events: {\n      type: string;\n      date: any;\n      account?: string;\n      from?: string;\n      to?: string;\n      category?: string;\n      amount: number;\n      note: string;\n      description: string;\n    }[];\n  }[];\n};\n\nconst MonthlyContainer = () => {\n  const [transactions, setTransactions] = useState<Props[\"transactions\"]>([]);\n  const [date, setDate] = useState(new Date());\n  const [sumIncome, setSumIncome] = useState(0);\n  const [sumExpense, setSumExpense] = useState(0);\n\n  useEffect(() => {\n    getTransactions(new Date());\n  }, []);\n\n  const handlePreviousMonth = () => {\n    let Month = new Date(date).getMonth();\n    let Year = date.getFullYear();\n    let newMonth = new Date(Year, Month - 1);\n    setDate(new Date(newMonth));\n    getTransactions(new Date(newMonth));\n  };\n  const handleNextMonth = () => {\n    let Month = new Date(date).getMonth();\n    let Year = date.getFullYear();\n    let newMonth = new Date(Year, Month + 1);\n    setDate(new Date(newMonth));\n    getTransactions(new Date(newMonth));\n  };\n  const getTransactions = (date: any) => {\n    let firstDay = moment(\n      new Date(date.getFullYear(), date.getMonth(), 1)\n    ).toISOString();\n    let lastDay = moment(\n      new Date(date.getFullYear(), date.getMonth() + 1, 0)\n    ).toISOString();\n    let config = {\n      headers: {\n        Authorization:\n          \"Bearer \" +\n          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVmZjRjZjcyMDIwNTM5MmM3MGU5MmJlZiIsImlhdCI6MTYxMDIyNzAwOH0.bL8WKWjEe1NP2-07udR7ORGkraoavQZEyjtOUd9-5Po\",\n      },\n    };\n    axios\n      .get(\n        `http://localhost:5000/transaction/specificDatePeriod/${firstDay}/${lastDay}`,\n        config\n      )\n      .then((data) => {\n        setTransactions(data.data.transactions);\n        setSumExpense(data.data.sumExpense);\n        setSumIncome(data.data.sumIncome);\n      });\n  };\n\n  return (\n    <div>\n      <NavBarMenu\n        handlePreviousMonth={handlePreviousMonth}\n        handleNextMonth={handleNextMonth}\n        date={date}\n      />\n\n      <div style={{ width: \"400px\" }}>\n        <PieChart\n          animate={true}\n          label={({ dataEntry }) => dataEntry.title}\n          data={[\n            { title: \"1\", value: 10000, color: \"#E38627\", label: \"1\" },\n            { title: \"2\", value: 1544, color: \"#C13C37\" },\n            { title: \"3\", value: 204, color: \"#6A2135\" },\n          ]}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default MonthlyContainer;\n","/home/george/Documents/Projects/budget-tracker/src/desktop/modules/stats/yearlyContainer/YearlyContainer.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/modules/transaction/monthlyContainer/NewCalendar.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/modules/transaction/dailyContainer/components/dailyTableRow/DailyTableRow.tsx",["193","194"],"import React from \"react\";\nimport DailyTableRowStyle from \"./DailyTableRow.module.css\";\n\ntype Props = {\n  event: {\n    _id?: string;\n    type: string;\n    date: any;\n    account?: string;\n    from?: string;\n    to?: string;\n    fees: number;\n    category?: string;\n    amount: number;\n    note: string;\n    description: string;\n  };\n};\nconst DailyTableRow: React.FC<Props> = ({ event }) => {\n  return (\n    <tr>\n      <td >\n          <div className={DailyTableRowStyle.account_container}>\n              <div className={DailyTableRowStyle.account}>\n                  {event.type == \"transfer\" ? \"Transfer\" : event.category}\n              </div>\n              <div className={DailyTableRowStyle.category}>\n                  <div>{event.note}</div>\n                  <div>\n                      {event.type == \"transfer\" ? (\n                          <div>\n                              {event.from}\n                              {\" ---> \"}\n                              {event.to}\n                          </div>\n                      ) : (\n                          event.account\n                      )}\n                  </div>\n              </div>\n          </div>\n\n      </td>\n      <td className={DailyTableRowStyle.income}>\n        {event.type === \"income\" ? (event.amount / 100).toFixed(2) : null}\n      </td>\n      <td\n        className={\n          event.type === \"expense\"\n            ? DailyTableRowStyle.expense\n            : DailyTableRowStyle.transfer\n        }\n      >\n        <div>\n          {event.type === \"expense\" || event.type === \"transfer\"\n            ? (event.amount / 100).toFixed(2)\n            : null}\n        </div>\n      </td>\n    </tr>\n  );\n};\n\nexport default DailyTableRow;\n","/home/george/Documents/Projects/budget-tracker/src/desktop/helpers/AuthRoute.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/modules/transaction/weeklyContainer/WeeklyTableRow.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/modules/transaction/yearlyContainer/YearlyTableRow.tsx",[],{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","severity":1,"message":"200","line":15,"column":1,"nodeType":"201","endLine":31,"endColumn":2},{"ruleId":"202","severity":1,"message":"203","line":135,"column":55,"nodeType":"204","messageId":"205","endLine":135,"endColumn":57},{"ruleId":"202","severity":1,"message":"203","line":262,"column":42,"nodeType":"204","messageId":"205","endLine":262,"endColumn":44},{"ruleId":"202","severity":1,"message":"203","line":288,"column":42,"nodeType":"204","messageId":"205","endLine":288,"endColumn":44},{"ruleId":"206","severity":1,"message":"207","line":327,"column":50,"nodeType":"208","messageId":"209","endLine":327,"endColumn":61},{"ruleId":"202","severity":1,"message":"203","line":339,"column":38,"nodeType":"204","messageId":"205","endLine":339,"endColumn":40},{"ruleId":"206","severity":1,"message":"210","line":2,"column":8,"nodeType":"208","messageId":"209","endLine":2,"endColumn":14},{"ruleId":"206","severity":1,"message":"211","line":6,"column":9,"nodeType":"208","messageId":"209","endLine":6,"endColumn":19},{"ruleId":"206","severity":1,"message":"212","line":29,"column":10,"nodeType":"208","messageId":"209","endLine":29,"endColumn":22},{"ruleId":"206","severity":1,"message":"213","line":31,"column":10,"nodeType":"208","messageId":"209","endLine":31,"endColumn":19},{"ruleId":"206","severity":1,"message":"214","line":32,"column":10,"nodeType":"208","messageId":"209","endLine":32,"endColumn":20},{"ruleId":"215","severity":1,"message":"216","line":25,"column":31,"nodeType":"217","messageId":"218","endLine":25,"endColumn":33},{"ruleId":"215","severity":1,"message":"216","line":30,"column":35,"nodeType":"217","messageId":"218","endLine":30,"endColumn":37},"no-native-reassign",["219"],"no-negated-in-lhs",["220"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","@typescript-eslint/no-unused-vars","'transaction' is assigned a value but never used.","Identifier","unusedVar","'Moment' is defined but never used.","'useHistory' is defined but never used.","'transactions' is assigned a value but never used.","'sumIncome' is assigned a value but never used.","'sumExpense' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]
