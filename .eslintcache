[{"/home/george/Documents/Projects/budget-tracker/src/index.tsx":"1","/home/george/Documents/Projects/budget-tracker/src/reportWebVitals.ts":"2","/home/george/Documents/Projects/budget-tracker/src/App.tsx":"3","/home/george/Documents/Projects/budget-tracker/src/store/store.tsx":"4","/home/george/Documents/Projects/budget-tracker/src/routes.tsx":"5","/home/george/Documents/Projects/budget-tracker/src/store/reducers/index.tsx":"6","/home/george/Documents/Projects/budget-tracker/src/helpers/AuthRoute.tsx":"7","/home/george/Documents/Projects/budget-tracker/src/pages/transactionPage/WeeklyPage.tsx":"8","/home/george/Documents/Projects/budget-tracker/src/pages/loginPage/LoginPage.tsx":"9","/home/george/Documents/Projects/budget-tracker/src/pages/transactionPage/YearlyPage.tsx":"10","/home/george/Documents/Projects/budget-tracker/src/pages/transactionPage/DailyPage.tsx":"11","/home/george/Documents/Projects/budget-tracker/src/pages/statsPage/WeeklyPage.tsx":"12","/home/george/Documents/Projects/budget-tracker/src/pages/transactionPage/MonthlyPage.tsx":"13","/home/george/Documents/Projects/budget-tracker/src/pages/statsPage/DailyPage.tsx":"14","/home/george/Documents/Projects/budget-tracker/src/pages/statsPage/YearlyPage.tsx":"15","/home/george/Documents/Projects/budget-tracker/src/pages/statsPage/MonthlyPage.tsx":"16","/home/george/Documents/Projects/budget-tracker/src/pages/homePage/HomePage.tsx":"17","/home/george/Documents/Projects/budget-tracker/src/store/reducers/userReducer.tsx":"18","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/reducers/transactionReducer.tsx":"19","/home/george/Documents/Projects/budget-tracker/src/modules/login/LoginContainer.tsx":"20","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/weeklyContainer/WeeklyContainer.tsx":"21","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/yearlyContainer/YearlyContainer.tsx":"22","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/dailyContainer/DailyContainer.tsx":"23","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/monthlyContainer/MonthlyContainer.tsx":"24","/home/george/Documents/Projects/budget-tracker/src/layout/header/Header.tsx":"25","/home/george/Documents/Projects/budget-tracker/src/modules/stats/dailyContainer/DailyContainer.tsx":"26","/home/george/Documents/Projects/budget-tracker/src/modules/stats/yearlyContainer/YearlyContainer.tsx":"27","/home/george/Documents/Projects/budget-tracker/src/modules/stats/monthlyContainer/MonthlyContainer.tsx":"28","/home/george/Documents/Projects/budget-tracker/src/modules/stats/weeklyContainer/WeeklyContainer.tsx":"29","/home/george/Documents/Projects/budget-tracker/src/store/types.tsx":"30","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/actionTypes.tsx":"31","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/weeklyContainer/WeeklyTableRow.tsx":"32","/home/george/Documents/Projects/budget-tracker/src/helpers/Variables.tsx":"33","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/yearlyContainer/YearlyTableRow.tsx":"34","/home/george/Documents/Projects/budget-tracker/src/helpers/Validation.tsx":"35","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/monthlyContainer/Calendar.tsx":"36","/home/george/Documents/Projects/budget-tracker/src/store/actions/usersActions.tsx":"37","/home/george/Documents/Projects/budget-tracker/src/modules/login/components/SocialNetworks.tsx":"38","/home/george/Documents/Projects/budget-tracker/src/modules/login/components/LoginForm.tsx":"39","/home/george/Documents/Projects/budget-tracker/src/modules/login/components/RegistrationForm.tsx":"40","/home/george/Documents/Projects/budget-tracker/src/layout/navBar/NavBar.tsx":"41","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/service/TransactionService.tsx":"42","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/actions/transactionActions.tsx":"43","/home/george/Documents/Projects/budget-tracker/src/layout/sideBar/SideBar.tsx":"44","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/AddTransactionModal.tsx":"45","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/infoModal/InfoModal.tsx":"46","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/dailyContainer/components/dailyTableRow/DailyTableRow.tsx":"47","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/dailyContainer/components/dailyTableHeader/DailyTableHeader.tsx":"48","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/Form.tsx":"49","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/components/InputTitles.tsx":"50","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/components/SelectInputs.tsx":"51","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/components/AmountInput.tsx":"52","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/components/FeesInput.tsx":"53","/home/george/Documents/Projects/budget-tracker/src/modules/stats/components/statsForm/StatsForm.tsx":"54","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/infoTableHead/InfoTableHead.tsx":"55"},{"size":622,"mtime":1615465342416,"results":"56","hashOfConfig":"57"},{"size":425,"mtime":1608638830636,"results":"58","hashOfConfig":"57"},{"size":175,"mtime":1615465342416,"results":"59","hashOfConfig":"57"},{"size":382,"mtime":1615465342428,"results":"60","hashOfConfig":"57"},{"size":2294,"mtime":1615465342428,"results":"61","hashOfConfig":"57"},{"size":278,"mtime":1615465342428,"results":"62","hashOfConfig":"57"},{"size":593,"mtime":1615465342416,"results":"63","hashOfConfig":"57"},{"size":304,"mtime":1615465342428,"results":"64","hashOfConfig":"57"},{"size":211,"mtime":1615465342428,"results":"65","hashOfConfig":"57"},{"size":304,"mtime":1615465342428,"results":"66","hashOfConfig":"57"},{"size":298,"mtime":1615465342428,"results":"67","hashOfConfig":"57"},{"size":298,"mtime":1615465342428,"results":"68","hashOfConfig":"57"},{"size":436,"mtime":1615465342428,"results":"69","hashOfConfig":"57"},{"size":292,"mtime":1615465342428,"results":"70","hashOfConfig":"57"},{"size":298,"mtime":1615465342428,"results":"71","hashOfConfig":"57"},{"size":339,"mtime":1615508396202,"results":"72","hashOfConfig":"57"},{"size":185,"mtime":1615465342424,"results":"73","hashOfConfig":"57"},{"size":568,"mtime":1615465342428,"results":"74","hashOfConfig":"57"},{"size":2005,"mtime":1615465342424,"results":"75","hashOfConfig":"57"},{"size":4817,"mtime":1615465342420,"results":"76","hashOfConfig":"57"},{"size":3686,"mtime":1616366817723,"results":"77","hashOfConfig":"57"},{"size":3754,"mtime":1615465342424,"results":"78","hashOfConfig":"57"},{"size":6519,"mtime":1615508212695,"results":"79","hashOfConfig":"57"},{"size":12286,"mtime":1615465342424,"results":"80","hashOfConfig":"57"},{"size":1443,"mtime":1615465342416,"results":"81","hashOfConfig":"57"},{"size":208,"mtime":1615465342420,"results":"82","hashOfConfig":"57"},{"size":669,"mtime":1615465342420,"results":"83","hashOfConfig":"57"},{"size":935,"mtime":1615509586258,"results":"84","hashOfConfig":"57"},{"size":669,"mtime":1615465342420,"results":"85","hashOfConfig":"57"},{"size":69,"mtime":1615465342428,"results":"86","hashOfConfig":"57"},{"size":322,"mtime":1615465342420,"results":"87","hashOfConfig":"57"},{"size":1171,"mtime":1615465342424,"results":"88","hashOfConfig":"57"},{"size":4757,"mtime":1615465342416,"results":"89","hashOfConfig":"57"},{"size":1100,"mtime":1615465342424,"results":"90","hashOfConfig":"57"},{"size":1345,"mtime":1615465342416,"results":"91","hashOfConfig":"57"},{"size":2512,"mtime":1615465342424,"results":"92","hashOfConfig":"57"},{"size":387,"mtime":1615465342428,"results":"93","hashOfConfig":"57"},{"size":967,"mtime":1615465342420,"results":"94","hashOfConfig":"57"},{"size":1160,"mtime":1615465342420,"results":"95","hashOfConfig":"57"},{"size":1692,"mtime":1615465342420,"results":"96","hashOfConfig":"57"},{"size":3654,"mtime":1615465342416,"results":"97","hashOfConfig":"57"},{"size":2137,"mtime":1615465342424,"results":"98","hashOfConfig":"57"},{"size":792,"mtime":1615465342420,"results":"99","hashOfConfig":"57"},{"size":1265,"mtime":1615465342420,"results":"100","hashOfConfig":"57"},{"size":5027,"mtime":1615465342420,"results":"101","hashOfConfig":"57"},{"size":4316,"mtime":1616366160259,"results":"102","hashOfConfig":"57"},{"size":1629,"mtime":1615465342424,"results":"103","hashOfConfig":"57"},{"size":1487,"mtime":1615465342424,"results":"104","hashOfConfig":"57"},{"size":3145,"mtime":1615465342420,"results":"105","hashOfConfig":"57"},{"size":1071,"mtime":1615465342420,"results":"106","hashOfConfig":"57"},{"size":941,"mtime":1615465342420,"results":"107","hashOfConfig":"57"},{"size":1217,"mtime":1615465342420,"results":"108","hashOfConfig":"57"},{"size":1417,"mtime":1615465342420,"results":"109","hashOfConfig":"57"},{"size":1486,"mtime":1615601325497,"results":"110","hashOfConfig":"57"},{"size":924,"mtime":1616366808944,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"1me94a7",{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"114"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"114"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"114"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"114"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"114"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"114"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"114"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"114"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"114"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"114"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/george/Documents/Projects/budget-tracker/src/index.tsx",[],["233","234"],"/home/george/Documents/Projects/budget-tracker/src/reportWebVitals.ts",[],"/home/george/Documents/Projects/budget-tracker/src/App.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/store/store.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/routes.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/store/reducers/index.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/helpers/AuthRoute.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/transactionPage/WeeklyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/loginPage/LoginPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/transactionPage/YearlyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/transactionPage/DailyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/statsPage/WeeklyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/transactionPage/MonthlyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/statsPage/DailyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/statsPage/YearlyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/statsPage/MonthlyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/homePage/HomePage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/store/reducers/userReducer.tsx",["235"],"import { SIGN_IN } from \"../types\";\n\nexport interface State {\n  user: any;\n  token: string;\n  loading: boolean;\n}\n\nconst initialState = {\n  user: {},\n  token: \"\",\n  loading: true,\n};\n\nexport default function (state = initialState, action: any) {\n  switch (action.type) {\n    case SIGN_IN:\n      if (action.payload.token) {\n        localStorage.setItem(\"jwt\", action.payload.token);\n      }\n\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/reducers/transactionReducer.tsx",["236"],"import {\n  HANDLE_PREVIOUS_MONTH,\n  HANDLE_NEXT_MONTH,\n  HANDLE_NEXT_YEAR,\n  HANDLE_PREVIOUS_YEAR,\n  HANDLE_INPUT,\n  SET_TRANSACTION,\n} from \"../actionTypes\";\nimport { TransactionEvent } from \"../../../helpers/ITransactions\";\n\nexport interface State {\n  date: Date;\n  transaction: TransactionEvent;\n}\nconst initialState = {\n  date: new Date(),\n  transaction: {\n    _id: \"\",\n    type: \"income\",\n    date: \"\",\n    account: \"\",\n    from: \"\",\n    category: \"\",\n    fees: \"0\",\n    transferId: \"\",\n    to: \"\",\n    amount: \"0\",\n    note: \"\",\n    description: \"\",\n  },\n};\nexport default function (state = initialState, action: any) {\n  let month = new Date(state.date).getMonth();\n  let year = state.date.getFullYear();\n  switch (action.type) {\n    case HANDLE_NEXT_MONTH:\n      let nextMonth = new Date(year, month + 1);\n      return {\n        ...state,\n        date: nextMonth,\n      };\n    case HANDLE_PREVIOUS_MONTH:\n      let previousMonth = new Date(year, month - 1);\n      return {\n        ...state,\n        date: previousMonth,\n      };\n    case HANDLE_NEXT_YEAR:\n      let nextYear = new Date(year + 1, new Date().getMonth(), 1);\n\n      return {\n        ...state,\n        date: nextYear,\n      };\n    case HANDLE_PREVIOUS_YEAR:\n      let previousYear = new Date(year - 1, new Date().getMonth(), 1);\n      return {\n        ...state,\n        date: previousYear,\n      };\n\n    case HANDLE_INPUT:\n      if (action.payload.name === \"type\") {\n        return {\n          ...state,\n          transaction: {\n            ...state.transaction,\n            [action.payload.name]: action.payload.value,\n            category: \"\",\n            to: \"\",\n          },\n        };\n      } else {\n        return {\n          ...state,\n          transaction: {\n            ...state.transaction,\n            [action.payload.name]: action.payload.value,\n          },\n        };\n      }\n    case SET_TRANSACTION:\n      return {\n        ...state,\n        transaction: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","/home/george/Documents/Projects/budget-tracker/src/modules/login/LoginContainer.tsx",["237"],"import React, { useState } from \"react\";\nimport LoginContainerStyle from \"./LoginContainerStyle.module.css\";\nimport LoginForm from \"./components/LoginForm\";\nimport RegistrationForm from \"./components/RegistrationForm\";\nimport SocialNetworks from \"./components/SocialNetworks\";\nimport { Tabs, TabList, TabPanel, Tab } from \"react-tabs\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { singIn } from \"../../store/actions/usersActions\";\nimport axios from \"axios\";\n\nconst LoginContainer = () => {\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n  const [isLogin, setIsLogin] = useState(true);\n  const [errors, setErrors] = useState({\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const handleInputChange = (e: any) =>\n    setUser({\n      ...user,\n      [e.currentTarget.name]: e.currentTarget.value,\n    });\n\n  const validateForm = () => {\n    const isValidEmail = RegExp(\n      \"[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\"\n    );\n    let errors = {\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n    };\n    if (!isValidEmail.test(user.email)) {\n      errors.email = \"Please enter a valid email.\";\n    }\n    if (user.password !== user.confirmPassword && !isLogin) {\n      errors.confirmPassword = \"The password does not match. \";\n    }\n    if (\n      !user.password.match(/^[0-9a-zA-Z]+$/) ||\n      user.password.length > 20 ||\n      user.password.length < 6\n    ) {\n      errors.password = \"Please enter 6-20 characters [A-Z, a-z, 0-9 only].\";\n    }\n    return errors;\n  };\n  const handleLogin = async () => {\n    const errors = validateForm();\n    const isValid = Object.values(errors).filter(Boolean).length <= 0;\n    if (!isValid) {\n      setErrors({\n        email: errors.email,\n        password: errors.password,\n        confirmPassword: errors.confirmPassword,\n      });\n      return;\n    } else {\n      localStorage.removeItem(\"jwt\");\n      let loggedUser = await axios.post(`http://localhost:5000/signIn`, user);\n\n      if (loggedUser.data.user) {\n        dispatch(singIn(loggedUser.data));\n        // history.push(\"./\");\n        window.location.pathname = \"/transaction/monthly\";\n        setErrors({ email: \"\", password: \"\", confirmPassword: \"\" });\n      } else {\n        setErrors({\n          email: \"\",\n          password: loggedUser.data.errorMSG,\n          confirmPassword: \"\",\n        });\n      }\n    }\n  };\n  const handleRegister = async () => {\n    const errors = validateForm();\n    const isValid = Object.values(errors).filter(Boolean).length <= 0;\n    if (!isValid) {\n      setErrors({\n        email: errors.email,\n        password: errors.password,\n        confirmPassword: errors.confirmPassword,\n      });\n      return;\n    }\n    localStorage.removeItem(\"jwt\");\n\n    let newUser = {\n      username: user.email,\n      email: user.email,\n      password: user.password,\n      type: \"admin\",\n      currency: \"BG\",\n      categories: [],\n    };\n    try {\n      let signUp = await axios.post(`http://localhost:5000/signUp`, newUser);\n      setErrors({ email: \"\", password: \"\", confirmPassword: \"\" });\n      dispatch(singIn(signUp.data.data));\n      window.location.pathname = \"/transaction/monthly\";\n    } catch (e) {\n      console.error(e);\n      return [];\n    }\n  };\n  return (\n    <div className={LoginContainerStyle.container}>\n      <div className={LoginContainerStyle.login_form}>\n        <Tabs selectedTabClassName={LoginContainerStyle.selected_tab}>\n          <TabList className={LoginContainerStyle.tab_list}>\n            <Tab\n              className={LoginContainerStyle.tab}\n              onClick={() => {\n                setErrors({ email: \"\", password: \"\", confirmPassword: \"\" });\n                setIsLogin(true);\n              }}\n            >\n              Sign In\n            </Tab>\n            <Tab\n              className={LoginContainerStyle.tab}\n              onClick={() => {\n                setErrors({ email: \"\", password: \"\", confirmPassword: \"\" });\n                setIsLogin(true);\n              }}\n            >\n              Register\n            </Tab>\n          </TabList>\n          <TabPanel>\n            <LoginForm\n              Submit={handleLogin}\n              errors={errors}\n              handleInput={handleInputChange}\n            />\n          </TabPanel>\n          <TabPanel>\n            <RegistrationForm\n              Submit={handleRegister}\n              errors={errors}\n              handleInput={handleInputChange}\n            />\n          </TabPanel>\n        </Tabs>\n        <SocialNetworks />\n      </div>\n    </div>\n  );\n};\nexport default LoginContainer;\n","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/weeklyContainer/WeeklyContainer.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/yearlyContainer/YearlyContainer.tsx",["238"],"import React from \"react\";\nimport NavBarMenu from \"../../../layout/navBar/NavBar\";\nimport YearlyStyle from \"./YearlyStyle.module.css\";\nimport InfoRow from \"../components/infoRow/InfoRow\";\nimport Moment from \"moment\";\nimport YearlyTableRow from \"./YearlyTableRow\";\nimport { State as StateTransaction } from \"../reducers/transactionReducer\";\nimport { connect } from \"react-redux\";\nimport { getYearlyOrWeekly } from \"../service/TransactionService\";\nimport { Month, TransactionReducer } from \"../../../helpers/ITransactions\";\nexport interface State {\n  months: Month[];\n  sumIncome: number;\n  sumExpense: number;\n}\ntype Props = {\n  state: StateTransaction;\n};\n\nclass YearlyContainer extends React.Component<Props> {\n  state: State = {\n    months: [],\n    sumIncome: 0,\n    sumExpense: 0,\n  };\n\n  componentDidMount() {\n    this.setYear(this.props.state.date);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>) {\n    if (prevProps.state.date !== this.props.state.date) {\n      this.setState({\n        date: this.props.state.date,\n      });\n      this.setYear(this.props.state.date);\n    }\n  }\n\n  setYear = async (date: Date) => {\n    let months = [];\n\n    for (let i = 0; i <= 11; i++) {\n      await months.push({\n        from: Moment(new Date(date.getFullYear(), i, 2)).toISOString(),\n        to: Moment(new Date(date.getFullYear(), i + 1, 1)).toISOString(),\n        income: 0,\n        expense: 0,\n      });\n    }\n\n    let data = await getYearlyOrWeekly(months);\n    if (date.getFullYear() < new Date().getFullYear()) {\n      this.setState({\n        months: data.months,\n        sumIncome: data.sumIncome,\n        sumExpense: data.sumExpense,\n      });\n    }\n    if (date.getFullYear() === new Date().getFullYear()) {\n      this.setState({\n        sumIncome: data.sumIncome,\n        sumExpense: data.sumExpense,\n      });\n      this.setMonths(data.months);\n    }\n    if (date.getFullYear() > new Date().getFullYear()) {\n      this.setState({\n        months: data.months.filter(\n          (month: Month) => month.expense > 0 || month.income > 0\n        ),\n        sumIncome: data.sumIncome,\n        sumExpense: data.sumExpense,\n      });\n    }\n  };\n\n  setMonths = async (months: Month[]) => {\n    const { date } = this.props.state;\n    let year = [];\n    let newMonths = months.filter(\n      month => month.expense > 0 || month.income > 0\n    );\n\n    for (\n      let i = 0;\n      i <= new Date(newMonths[newMonths.length - 1].from).getMonth();\n      i++\n    ) {\n      if (\n        newMonths.filter(month => new Date(month.from).getMonth() === i)\n          .length > 0\n      ) {\n        year.push(\n          newMonths.filter(month => new Date(month.from).getMonth() === i)[0]\n        );\n      } else {\n        await year.push({\n          from: Moment(new Date(date.getFullYear(), i, 2)).toISOString(),\n          to: Moment(new Date(date.getFullYear(), i + 1, 1)).toISOString(),\n          income: 0,\n          expense: 0,\n        });\n      }\n    }\n    this.setState({ months: year });\n  };\n  render() {\n    const { months, sumExpense, sumIncome } = this.state;\n    const { date } = this.props.state;\n    return (\n      <div className={YearlyStyle.wrapper}>\n        <NavBarMenu />\n        <div className={YearlyStyle.container}>\n          <table className={YearlyStyle.table}>\n            <InfoRow sumIncome={sumIncome} sumExpense={sumExpense} />\n            <tbody>\n              {months.reverse().map(month => (\n                <YearlyTableRow month={month} />\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: { transactionReducer: TransactionReducer }) => {\n  return {\n    state: state.transactionReducer,\n  };\n};\n\nexport default connect(mapStateToProps)(YearlyContainer);\n","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/dailyContainer/DailyContainer.tsx",["239"],"import React, { useEffect, useState } from \"react\";\nimport NavBarMenu from \"../../../layout/navBar/NavBar\";\nimport DailyStyle from \"./DailyStyle.module.css\";\nimport InfoRow from \"../components/infoRow/InfoRow\";\nimport Moment from \"moment\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport DailyTableRow from \"./components/dailyTableRow/DailyTableRow\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AddTransactionModal from \"../components/addTransactionModal/AddTransactionModal\";\nimport {\n  TransactionEvent,\n  Transaction,\n  TransactionReducer,\n  userReducer,\n} from \"../../../helpers/ITransactions\";\nimport {\n  createTransactionRequest,\n  deleteTransaction,\n  editTransaction,\n  getSpecificDatePeriod,\n} from \"../service/TransactionService\";\nimport { validateTransaction } from \"../../../helpers/Validation\";\nimport { transactionEvent } from \"../../../helpers/Variables\";\nimport { setTransaction, handleInput } from \"../actions/transactionActions\";\nimport DailyTableHeader from \"./components/dailyTableHeader/DailyTableHeader\";\n\ntype Props = {\n  sumIncome: number;\n  sumExpense: number;\n  selectedEvent: TransactionEvent;\n  event: {\n    _id: string;\n    type: string;\n    date: Date;\n    account?: string;\n    from?: string;\n    to?: string;\n    category?: string;\n    amount: number;\n    fees: number;\n    note: string;\n    description: string;\n  };\n};\nconst DailyContainer = () => {\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\n  const [transactionIsOpen, setTransactionIsOpen] = useState(false);\n  const [sumIncome, setSumIncome] = useState(0);\n  const [sumExpense, setSumExpense] = useState(0);\n  const [transactionId, setTransactionId] = useState(\"\");\n  const [editTransacionIsOpen, setEditTransacionIsOpen] = useState(false);\n\n  const [errors, setErrors] = useState({\n    account: \"\",\n    from: \"\",\n    category: \"\",\n    to: \"\",\n    amount: \"\",\n  });\n  const dispatch = useDispatch();\n\n  const stateTransaction = useSelector(\n    (state: {\n      userReducer: userReducer;\n      transactionReducer: TransactionReducer;\n    }) => state.transactionReducer\n  );\n  console.log(stateTransaction);\n\n  useEffect(() => {\n    getTransactions(stateTransaction.date);\n  }, [stateTransaction.date]);\n\n  const getTransactions = async (date: Date) => {\n    let firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n    let lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n\n    let data = await getSpecificDatePeriod(firstDay, lastDay);\n    setTransactions(data.transactions);\n    setSumExpense(data.sumExpense);\n    setSumIncome(data.sumIncome);\n  };\n  const handleSave = async () => {\n    const { transaction, date } = stateTransaction;\n    const errors = validateTransaction(transaction);\n    const isValid = Object.values(errors).filter(Boolean).length <= 0;\n\n    if (!isValid) {\n      setErrors(errors);\n      return;\n    }\n\n    let event = transactionEvent(transaction);\n\n    if (editTransacionIsOpen) {\n      await editTransaction(\n        transactionId,\n        stateTransaction.transaction._id,\n        event.events[0]\n      );\n      getTransactions(date);\n      clearState();\n    } else {\n      await createTransactionRequest(event);\n      getTransactions(date);\n      clearState();\n    }\n  };\n\n  const handleDelete = async (eventId: string) => {\n    await deleteTransaction(transactionId, eventId);\n    clearState();\n    getTransactions(stateTransaction.date);\n  };\n\n  const clearState = () => {\n    setErrors({ account: \"\", from: \"\", category: \"\", to: \"\", amount: \"\" });\n    setTransactionIsOpen(false);\n    setEditTransacionIsOpen(false);\n    setTransactionId(\"\");\n    dispatch(\n      setTransaction({\n        _id: \"\",\n        type: \"income\",\n        date: new Date(),\n        account: \"\",\n        from: \"\",\n        category: \"\",\n        fees: \"0\",\n        to: \"\",\n        amount: \"0\",\n        note: \"\",\n        description: \"\",\n      })\n    );\n  };\n\n  const handleSelectEvent = (\n    transactioEvent: Props[\"event\"],\n    transactionId: string\n  ) => {\n    if (transactionIsOpen) {\n      clearState();\n    } else {\n      setTransactionIsOpen(true);\n      setTransactionId(transactionId);\n      setEditTransacionIsOpen(true);\n      let Event = {\n        ...transactioEvent,\n        amount: (transactioEvent.amount / 100).toFixed(2),\n        fees: (transactioEvent.fees / 100).toFixed(2),\n      };\n\n      dispatch(setTransaction(Event));\n    }\n  };\n  const handleOpenTransaction = () => {\n    if (transactionIsOpen) {\n      clearState();\n    } else {\n      setTransactionIsOpen(true);\n\n      dispatch(\n        handleInput({\n          target: {\n            name: \"date\",\n            value: new Date().setHours(0, 0, 0, 0),\n          },\n        })\n      );\n    }\n  };\n  return (\n    <div className={DailyStyle.wrapper}>\n      <NavBarMenu />\n      <div className={DailyStyle.container}>\n        <table className={DailyStyle.table}>\n          <InfoRow sumIncome={sumIncome} sumExpense={sumExpense} />\n\n          {transactions\n            .sort(function (a, b) {\n              return (\n                new Date(a.createdAt).getDate() -\n                new Date(b.createdAt).getDate()\n              );\n            })\n            .reverse()\n            .map(transaction => (\n              <tbody className={DailyStyle.table_container}>\n                <DailyTableHeader transaction={transaction} />\n                {transaction.events.map((event: any) => (\n                  <DailyTableRow\n                    event={event}\n                    key={event._id}\n                    handleSelectEvent={event =>\n                      handleSelectEvent(event, transaction._id)\n                    }\n                  />\n                ))}\n              </tbody>\n            ))}\n        </table>\n        <FontAwesomeIcon\n          className={DailyStyle.add_button}\n          icon={faPlusCircle}\n          onClick={() => handleOpenTransaction()}\n        />\n      </div>\n      <AddTransactionModal\n        isAddTransactionOpen={transactionIsOpen}\n        transactionEvent={stateTransaction.transaction}\n        errors={errors}\n        isEditTransactionOpen={editTransacionIsOpen}\n        handleInputChange={event => dispatch(handleInput(event))}\n        handleSave={handleSave}\n        handleOpenTransaction={handleOpenTransaction}\n        handleOpenEdit={handleOpenTransaction}\n        handleDelete={handleDelete}\n      />\n    </div>\n  );\n};\n\nexport default DailyContainer;\n","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/monthlyContainer/MonthlyContainer.tsx",["240","241","242","243"],"import React from \"react\";\nimport TransactionStyl from \"./MonthlyStyle.module.css\";\nimport AddTransactionModal from \"../components/addTransactionModal/AddTransactionModal\";\nimport NavBarMenu from \"../../../layout/navBar/NavBar\";\nimport moment from \"moment\";\nimport InfoModal from \"../components/infoModal/InfoModal\";\nimport Calendar from \"./Calendar\";\nimport { connect } from \"react-redux\";\nimport { State as StateTransaction } from \"../reducers/transactionReducer\";\nimport {\n  dayStartOfTheWeekOfTheMonth,\n  monthStartOfTheWeekOfTheMonth,\n  yearStartOfTheWeekOfTheMonth,\n  dayEndOfTheWeekOfTheMonth,\n  monthEndOfTheWeekOfTheMonth,\n  yearEndOfTheWeekOfTheMonth,\n  dayStartOfTheMonth,\n  monthStartOfTheMonth,\n  yearStartOfTheMonth,\n  dayEndOfTheMonth,\n  monthEndOfTheMonth,\n  yearEndOfTheMonth,\n  transactionEvent,\n} from \"../../../helpers/Variables\";\nimport { validateTransaction } from \"../../../helpers/Validation\";\nimport {\n  createTransactionRequest,\n  deleteTransaction,\n  editTransaction,\n  getSpecificDatePeriod,\n} from \"../service/TransactionService\";\nimport { handleInput, setTransaction } from \"../actions/transactionActions\";\nimport {\n  Transaction,\n  Errors,\n  HandleInput,\n  TransactionEvent,\n  TransactionReducer,\n} from \"../../../helpers/ITransactions\";\n\ntype Props = {\n  filters: any;\n  stateTransaction: StateTransaction;\n  handleInput: (event: HandleInput) => void;\n  setTransaction: (event: TransactionEvent) => void;\n};\n\ntype State = {\n  isAddTransactionOpen: boolean;\n  isInfoTransactionOpen: boolean;\n  isEditTransactionOpen: boolean;\n  selectedDay: Transaction;\n  isTransfer: boolean;\n  errors: Errors;\n  date: Date;\n  calendarDates: { date: Date }[];\n  transactions: Transaction[];\n};\n\nclass MonthlyContainer extends React.Component<Props> {\n  state: State = {\n    isInfoTransactionOpen: false,\n    isAddTransactionOpen: false,\n    isEditTransactionOpen: false,\n    date: new Date(),\n    isTransfer: false,\n    selectedDay: {\n      _id: \"\",\n      createdAt: new Date(),\n      events: [],\n      expense: 0,\n      income: 0,\n    },\n    errors: {\n      account: \"\",\n      from: \"\",\n      category: \"\",\n      to: \"\",\n      amount: \"\",\n    },\n    transactions: [],\n    calendarDates: [],\n  };\n\n  componentDidMount() {\n    const { stateTransaction, filters } = this.props;\n    console.log(filters);\n    if (filters.date) {\n      this.setState({\n        date: new Date(this.props.filters.date),\n      });\n      this.getTransactions(new Date(filters.date));\n      this.setCalendar(new Date(filters.date));\n    } else {\n      this.setState({\n        date: stateTransaction.date,\n      });\n      this.getTransactions(stateTransaction.date);\n    }\n    if (filters.date === undefined) {\n      this.setCalendar(stateTransaction.date);\n    }\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>) {\n    const { date } = this.props.stateTransaction;\n\n    if (prevProps.stateTransaction.date !== date) {\n      this.setCalendar(date);\n      this.getTransactions(date);\n    }\n  }\n\n  getTransactions = async (date: Date) => {\n    let from = new Date(\n      yearStartOfTheWeekOfTheMonth(date),\n      monthStartOfTheWeekOfTheMonth(date),\n      dayStartOfTheWeekOfTheMonth(date)\n    );\n\n    let to = new Date(\n      yearEndOfTheWeekOfTheMonth(date),\n      monthEndOfTheWeekOfTheMonth(date),\n      dayEndOfTheWeekOfTheMonth(date)\n    );\n\n    let data = await getSpecificDatePeriod(from, to);\n    data.transactions.map((transaction: Transaction) => {\n      if (\n        new Date(this.state.selectedDay.createdAt).getDate() ===\n          new Date(transaction.createdAt).getDate() &&\n        new Date(this.state.selectedDay.createdAt).getMonth() ===\n          new Date(transaction.createdAt).getMonth()\n      ) {\n        this.setState({\n          selectedDay: transaction,\n        });\n      }\n    });\n    this.setState({ transactions: data.transactions });\n  };\n\n  handleDelete = async (eventId: string) => {\n    await deleteTransaction(this.state.selectedDay._id, eventId);\n    let newEvents = this.state.selectedDay.events.filter(\n      event => event._id !== eventId\n    );\n    this.setState({\n      selectedDay: { ...this.state.selectedDay, events: newEvents },\n      isEditTransactionOpen: false,\n    });\n    this.clearState();\n    this.getTransactions(this.state.date);\n  };\n  handleOpenEdit = (event: TransactionEvent) => {\n    const { isEditTransactionOpen } = this.state;\n    if (isEditTransactionOpen) {\n      this.setState({ isEditTransactionOpen: false });\n      this.clearState();\n    } else {\n      this.setState({\n        isEditTransactionOpen: true,\n      });\n\n      this.props.setTransaction({\n        ...event,\n        amount: (parseFloat(event.amount) / 100).toFixed(2),\n        fees: (parseFloat(event.fees) / 100).toFixed(2),\n      });\n    }\n  };\n  handleNextDay = async () => {\n    const { selectedDay, transactions } = this.state;\n\n    let date = new Date(selectedDay.createdAt);\n\n    let newDate = new Date(\n      date.getFullYear(),\n      date.getMonth(),\n      date.getDate() + 1\n    );\n\n    await this.setState({\n      selectedDay: { createdAt: newDate, events: [] },\n      date: newDate,\n    });\n\n    await transactions.map(transaction => {\n      if (\n        newDate.getDate() === new Date(transaction.createdAt).getDate() &&\n        newDate.getMonth() === new Date(transaction.createdAt).getMonth()\n      ) {\n        this.setState({\n          selectedDay: transaction,\n        });\n      }\n    });\n  };\n  handlePreviousDay = async () => {\n    const { selectedDay, transactions } = this.state;\n\n    let date = new Date(selectedDay.createdAt);\n\n    let newDate = new Date(\n      date.getFullYear(),\n      date.getMonth(),\n      date.getDate() - 1\n    );\n    this.setState({\n      selectedDay: { createdAt: newDate, events: [] },\n      date: newDate,\n    });\n\n    await transactions.map(transaction => {\n      if (\n        newDate.getDate() === new Date(transaction.createdAt).getDate() &&\n        newDate.getMonth() === new Date(transaction.createdAt).getMonth()\n      ) {\n        this.setState({\n          selectedDay: transaction,\n        });\n      }\n    });\n  };\n  handleOpenTransaction = () => {\n    if (this.state.isAddTransactionOpen) {\n      this.setState({\n        isAddTransactionOpen: false,\n      });\n      this.clearState();\n    } else {\n      this.props.handleInput({\n        target: {\n          name: \"date\",\n          value: this.state.selectedDay.createdAt,\n        },\n      });\n      this.setState({\n        isAddTransactionOpen: true,\n      });\n    }\n  };\n  handleOpenInfoModal = (date: Date) => {\n    const { isInfoTransactionOpen } = this.state;\n    if (isInfoTransactionOpen) {\n      this.setState({\n        isInfoTransactionOpen: false,\n        selectedDay: { events: [] },\n      });\n    } else {\n      this.setState({\n        isInfoTransactionOpen: true,\n        selectedDay: { createdAt: new Date(date), events: [] },\n      });\n      this.selectedDay(date);\n    }\n  };\n  selectedDay = (date: Date) => {\n    this.state.transactions.forEach(transaction => {\n      if (\n        new Date(date).getDate() ===\n          new Date(transaction.createdAt).getDate() &&\n        new Date(date).getMonth() === new Date(transaction.createdAt).getMonth()\n      ) {\n        this.setState({\n          selectedDay: transaction,\n        });\n      }\n    });\n  };\n\n  handleSave = async () => {\n    const { isEditTransactionOpen, selectedDay } = this.state;\n    const { transaction, date } = this.props.stateTransaction;\n    const errors = validateTransaction(transaction);\n    const isValid = Object.values(errors).filter(Boolean).length <= 0;\n\n    if (!isValid) {\n      this.setState({ errors: errors });\n      return;\n    }\n    let event = transactionEvent(transaction);\n    console.log(event);\n    if (isEditTransactionOpen) {\n      await editTransaction(selectedDay._id, transaction._id, event.events[0]);\n      this.getTransactions(transaction.date);\n      this.clearState();\n    } else {\n      await createTransactionRequest(event);\n      this.getTransactions(date);\n      this.clearState();\n    }\n    this.setState({\n      ...this.state,\n      errors: {},\n      isAddTransactionOpen: false,\n      isEditTransactionOpen: false,\n    });\n  };\n\n  clearState = () => {\n    this.props.setTransaction({\n      _id: \"\",\n      type: \"income\",\n      date: new Date(),\n      account: \"\",\n      from: \"\",\n      category: \"\",\n      fees: \"0\",\n      to: \"\",\n      amount: \"0\",\n      note: \"\",\n      description: \"\",\n    });\n  };\n\n  setCalendar = async (date: Date) => {\n    await this.setState({ calendarDates: [] });\n    const { calendarDates } = this.state;\n\n    let fromDate = new Date(\n      yearStartOfTheMonth(date),\n      monthStartOfTheMonth(date),\n      dayStartOfTheMonth(date)\n    );\n\n    let toDate = new Date(\n      yearEndOfTheMonth(date),\n      monthEndOfTheMonth(date),\n      dayEndOfTheMonth(date)\n    );\n\n    if (fromDate.getDay() !== 1 && fromDate.getDay() !== 0) {\n      this.setFirstWeek(date);\n    }\n\n    if (fromDate.getDay() === 0) {\n      let lastDay = new Date(date.getFullYear(), date.getMonth(), 0).getDate();\n      for (let i = lastDay - 5; i <= lastDay; i++) {\n        calendarDates.push({\n          date: new Date(date.getFullYear(), date.getMonth() - 1, i),\n        });\n      }\n    }\n\n    for (let i = 1; i <= toDate.getDate(); i++) {\n      calendarDates.push({\n        date: new Date(date.getFullYear(), date.getMonth(), i),\n      });\n    }\n\n    if (toDate.getDay() !== 0) {\n      this.setLastWeek(date);\n    }\n  };\n\n  setFirstWeek = (date: Date) => {\n    let fromDate = new Date(\n      yearStartOfTheWeekOfTheMonth(date),\n      monthStartOfTheWeekOfTheMonth(date),\n      dayStartOfTheWeekOfTheMonth(date) + 1\n    );\n\n    let toDate = new Date(\n      yearEndOfTheMonth(fromDate),\n      monthEndOfTheMonth(fromDate),\n      dayEndOfTheMonth(fromDate)\n    );\n\n    for (let i = fromDate.getDate(); i <= toDate.getDate(); i++) {\n      this.state.calendarDates.push({\n        date: new Date(fromDate.getFullYear(), fromDate.getMonth(), i),\n      });\n    }\n  };\n  setLastWeek = (date: Date) => {\n    let toDate = new Date(\n      yearEndOfTheWeekOfTheMonth(date),\n      monthEndOfTheWeekOfTheMonth(date),\n      dayEndOfTheWeekOfTheMonth(date) + 1\n    );\n\n    for (let i = 1; i <= toDate.getDate(); i++) {\n      this.state.calendarDates.push({\n        date: new Date(toDate.getFullYear(), toDate.getMonth(), i),\n      });\n    }\n  };\n\n  render() {\n    const {\n      errors,\n      selectedDay,\n      transactions,\n      calendarDates,\n      isAddTransactionOpen,\n      isEditTransactionOpen,\n      isInfoTransactionOpen,\n    } = this.state;\n    const { date, transaction } = this.props.stateTransaction;\n    return (\n      <div className={TransactionStyl.wrapper}>\n        <NavBarMenu />\n        <Calendar\n          handleOpenInfoModal={this.handleOpenInfoModal}\n          transactions={transactions}\n          calendarDates={calendarDates}\n          date={date}\n        />\n\n        <InfoModal\n          handleDelete={this.handleDelete}\n          selectedDay={selectedDay}\n          handleNextDay={this.handleNextDay}\n          isInfoTransactionOpen={isInfoTransactionOpen}\n          handlePreviousDay={this.handlePreviousDay}\n          handleOpenInfoModal={this.handleOpenInfoModal}\n          handleOpenTransaction={this.handleOpenTransaction}\n          handleOpenEdit={this.handleOpenEdit}\n        />\n        <AddTransactionModal\n          isEditTransactionOpen={isEditTransactionOpen}\n          errors={errors}\n          transactionEvent={transaction}\n          handleSave={this.handleSave}\n          handleOpenEdit={this.handleOpenEdit}\n          handleInputChange={this.props.handleInput}\n          isAddTransactionOpen={isAddTransactionOpen}\n          handleOpenTransaction={this.handleOpenTransaction}\n          handleDelete={this.handleDelete}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: { transactionReducer: TransactionReducer }) => {\n  return {\n    stateTransaction: state.transactionReducer,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    handleInput: (event: HandleInput) => dispatch(handleInput(event)),\n    setTransaction: (event: TransactionEvent) =>\n      dispatch(setTransaction(event)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonthlyContainer);\n","/home/george/Documents/Projects/budget-tracker/src/layout/header/Header.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/stats/dailyContainer/DailyContainer.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/stats/yearlyContainer/YearlyContainer.tsx",["244","245"],"import React, { useState } from \"react\";\nimport NavBarMenu from \"../../../layout/navBar/NavBar\";\n\nconst YearlyContainer = () => {\n  const [date, setDate] = useState(new Date());\n\n  const handlePreviousMonth = () => {\n    let Month = new Date(date).getMonth();\n    let Year = date.getFullYear();\n    let newMonth = new Date(Year, Month - 1);\n    setDate(new Date(newMonth));\n  };\n  const handleNextMonth = () => {\n    let Month = new Date(date).getMonth();\n    let Year = date.getFullYear();\n    let newMonth = new Date(Year, Month + 1);\n    setDate(new Date(newMonth));\n  };\n  return (\n    <div>\n      <NavBarMenu />\n    </div>\n  );\n};\n\nexport default YearlyContainer;\n","/home/george/Documents/Projects/budget-tracker/src/modules/stats/monthlyContainer/MonthlyContainer.tsx",["246","247","248","249","250","251","252"],"import React, { useEffect, useState } from \"react\";\nimport NavBarMenu from \"../../../layout/navBar/NavBar\";\nimport StatsForm from \"../components/statsForm/StatsForm\";\nimport \"../../../scss/variables.scss\";\nconst MonthlyContainer = () => {\n  const [date, setDate] = useState(new Date());\n  const [sumIncome, setSumIncome] = useState(0);\n  const [sumExpense, setSumExpense] = useState(0);\n\n  const data = [\n    {\n      category: \"food\",\n      value: 16900,\n      color: \"#E38627\",\n      label: \"category\",\n    },\n    { category: \"beauty\", value: 4000, color: \"red\", label: \"beauty\" },\n    { category: \"culture\", value: 45699, color: \"blue\", label: \"culture\" },\n  ];\n  return (\n    <div className=\"wrapper\">\n      <NavBarMenu />\n      <div className=\"stats_container\">\n        <StatsForm stats={data} isIncome={true} />\n        <StatsForm stats={data} isIncome={false} />\n      </div>\n    </div>\n  );\n};\n\nexport default MonthlyContainer;\n","/home/george/Documents/Projects/budget-tracker/src/modules/stats/weeklyContainer/WeeklyContainer.tsx",["253","254"],"import React, { useState } from \"react\";\nimport NavBarMenu from \"../../../layout/navBar/NavBar\";\n\nconst WeeklyContainer = () => {\n  const [date, setDate] = useState(new Date());\n\n  const handlePreviousMonth = () => {\n    let Month = new Date(date).getMonth();\n    let Year = date.getFullYear();\n    let newMonth = new Date(Year, Month - 1);\n    setDate(new Date(newMonth));\n  };\n  const handleNextMonth = () => {\n    let Month = new Date(date).getMonth();\n    let Year = date.getFullYear();\n    let newMonth = new Date(Year, Month + 1);\n    setDate(new Date(newMonth));\n  };\n  return (\n    <div>\n      <NavBarMenu />\n    </div>\n  );\n};\n\nexport default WeeklyContainer;\n","/home/george/Documents/Projects/budget-tracker/src/store/types.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/actionTypes.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/weeklyContainer/WeeklyTableRow.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/helpers/Variables.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/yearlyContainer/YearlyTableRow.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/helpers/Validation.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/monthlyContainer/Calendar.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/store/actions/usersActions.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/login/components/SocialNetworks.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/login/components/LoginForm.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/login/components/RegistrationForm.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/layout/navBar/NavBar.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/service/TransactionService.tsx",["255","256"],"import axios from \"axios\";\nimport {\n  Transaction,\n  TransactionReducer,\n} from \"../../../helpers/ITransactions\";\n\nlet config = {\n  headers: {\n    Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n  },\n};\n\nexport const createTransactionRequest = async (data: any) => {\n  const url = `http://localhost:5000/transaction/create`;\n\n  const request: any = {\n    method: \"POST\",\n    data,\n    headers: config.headers,\n    url,\n  };\n\n  try {\n    const response = await axios(request);\n    return response;\n  } catch (e) {\n    return { error: e };\n  }\n};\n\nexport const getSpecificDatePeriod = async (from: Date, to: Date) => {\n  const url = `http://localhost:5000/transaction/specificDatePeriod/${from}/${to}`;\n\n  const request: any = {\n    method: \"GET\",\n    headers: config.headers,\n    url,\n  };\n  try {\n    const response = await axios(request);\n    return response.data;\n  } catch (e) {\n    console.error(e);\n    return [];\n  }\n};\n\nexport const getYearlyOrWeekly = async (data: any) => {\n  const url = `http://localhost:5000/transaction/getYearlyOrWeekly`;\n\n  const request: any = {\n    method: \"POST\",\n    data,\n    headers: config.headers,\n    url,\n  };\n  try {\n    const response = await axios(request);\n    return response.data;\n  } catch (e) {\n    console.error(e);\n    return [];\n  }\n};\nexport const editTransaction = async (\n  selectedDayId: string,\n  transactionId: string,\n  data: any\n) => {\n  const url = `http://localhost:5000/transaction/event/edit/${selectedDayId}/${transactionId}`;\n\n  const request: any = {\n    method: \"PUT\",\n    data,\n    headers: config.headers,\n    url,\n  };\n\n  try {\n    const response = await axios(request);\n    return response;\n  } catch (e) {\n    return { error: e };\n  }\n};\nexport const deleteTransaction = async (\n  selectedDayId: string,\n  transactionId: string\n) => {\n  const url = `http://localhost:5000/transaction/event/delete/${selectedDayId}/${transactionId}`;\n\n  const request: any = {\n    method: \"PUT\",\n    data: {},\n    headers: config.headers,\n    url,\n  };\n\n  try {\n    const response = await axios(request);\n    return response;\n  } catch (e) {\n    return { error: e };\n  }\n};\n","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/actions/transactionActions.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/layout/sideBar/SideBar.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/AddTransactionModal.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/infoModal/InfoModal.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/dailyContainer/components/dailyTableRow/DailyTableRow.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/dailyContainer/components/dailyTableHeader/DailyTableHeader.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/Form.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/components/InputTitles.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/components/SelectInputs.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/components/AmountInput.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/components/FeesInput.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/stats/components/statsForm/StatsForm.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/infoTableHead/InfoTableHead.tsx",[],{"ruleId":"257","replacedBy":"258"},{"ruleId":"259","replacedBy":"260"},{"ruleId":"261","severity":1,"message":"262","line":15,"column":1,"nodeType":"263","endLine":31,"endColumn":2},{"ruleId":"261","severity":1,"message":"262","line":32,"column":1,"nodeType":"263","endLine":90,"endColumn":2},{"ruleId":"264","severity":1,"message":"265","line":24,"column":9,"nodeType":"266","messageId":"267","endLine":24,"endColumn":16},{"ruleId":"264","severity":1,"message":"268","line":110,"column":13,"nodeType":"266","messageId":"267","endLine":110,"endColumn":17},{"ruleId":"264","severity":1,"message":"269","line":5,"column":8,"nodeType":"266","messageId":"267","endLine":5,"endColumn":14},{"ruleId":"264","severity":1,"message":"270","line":5,"column":8,"nodeType":"266","messageId":"267","endLine":5,"endColumn":14},{"ruleId":"271","severity":1,"message":"272","line":128,"column":54,"nodeType":"273","messageId":"274","endLine":128,"endColumn":56},{"ruleId":"271","severity":1,"message":"272","line":188,"column":40,"nodeType":"273","messageId":"274","endLine":188,"endColumn":42},{"ruleId":"271","severity":1,"message":"272","line":214,"column":40,"nodeType":"273","messageId":"274","endLine":214,"endColumn":42},{"ruleId":"264","severity":1,"message":"275","line":7,"column":9,"nodeType":"266","messageId":"267","endLine":7,"endColumn":28},{"ruleId":"264","severity":1,"message":"276","line":13,"column":9,"nodeType":"266","messageId":"267","endLine":13,"endColumn":24},{"ruleId":"264","severity":1,"message":"277","line":1,"column":17,"nodeType":"266","messageId":"267","endLine":1,"endColumn":26},{"ruleId":"264","severity":1,"message":"268","line":6,"column":10,"nodeType":"266","messageId":"267","endLine":6,"endColumn":14},{"ruleId":"264","severity":1,"message":"278","line":6,"column":16,"nodeType":"266","messageId":"267","endLine":6,"endColumn":23},{"ruleId":"264","severity":1,"message":"279","line":7,"column":10,"nodeType":"266","messageId":"267","endLine":7,"endColumn":19},{"ruleId":"264","severity":1,"message":"280","line":7,"column":21,"nodeType":"266","messageId":"267","endLine":7,"endColumn":33},{"ruleId":"264","severity":1,"message":"281","line":8,"column":10,"nodeType":"266","messageId":"267","endLine":8,"endColumn":20},{"ruleId":"264","severity":1,"message":"282","line":8,"column":22,"nodeType":"266","messageId":"267","endLine":8,"endColumn":35},{"ruleId":"264","severity":1,"message":"275","line":7,"column":9,"nodeType":"266","messageId":"267","endLine":7,"endColumn":28},{"ruleId":"264","severity":1,"message":"276","line":13,"column":9,"nodeType":"266","messageId":"267","endLine":13,"endColumn":24},{"ruleId":"264","severity":1,"message":"283","line":3,"column":3,"nodeType":"266","messageId":"267","endLine":3,"endColumn":14},{"ruleId":"264","severity":1,"message":"284","line":4,"column":3,"nodeType":"266","messageId":"267","endLine":4,"endColumn":21},"no-native-reassign",["285"],"no-negated-in-lhs",["286"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","@typescript-eslint/no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","'date' is assigned a value but never used.","'Moment' is defined but never used.","'moment' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'handlePreviousMonth' is assigned a value but never used.","'handleNextMonth' is assigned a value but never used.","'useEffect' is defined but never used.","'setDate' is assigned a value but never used.","'sumIncome' is assigned a value but never used.","'setSumIncome' is assigned a value but never used.","'sumExpense' is assigned a value but never used.","'setSumExpense' is assigned a value but never used.","'Transaction' is defined but never used.","'TransactionReducer' is defined but never used.","no-global-assign","no-unsafe-negation"]