[{"/home/george/Documents/Projects/budget-tracker/src/index.tsx":"1","/home/george/Documents/Projects/budget-tracker/src/reportWebVitals.ts":"2","/home/george/Documents/Projects/budget-tracker/src/App.tsx":"3","/home/george/Documents/Projects/budget-tracker/src/desktop/store/store.tsx":"4","/home/george/Documents/Projects/budget-tracker/src/desktop/routes.tsx":"5","/home/george/Documents/Projects/budget-tracker/src/desktop/pages/transactionPage/WeeklyPage.tsx":"6","/home/george/Documents/Projects/budget-tracker/src/desktop/pages/transactionPage/DailyPage.tsx":"7","/home/george/Documents/Projects/budget-tracker/src/desktop/pages/loginPage/LoginPage.tsx":"8","/home/george/Documents/Projects/budget-tracker/src/desktop/pages/homePage/HomePage.tsx":"9","/home/george/Documents/Projects/budget-tracker/src/desktop/store/reducers/index.tsx":"10","/home/george/Documents/Projects/budget-tracker/src/desktop/store/reducers/userReducer.tsx":"11","/home/george/Documents/Projects/budget-tracker/src/desktop/layout/navBar/NavBar.tsx":"12","/home/george/Documents/Projects/budget-tracker/src/desktop/modules/transaction/weeklyContainer/WeeklyContainer.tsx":"13","/home/george/Documents/Projects/budget-tracker/src/desktop/modules/transaction/monthlyContainer/TransactionContainer.tsx":"14","/home/george/Documents/Projects/budget-tracker/src/desktop/modules/transaction/dailyContainer/DailyContainer.tsx":"15","/home/george/Documents/Projects/budget-tracker/src/desktop/modules/login/LoginContainer.tsx":"16","/home/george/Documents/Projects/budget-tracker/src/desktop/store/types.tsx":"17","/home/george/Documents/Projects/budget-tracker/src/desktop/layout/sideBar/SideBar.tsx":"18","/home/george/Documents/Projects/budget-tracker/src/desktop/modules/login/components/SocialNetworks.tsx":"19","/home/george/Documents/Projects/budget-tracker/src/desktop/modules/login/components/LoginForm.tsx":"20","/home/george/Documents/Projects/budget-tracker/src/desktop/modules/transaction/components/addTransactionModal/AddTransactionModal.tsx":"21","/home/george/Documents/Projects/budget-tracker/src/desktop/modules/login/components/RegistrationForm.tsx":"22","/home/george/Documents/Projects/budget-tracker/src/desktop/modules/transaction/components/navBar/NavBar.tsx":"23","/home/george/Documents/Projects/budget-tracker/src/desktop/modules/transaction/components/infoRow/InfoRow.tsx":"24","/home/george/Documents/Projects/budget-tracker/src/desktop/store/actions/usersActions.tsx":"25","/home/george/Documents/Projects/budget-tracker/src/desktop/modules/transaction/components/addTransactionModal/form/Form.tsx":"26","/home/george/Documents/Projects/budget-tracker/src/desktop/pages/transactionPage/YearlyPage.tsx":"27","/home/george/Documents/Projects/budget-tracker/src/desktop/modules/transaction/yearlyContainer/YearlyContainer.tsx":"28","/home/george/Documents/Projects/budget-tracker/src/desktop/pages/transactionPage/MonthlyPage.tsx":"29","/home/george/Documents/Projects/budget-tracker/src/desktop/modules/transaction/components/infoModal/InfoModal.tsx":"30"},{"size":630,"mtime":1610266103362,"results":"31","hashOfConfig":"32"},{"size":425,"mtime":1608638830636,"results":"33","hashOfConfig":"32"},{"size":188,"mtime":1608638830636,"results":"34","hashOfConfig":"32"},{"size":382,"mtime":1610266103362,"results":"35","hashOfConfig":"32"},{"size":1068,"mtime":1610279553766,"results":"36","hashOfConfig":"32"},{"size":304,"mtime":1610266103362,"results":"37","hashOfConfig":"32"},{"size":322,"mtime":1610266103362,"results":"38","hashOfConfig":"32"},{"size":228,"mtime":1608638830636,"results":"39","hashOfConfig":"32"},{"size":200,"mtime":1610266103362,"results":"40","hashOfConfig":"32"},{"size":141,"mtime":1610266103362,"results":"41","hashOfConfig":"32"},{"size":567,"mtime":1610266103362,"results":"42","hashOfConfig":"32"},{"size":1228,"mtime":1610266103358,"results":"43","hashOfConfig":"32"},{"size":4311,"mtime":1610479402907,"results":"44","hashOfConfig":"32"},{"size":11183,"mtime":1610474848180,"results":"45","hashOfConfig":"32"},{"size":4470,"mtime":1610481525872,"results":"46","hashOfConfig":"32"},{"size":4359,"mtime":1610266103358,"results":"47","hashOfConfig":"32"},{"size":68,"mtime":1610266103362,"results":"48","hashOfConfig":"32"},{"size":1135,"mtime":1610266103358,"results":"49","hashOfConfig":"32"},{"size":967,"mtime":1608638830636,"results":"50","hashOfConfig":"32"},{"size":1145,"mtime":1609431153124,"results":"51","hashOfConfig":"32"},{"size":3772,"mtime":1609431153124,"results":"52","hashOfConfig":"32"},{"size":1698,"mtime":1609431153124,"results":"53","hashOfConfig":"32"},{"size":2389,"mtime":1610481163632,"results":"54","hashOfConfig":"32"},{"size":809,"mtime":1610266103358,"results":"55","hashOfConfig":"32"},{"size":593,"mtime":1610266103362,"results":"56","hashOfConfig":"32"},{"size":5600,"mtime":1610396739789,"results":"57","hashOfConfig":"32"},{"size":322,"mtime":1610268030117,"results":"58","hashOfConfig":"32"},{"size":3890,"mtime":1610471275613,"results":"59","hashOfConfig":"32"},{"size":473,"mtime":1610285289835,"results":"60","hashOfConfig":"32"},{"size":2444,"mtime":1610472085842,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1me94a7",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"/home/george/Documents/Projects/budget-tracker/src/index.tsx",[],["127","128"],"/home/george/Documents/Projects/budget-tracker/src/reportWebVitals.ts",[],"/home/george/Documents/Projects/budget-tracker/src/App.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/store/store.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/routes.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/pages/transactionPage/WeeklyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/pages/transactionPage/DailyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/pages/loginPage/LoginPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/pages/homePage/HomePage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/store/reducers/index.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/store/reducers/userReducer.tsx",["129"],"import { SIGN_IN } from \"../types\";\n\nexport interface State {\n  user: {};\n  token: string;\n  loading: boolean;\n}\n\nconst initialState = {\n  user: {},\n  token: \"\",\n  loading: true,\n};\n\nexport default function (state = initialState, action: any) {\n  switch (action.type) {\n    case SIGN_IN:\n      if (action.payload.token) {\n        localStorage.setItem(\"jwt\", action.payload.token);\n      }\n\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n","/home/george/Documents/Projects/budget-tracker/src/desktop/layout/navBar/NavBar.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/modules/transaction/weeklyContainer/WeeklyContainer.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/modules/transaction/monthlyContainer/TransactionContainer.tsx",["130","131"],"import React from \"react\";\nimport Calendar from \"react-calendar\";\nimport TransactionStyl from \"./TransactionStyle.module.css\";\nimport AddTransactionModal from \"../components/addTransactionModal/AddTransactionModal\";\nimport NavBar from \"../components/navBar/NavBar\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport InfoModal from \"../components/infoModal/InfoModal\";\ntype Props = {\n  filters: any;\n};\nexport interface State {\n  isAddTransactionOpen: boolean;\n  isInfoTransactionOpen: boolean;\n\n  transaction: {\n    type: string;\n    date: any;\n    account?: string;\n    from?: string;\n    to?: string;\n    category?: string;\n    amount: string;\n    note: string;\n    description: string;\n  };\n  selectedDay: State[\"transaction\"][];\n\n  isTransfer: boolean;\n  errors: {\n    account?: string;\n    from?: string;\n    to?: string;\n    category?: string;\n    amount: string;\n  };\n  date: any;\n  specificDay: {\n    events: {\n      type: string;\n      date: any;\n      account?: string;\n      from?: string;\n      to?: string;\n      category?: string;\n      amount: string;\n      note: string;\n      description: string;\n    }[];\n  };\n  events: {\n    createdAt: any;\n    events: State[\"transaction\"];\n    income: number;\n    expense: number;\n  }[];\n}\nclass TransactionContainer extends React.Component<Props> {\n  constructor(props: any) {\n    super(props);\n  }\n  state: State = {\n    isInfoTransactionOpen: false,\n    isAddTransactionOpen: false,\n    date: new Date(),\n    isTransfer: false,\n    transaction: {\n      type: \"income\",\n      date: \"\",\n      account: \"\",\n      from: \"\",\n      category: \"\",\n      to: \"\",\n      amount: \"0\",\n      note: \"kkkkkkk\",\n      description: \"kkkkkkkkkk\",\n    },\n    selectedDay: [],\n\n    specificDay: {\n      events: [],\n    },\n    errors: {\n      account: \"\",\n      from: \"\",\n      category: \"\",\n      to: \"\",\n      amount: \"\",\n    },\n    events: [],\n  };\n\n  componentDidMount() {\n    if (this.props.filters.date) {\n      this.setState({\n        date: new Date(this.props.filters.date),\n      });\n      this.getTransactions(new Date(this.props.filters.date));\n    } else {\n      this.setState({\n        date: new Date(),\n      });\n      this.getTransactions(new Date());\n    }\n  }\n\n  getTransactions = (date: any) => {\n    let firstDay=moment(date).startOf('month').startOf('week').get('date')\n    let firstMonth=moment(date).startOf('month').startOf('week').get('month')\n    let firstYear=moment(date).startOf('month').startOf('week').get(\"year\")\n    let lastDay=moment(date).endOf('month').endOf('week').get('date')\n    let lastMonth=moment(date).endOf('month').endOf('week').get('month')\n    let lastYear=moment(date).endOf('month').endOf('week').get(\"year\")\n\n    let from = moment(\n      new Date(firstYear, firstMonth, firstDay)\n    ).toISOString();\n    let to = moment(\n      new Date(lastYear, lastMonth, lastDay)\n    ).toISOString();\n    let config = {\n      headers: {\n        Authorization:\n          \"Bearer \" +\n          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVmZjRjZjcyMDIwNTM5MmM3MGU5MmJlZiIsImlhdCI6MTYxMDIyNzAwOH0.bL8WKWjEe1NP2-07udR7ORGkraoavQZEyjtOUd9-5Po\",\n      },\n    };\n    axios\n      .get(\n        `http://localhost:5000/transaction/specificDatePeriod/${from}/${to}`,\n        config\n      )\n      .then((data) => {\n        this.setState({ events: data.data });\n      });\n  };\n  validateForm = (value: State[\"transaction\"]) => {\n    let errors = {\n      account: \"\",\n      from: \"\",\n      category: \"\",\n      to: \"\",\n      amount: \"\",\n    };\n\n    if (value.account === \"\" && !(value.type === \"transfer\")) {\n      errors.account = \"Please select a account\";\n    }\n    if (value.type === \"transfer\" && value.from === \"\") {\n      errors.from = \"Please select  from\";\n    }\n    if (value.category === \"\" && !(value.type === \"transfer\")) {\n      errors.category = \"Please select a category\";\n    }\n    if (value.type === \"transfer\" && value.to === \"\") {\n      errors.to = \"Please select  to\";\n    }\n    if (value.amount === \"\") {\n      errors.amount = \"Please select a amount\";\n    }\n    return errors;\n  };\n  handleNextMonth = () => {\n    let Month = new Date(this.state.date).getMonth();\n    let Year = this.state.date.getFullYear();\n    let newMonth = new Date(Year, Month + 1);\n    this.setState({\n      date: new Date(newMonth),\n    });\n    this.getTransactions(new Date(newMonth));\n  };\n  handlePreviousMonth = () => {\n    let Month = new Date(this.state.date).getMonth();\n    let Year = this.state.date.getFullYear();\n    let newMonth = new Date(Year, Month - 1);\n    this.setState({\n      date: new Date(newMonth),\n    });\n    this.getTransactions(new Date(newMonth));\n  };\n  handleOpenTransaction = (date: any) => {\n    if (this.state.isAddTransactionOpen) {\n      this.setState({\n        isAddTransactionOpen: false,\n      });\n    } else {\n      this.setState({\n        isAddTransactionOpen: true,\n      });\n    }\n  };\n  handleOpenInfoModal = (date: any) => {\n    if (this.state.isInfoTransactionOpen) {\n      this.setState({\n        isInfoTransactionOpen: false,\n        selectedDay: [],\n      });\n    } else {\n      this.state.events.map((event) => {\n        if (new Date(date).getDate() === new Date(event.createdAt).getDate()) {\n          this.setState({\n            selectedDay: event.events,\n          });\n        }\n      });\n      this.setState({\n        isInfoTransactionOpen: true,\n        transaction: { ...this.state.transaction, date: new Date(date) },\n      });\n    }\n  };\n  handleInputChange = (event: any) => {\n    this.setState({\n      ...this.state,\n      transaction: {\n        ...this.state.transaction,\n        [event.target.name]: event.target.value,\n      },\n    });\n  };\n\n  handleSave = () => {\n    const { transaction } = this.state;\n    const errors = this.validateForm(transaction);\n    const isValid = Object.values(errors).filter(Boolean).length <= 0;\n\n    if (!isValid) {\n      this.setState({ errors: errors });\n      return;\n    } else {\n      this.setState({ ...this.state, errors: {} });\n    }\n    let incomeOrExpense = {\n      events: [\n        {\n          type: transaction.type.toLowerCase(),\n          currency: \"BG\",\n          date: new Date(\n            new Date(transaction.date).setHours(16, 33, 22)\n          ).toISOString(),\n          account: transaction.account,\n          category: transaction.category,\n          amount: parseFloat(transaction.amount) * 100,\n          note: transaction.note,\n          description: transaction.description,\n        },\n      ],\n      createdAt: new Date(\n        new Date(transaction.date).setHours(0o0, 0o0, 0o0)\n      ).toISOString(),\n    };\n\n    let transfer = {\n      events: [\n        {\n          type: transaction.type.toLowerCase(),\n          currency: \"BG\",\n          date: new Date(\n            new Date(transaction.date).setHours(13, 21, 30)\n          ).toISOString(),\n          from: transaction.from,\n          to: transaction.to,\n          amount: parseFloat(transaction.amount) * 100,\n          note: transaction.note,\n          description: transaction.description,\n        },\n      ],\n      createdAt: new Date(\n        new Date(transaction.date).setHours(0o0, 0o0, 0o0)\n      ).toISOString(),\n    };\n\n    let config = {\n      headers: {\n        Authorization:\n          \"Bearer \" +\n          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVmZjRjZjcyMDIwNTM5MmM3MGU5MmJlZiIsImlhdCI6MTYxMDIyNzAwOH0.bL8WKWjEe1NP2-07udR7ORGkraoavQZEyjtOUd9-5Po\",\n      },\n    };\n\n    if (transaction.type === \"transfer\") {\n      axios\n        .post(`http://localhost:5000/transaction/create`, transfer, config)\n        .then(() => {\n          this.getTransactions(transaction.date);\n          this.setState({\n            isAddTransactionOpen: false,\n            transaction: {\n              type: \"income\",\n              date: \"\",\n              account: \"\",\n              from: \"\",\n              category: \"\",\n              to: \"\",\n              amount: \"0\",\n              note: \"kkkkkkk\",\n              description: \"kkkkkkkkkk\",\n            },\n          });\n        });\n    } else {\n      axios\n        .post(\n          `http://localhost:5000/transaction/create`,\n          incomeOrExpense,\n          config\n        )\n        .then(() => {\n          this.getTransactions(transaction.date);\n          this.setState({\n            isAddTransactionOpen: false,\n            transaction: {\n              type: \"income\",\n              date: \"\",\n              account: \"\",\n              from: \"\",\n              category: \"\",\n              to: \"\",\n              amount: \"0\",\n              note: \"kkkkkkk\",\n              description: \"kkkkkkkkkk\",\n            },\n          });\n        });\n    }\n  };\n\n  handleGetSpecificDay = async (event: any) => {\n    await this.setState({ specificDay: event });\n  };\n\n  handleSetEvent = (date: any, view: any) => {\n    return (\n      <div>\n        {this.state.events.map((event) => (\n          <div onClick={() => this.handleGetSpecificDay(event)}>\n            {view === \"month\" &&\n            date.getDate() === new Date(event.createdAt).getDate() &&\n            date.getMonth() === new Date(event.createdAt).getMonth() &&\n            date.getFullYear() === new Date(event.createdAt).getFullYear() ? (\n              <div className={TransactionStyl.content_day}>\n                <div className={TransactionStyl.income}>\n                  ${(event.income / 100).toFixed(2)}\n                </div>\n                <div className={TransactionStyl.expense}>\n                  ${(event.expense / 100).toFixed(2)}\n                </div>\n              </div>\n            ) : null}\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  render() {\n    const {\n      isAddTransactionOpen,\n      transaction,\n      errors,\n      isTransfer,\n      isInfoTransactionOpen,\n      specificDay,\n      selectedDay,\n    } = this.state;\n    return (\n      <div className={TransactionStyl.wrapper}>\n        <NavBar\n          handlePreviousMonth={this.handlePreviousMonth}\n          handleNextMonth={this.handleNextMonth}\n          date={this.state.date}\n        />\n        <div className={TransactionStyl.container}>\n          <Calendar\n            activeStartDate={this.state.date}\n            // onChange={(date) => console.log(date)}\n            className={TransactionStyl.calendar}\n            onClickDay={(date) => this.handleOpenInfoModal(date)}\n            showNavigation={false}\n            tileContent={({ date, view }) => this.handleSetEvent(date, view)}\n          />\n        </div>\n        <InfoModal\n          selectedDay={selectedDay}\n          specificDay={specificDay}\n          transaction={transaction}\n          isInfoTransactionOpen={isInfoTransactionOpen}\n          handleOpenTransaction={this.handleOpenTransaction}\n          handleOpenInfoModal={this.handleOpenInfoModal}\n        />\n        <AddTransactionModal\n          handleOpenTransaction={this.handleOpenTransaction}\n          isTransfer={isTransfer}\n          isAddTransactionOpen={isAddTransactionOpen}\n          transaction={transaction}\n          handleInputChange={this.handleInputChange}\n          errors={errors}\n          handleSave={this.handleSave}\n        />\n      </div>\n    );\n  }\n}\n\nexport default TransactionContainer;\n","/home/george/Documents/Projects/budget-tracker/src/desktop/modules/transaction/dailyContainer/DailyContainer.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/modules/login/LoginContainer.tsx",["132"],"import React, { useState } from \"react\";\nimport LoginContainerStyle from \"./LoginContainerStyle.module.css\";\nimport LoginForm from \"./components/LoginForm\";\nimport RegistrationForm from \"./components/RegistrationForm\";\nimport SocialNetworks from \"./components/SocialNetworks\";\nimport { Tabs, TabList, TabPanel, Tab } from \"react-tabs\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { State } from \"../../store/reducers/userReducer\";\nimport { singIn } from \"../../store/actions/usersActions\";\nimport axios from \"axios\";\nimport { sign } from \"crypto\";\n\nconst LoginContainer = () => {\n  // const [isLogin, setIsLogin] = useState(true);\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n  const history = useHistory();\n\n  const qE = useSelector((state: State) => state.user);\n\n  const dispatch = useDispatch();\n\n  const [errors, setErrors] = useState({\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  const handleInputChange = (e: any) =>\n    setUser({\n      ...user,\n      [e.currentTarget.name]: e.currentTarget.value,\n    });\n\n  // const handleChoose = () => {\n  //   if (isLogin) {\n  //     setIsLogin(false);\n  //     setErrors({ email: \"\", password: \"\", confirmPassword: \"\" });\n  //   } else {\n  //     setIsLogin(true);\n  //     setErrors({ email: \"\", password: \"\", confirmPassword: \"\" });\n  //   }\n  // };\n  const validateForm = () => {\n    const isValidEmail = RegExp(\n      \"[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\"\n    );\n    let errors = {\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n    };\n\n    if (!isValidEmail.test(user.email)) {\n      errors.email = \"Please enter a valid email.\";\n    }\n    // if (\n    //   user.password !== user.confirmPassword ||\n    //   !user.password.match(/^[0-9a-zA-Z]+$/) ||\n    //   user.password.length > 20 ||\n    //   user.password.length < 6\n    // ) {\n    //   errors.confirmPassword = \"The password does not match. \";\n    // }\n    if (\n      !user.password.match(/^[0-9a-zA-Z]+$/) ||\n      user.password.length > 20 ||\n      user.password.length < 6\n    ) {\n      errors.password = \"Please enter 6-20 characters [A-Z, a-z, 0-9 only].\";\n    }\n\n    return errors;\n  };\n  const handleLogin = async () => {\n    const errors = validateForm();\n\n    const isValid = Object.values(errors).filter(Boolean).length <= 0;\n\n    if (!isValid) {\n      setErrors({\n        email: errors.email,\n        password: errors.password,\n        confirmPassword: errors.confirmPassword,\n      });\n      return;\n    } else {\n      // dispatch(singIn(user));\n\n      let loggedUser = await axios.post(`http://localhost:5000/signIn`, user);\n\n      if (loggedUser.data.user) {\n        dispatch(singIn(loggedUser.data));\n        history.push(\"./transaction/monthly\");\n      }\n\n      setErrors({ email: \"\", password: \"\", confirmPassword: \"\" });\n    }\n  };\n  const handleRegister = () => {\n    const errors = validateForm();\n    const isValid = Object.values(errors).filter(Boolean).length <= 0;\n\n    if (!isValid) {\n      setErrors({\n        email: errors.email,\n        password: errors.password,\n        confirmPassword: errors.confirmPassword,\n      });\n      return;\n    } else {\n      setErrors({ email: \"\", password: \"\", confirmPassword: \"\" });\n    }\n  };\n  return (\n    <div className={LoginContainerStyle.container}>\n      <div className={LoginContainerStyle.login_form}>\n        {console.log(qE)}\n        <Tabs selectedTabClassName={LoginContainerStyle.selected_tab}>\n          <TabList className={LoginContainerStyle.tab_list}>\n            <Tab className={LoginContainerStyle.tab}>Sign In</Tab>\n            <Tab className={LoginContainerStyle.tab}>Register</Tab>\n          </TabList>\n          <TabPanel>\n            <LoginForm\n              Submit={handleLogin}\n              errors={errors}\n              handleInput={handleInputChange}\n            />\n          </TabPanel>\n          <TabPanel>\n            <RegistrationForm\n              Submit={handleRegister}\n              errors={errors}\n              handleInput={handleInputChange}\n            />\n          </TabPanel>\n        </Tabs>\n        <SocialNetworks />\n      </div>\n    </div>\n  );\n};\n\nexport default LoginContainer;\n","/home/george/Documents/Projects/budget-tracker/src/desktop/store/types.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/layout/sideBar/SideBar.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/modules/login/components/SocialNetworks.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/modules/login/components/LoginForm.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/modules/transaction/components/addTransactionModal/AddTransactionModal.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/modules/login/components/RegistrationForm.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/modules/transaction/components/navBar/NavBar.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/modules/transaction/components/infoRow/InfoRow.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/store/actions/usersActions.tsx",["133","134","135"],"import { useHistory } from \"react-router-dom\";\n\nimport { SIGN_IN } from \"../types\";\nimport axios from \"axios\";\n\ninterface User {\n  email: string;\n  password: string;\n}\n\nexport const singIn = (user: {\n  email: string;\n  password: string;\n  categories: [];\n  createdAt: string;\n  username: string;\n  updatedAt: string;\n  type: string;\n  id: string;\n}) => async (dispatch: any) => {\n  try {\n    await dispatch({\n      type: SIGN_IN,\n      payload: user,\n    });\n  } catch (e) {\n    console.log(e);\n    // dispatch({\n    //   type: USERS_ERROR,\n    //   payload: console.log(e),\n    // });\n  }\n};\n","/home/george/Documents/Projects/budget-tracker/src/desktop/modules/transaction/components/addTransactionModal/form/Form.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/pages/transactionPage/YearlyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/modules/transaction/yearlyContainer/YearlyContainer.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/pages/transactionPage/MonthlyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/desktop/modules/transaction/components/infoModal/InfoModal.tsx",[],{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":15,"column":1,"nodeType":"142","endLine":31,"endColumn":2},{"ruleId":"143","severity":1,"message":"144","line":59,"column":3,"nodeType":"145","messageId":"146","endLine":61,"endColumn":4},{"ruleId":"147","severity":1,"message":"148","line":199,"column":37,"nodeType":"149","messageId":"150","endLine":199,"endColumn":39},{"ruleId":"151","severity":1,"message":"152","line":12,"column":10,"nodeType":"153","messageId":"154","endLine":12,"endColumn":14},{"ruleId":"151","severity":1,"message":"155","line":1,"column":10,"nodeType":"153","messageId":"154","endLine":1,"endColumn":20},{"ruleId":"151","severity":1,"message":"156","line":4,"column":8,"nodeType":"153","messageId":"154","endLine":4,"endColumn":13},{"ruleId":"151","severity":1,"message":"157","line":6,"column":11,"nodeType":"153","messageId":"154","endLine":6,"endColumn":15},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","@typescript-eslint/no-unused-vars","'sign' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'axios' is defined but never used.","'User' is defined but never used.","no-global-assign","no-unsafe-negation"]