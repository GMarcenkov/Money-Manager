[{"/home/niksan/Desktop/Projects/budget-tracker/src/index.tsx":"1","/home/niksan/Desktop/Projects/budget-tracker/src/reportWebVitals.ts":"2","/home/niksan/Desktop/Projects/budget-tracker/src/App.tsx":"3","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/store/store.tsx":"4","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/routes.tsx":"5","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/store/reducers/index.tsx":"6","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/pages/loginPage/LoginPage.tsx":"7","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/pages/transactionPage/DailyPage.tsx":"8","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/pages/transactionPage/WeeklyPage.tsx":"9","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/pages/transactionPage/YearlyPage.tsx":"10","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/pages/transactionPage/MonthlyPage.tsx":"11","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/pages/homePage/HomePage.tsx":"12","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/store/reducers/userReducer.tsx":"13","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/login/LoginContainer.tsx":"14","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/layout/navBar/NavBar.tsx":"15","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/transaction/weeklyContainer/WeeklyContainer.tsx":"16","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/transaction/dailyContainer/DailyContainer.tsx":"17","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/transaction/yearlyContainer/YearlyContainer.tsx":"18","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/transaction/monthlyContainer/TransactionContainer.tsx":"19","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/store/types.tsx":"20","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/login/components/LoginForm.tsx":"21","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/login/components/SocialNetworks.tsx":"22","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/store/actions/usersActions.tsx":"23","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/login/components/RegistrationForm.tsx":"24","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/layout/sideBar/SideBar.tsx":"25","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/transaction/components/navBar/NavBar.tsx":"26","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/transaction/components/infoModal/InfoModal.tsx":"27","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/transaction/components/infoRow/InfoRow.tsx":"28","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/transaction/components/addTransactionModal/AddTransactionModal.tsx":"29","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/transaction/components/addTransactionModal/form/Form.tsx":"30"},{"size":630,"mtime":1610149069435,"results":"31","hashOfConfig":"32"},{"size":425,"mtime":1608110400809,"results":"33","hashOfConfig":"32"},{"size":188,"mtime":1608455000758,"results":"34","hashOfConfig":"32"},{"size":382,"mtime":1610149069435,"results":"35","hashOfConfig":"32"},{"size":1068,"mtime":1610291133375,"results":"36","hashOfConfig":"32"},{"size":141,"mtime":1610149069435,"results":"37","hashOfConfig":"32"},{"size":228,"mtime":1608455000758,"results":"38","hashOfConfig":"32"},{"size":322,"mtime":1610149069435,"results":"39","hashOfConfig":"32"},{"size":304,"mtime":1609878797853,"results":"40","hashOfConfig":"32"},{"size":322,"mtime":1610291133375,"results":"41","hashOfConfig":"32"},{"size":473,"mtime":1610291133375,"results":"42","hashOfConfig":"32"},{"size":200,"mtime":1609878818685,"results":"43","hashOfConfig":"32"},{"size":567,"mtime":1610150607018,"results":"44","hashOfConfig":"32"},{"size":4328,"mtime":1610487446968,"results":"45","hashOfConfig":"32"},{"size":1228,"mtime":1609878818685,"results":"46","hashOfConfig":"32"},{"size":4599,"mtime":1610487417988,"results":"47","hashOfConfig":"32"},{"size":4941,"mtime":1610487395744,"results":"48","hashOfConfig":"32"},{"size":4130,"mtime":1610487408840,"results":"49","hashOfConfig":"32"},{"size":11196,"mtime":1610487268681,"results":"50","hashOfConfig":"32"},{"size":68,"mtime":1610149069435,"results":"51","hashOfConfig":"32"},{"size":1145,"mtime":1609431288621,"results":"52","hashOfConfig":"32"},{"size":967,"mtime":1608455000758,"results":"53","hashOfConfig":"32"},{"size":461,"mtime":1610487472683,"results":"54","hashOfConfig":"32"},{"size":1698,"mtime":1609431288621,"results":"55","hashOfConfig":"32"},{"size":1135,"mtime":1609878818685,"results":"56","hashOfConfig":"32"},{"size":2389,"mtime":1610481911859,"results":"57","hashOfConfig":"32"},{"size":2444,"mtime":1610467175221,"results":"58","hashOfConfig":"32"},{"size":944,"mtime":1610487268681,"results":"59","hashOfConfig":"32"},{"size":3772,"mtime":1610397290407,"results":"60","hashOfConfig":"32"},{"size":5600,"mtime":1610397301607,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1eorvxk",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/niksan/Desktop/Projects/budget-tracker/src/index.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/reportWebVitals.ts",[],"/home/niksan/Desktop/Projects/budget-tracker/src/App.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/store/store.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/routes.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/store/reducers/index.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/pages/loginPage/LoginPage.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/pages/transactionPage/DailyPage.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/pages/transactionPage/WeeklyPage.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/pages/transactionPage/YearlyPage.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/pages/transactionPage/MonthlyPage.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/pages/homePage/HomePage.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/store/reducers/userReducer.tsx",["124"],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/login/LoginContainer.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/layout/navBar/NavBar.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/transaction/weeklyContainer/WeeklyContainer.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/transaction/dailyContainer/DailyContainer.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/transaction/yearlyContainer/YearlyContainer.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/transaction/monthlyContainer/TransactionContainer.tsx",["125","126"],"import React from \"react\";\nimport Calendar from \"react-calendar\";\nimport TransactionStyl from \"./TransactionStyle.module.css\";\nimport AddTransactionModal from \"../components/addTransactionModal/AddTransactionModal\";\nimport NavBar from \"../components/navBar/NavBar\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport InfoModal from \"../components/infoModal/InfoModal\";\ntype Props = {\n  filters: any;\n};\nexport interface State {\n  isAddTransactionOpen: boolean;\n  isInfoTransactionOpen: boolean;\n\n  transaction: {\n    type: string;\n    date: any;\n    account?: string;\n    from?: string;\n    to?: string;\n    category?: string;\n    amount: string;\n    note: string;\n    description: string;\n  };\n  selectedDay: State[\"transaction\"][];\n\n  isTransfer: boolean;\n  errors: {\n    account?: string;\n    from?: string;\n    to?: string;\n    category?: string;\n    amount: string;\n  };\n  date: any;\n  specificDay: {\n    events: {\n      type: string;\n      date: any;\n      account?: string;\n      from?: string;\n      to?: string;\n      category?: string;\n      amount: string;\n      note: string;\n      description: string;\n    }[];\n  };\n  events: {\n    createdAt: any;\n    events: State[\"transaction\"];\n    income: number;\n    expense: number;\n  }[];\n}\nclass TransactionContainer extends React.Component<Props> {\n  constructor(props: any) {\n    super(props);\n  }\n  state: State = {\n    isInfoTransactionOpen: false,\n    isAddTransactionOpen: false,\n    date: new Date(),\n    isTransfer: false,\n    transaction: {\n      type: \"income\",\n      date: \"\",\n      account: \"\",\n      from: \"\",\n      category: \"\",\n      to: \"\",\n      amount: \"0\",\n      note: \"kkkkkkk\",\n      description: \"kkkkkkkkkk\",\n    },\n    selectedDay: [],\n\n    specificDay: {\n      events: [],\n    },\n    errors: {\n      account: \"\",\n      from: \"\",\n      category: \"\",\n      to: \"\",\n      amount: \"\",\n    },\n    events: [],\n  };\n\n  componentDidMount() {\n    if (this.props.filters.date) {\n      this.setState({\n        date: new Date(this.props.filters.date),\n      });\n      this.getTransactions(new Date(this.props.filters.date));\n    } else {\n      this.setState({\n        date: new Date(),\n      });\n      this.getTransactions(new Date());\n    }\n  }\n\n  getTransactions = (date: any) => {\n    let firstDay=moment(date).startOf('month').startOf('week').get('date')\n    let firstMonth=moment(date).startOf('month').startOf('week').get('month')\n    let firstYear=moment(date).startOf('month').startOf('week').get(\"year\")\n    let lastDay=moment(date).endOf('month').endOf('week').get('date')\n    let lastMonth=moment(date).endOf('month').endOf('week').get('month')\n    let lastYear=moment(date).endOf('month').endOf('week').get(\"year\")\n\n    let from = moment(\n      new Date(firstYear, firstMonth, firstDay)\n    ).toISOString();\n    let to = moment(\n      new Date(lastYear, lastMonth, lastDay)\n    ).toISOString();\n    let config = {\n      headers: {\n        Authorization:\n          \"Bearer \" +\n          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVmZjRjZjcyMDIwNTM5MmM3MGU5MmJlZiIsImlhdCI6MTYxMDIyNzAwOH0.bL8WKWjEe1NP2-07udR7ORGkraoavQZEyjtOUd9-5Po\",\n      },\n    };\n    axios\n      .get(\n        `http://localhost:5000/transaction/specificDatePeriod/${from}/${to}`,\n        config\n      )\n      .then((data) => {\n        this.setState({ events: data.data.transactions });\n      });\n  };\n  validateForm = (value: State[\"transaction\"]) => {\n    let errors = {\n      account: \"\",\n      from: \"\",\n      category: \"\",\n      to: \"\",\n      amount: \"\",\n    };\n\n    if (value.account === \"\" && !(value.type === \"transfer\")) {\n      errors.account = \"Please select a account\";\n    }\n    if (value.type === \"transfer\" && value.from === \"\") {\n      errors.from = \"Please select  from\";\n    }\n    if (value.category === \"\" && !(value.type === \"transfer\")) {\n      errors.category = \"Please select a category\";\n    }\n    if (value.type === \"transfer\" && value.to === \"\") {\n      errors.to = \"Please select  to\";\n    }\n    if (value.amount === \"\") {\n      errors.amount = \"Please select a amount\";\n    }\n    return errors;\n  };\n  handleNextMonth = () => {\n    let Month = new Date(this.state.date).getMonth();\n    let Year = this.state.date.getFullYear();\n    let newMonth = new Date(Year, Month + 1);\n    this.setState({\n      date: new Date(newMonth),\n    });\n    this.getTransactions(new Date(newMonth));\n  };\n  handlePreviousMonth = () => {\n    let Month = new Date(this.state.date).getMonth();\n    let Year = this.state.date.getFullYear();\n    let newMonth = new Date(Year, Month - 1);\n    this.setState({\n      date: new Date(newMonth),\n    });\n    this.getTransactions(new Date(newMonth));\n  };\n  handleOpenTransaction = (date: any) => {\n    if (this.state.isAddTransactionOpen) {\n      this.setState({\n        isAddTransactionOpen: false,\n      });\n    } else {\n      this.setState({\n        isAddTransactionOpen: true,\n      });\n    }\n  };\n  handleOpenInfoModal = (date: any) => {\n    if (this.state.isInfoTransactionOpen) {\n      this.setState({\n        isInfoTransactionOpen: false,\n        selectedDay: [],\n      });\n    } else {\n      this.state.events.map((event) => {\n        if (new Date(date).getDate() === new Date(event.createdAt).getDate()) {\n          this.setState({\n            selectedDay: event.events,\n          });\n        }\n      });\n      this.setState({\n        isInfoTransactionOpen: true,\n        transaction: { ...this.state.transaction, date: new Date(date) },\n      });\n    }\n  };\n  handleInputChange = (event: any) => {\n    this.setState({\n      ...this.state,\n      transaction: {\n        ...this.state.transaction,\n        [event.target.name]: event.target.value,\n      },\n    });\n  };\n\n  handleSave = () => {\n    const { transaction } = this.state;\n    const errors = this.validateForm(transaction);\n    const isValid = Object.values(errors).filter(Boolean).length <= 0;\n\n    if (!isValid) {\n      this.setState({ errors: errors });\n      return;\n    } else {\n      this.setState({ ...this.state, errors: {} });\n    }\n    let incomeOrExpense = {\n      events: [\n        {\n          type: transaction.type.toLowerCase(),\n          currency: \"BG\",\n          date: new Date(\n            new Date(transaction.date).setHours(16, 33, 22)\n          ).toISOString(),\n          account: transaction.account,\n          category: transaction.category,\n          amount: parseFloat(transaction.amount) * 100,\n          note: transaction.note,\n          description: transaction.description,\n        },\n      ],\n      createdAt: new Date(\n        new Date(transaction.date).setHours(0o0, 0o0, 0o0)\n      ).toISOString(),\n    };\n\n    let transfer = {\n      events: [\n        {\n          type: transaction.type.toLowerCase(),\n          currency: \"BG\",\n          date: new Date(\n            new Date(transaction.date).setHours(13, 21, 30)\n          ).toISOString(),\n          from: transaction.from,\n          to: transaction.to,\n          amount: parseFloat(transaction.amount) * 100,\n          note: transaction.note,\n          description: transaction.description,\n        },\n      ],\n      createdAt: new Date(\n        new Date(transaction.date).setHours(0o0, 0o0, 0o0)\n      ).toISOString(),\n    };\n\n    let config = {\n      headers: {\n        Authorization:\n          \"Bearer \" +\n          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVmZjRjZjcyMDIwNTM5MmM3MGU5MmJlZiIsImlhdCI6MTYxMDIyNzAwOH0.bL8WKWjEe1NP2-07udR7ORGkraoavQZEyjtOUd9-5Po\",\n      },\n    };\n\n    if (transaction.type === \"transfer\") {\n      axios\n        .post(`http://localhost:5000/transaction/create`, transfer, config)\n        .then(() => {\n          this.getTransactions(transaction.date);\n          this.setState({\n            isAddTransactionOpen: false,\n            transaction: {\n              type: \"income\",\n              date: \"\",\n              account: \"\",\n              from: \"\",\n              category: \"\",\n              to: \"\",\n              amount: \"0\",\n              note: \"kkkkkkk\",\n              description: \"kkkkkkkkkk\",\n            },\n          });\n        });\n    } else {\n      axios\n        .post(\n          `http://localhost:5000/transaction/create`,\n          incomeOrExpense,\n          config\n        )\n        .then(() => {\n          this.getTransactions(transaction.date);\n          this.setState({\n            isAddTransactionOpen: false,\n            transaction: {\n              type: \"income\",\n              date: \"\",\n              account: \"\",\n              from: \"\",\n              category: \"\",\n              to: \"\",\n              amount: \"0\",\n              note: \"kkkkkkk\",\n              description: \"kkkkkkkkkk\",\n            },\n          });\n        });\n    }\n  };\n\n  handleGetSpecificDay = async (event: any) => {\n    await this.setState({ specificDay: event });\n  };\n\n  handleSetEvent = (date: any, view: any) => {\n    return (\n      <div>\n        {this.state.events.map((event) => (\n          <div onClick={() => this.handleGetSpecificDay(event)}>\n            {view === \"month\" &&\n            date.getDate() === new Date(event.createdAt).getDate() &&\n            date.getMonth() === new Date(event.createdAt).getMonth() &&\n            date.getFullYear() === new Date(event.createdAt).getFullYear() ? (\n              <div className={TransactionStyl.content_day}>\n                <div className={TransactionStyl.income}>\n                  ${(event.income / 100).toFixed(2)}\n                </div>\n                <div className={TransactionStyl.expense}>\n                  ${(event.expense / 100).toFixed(2)}\n                </div>\n              </div>\n            ) : null}\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  render() {\n    const {\n      isAddTransactionOpen,\n      transaction,\n      errors,\n      isTransfer,\n      isInfoTransactionOpen,\n      specificDay,\n      selectedDay,\n    } = this.state;\n    return (\n      <div className={TransactionStyl.wrapper}>\n        <NavBar\n          handlePreviousMonth={this.handlePreviousMonth}\n          handleNextMonth={this.handleNextMonth}\n          date={this.state.date}\n        />\n        <div className={TransactionStyl.container}>\n          <Calendar\n            activeStartDate={this.state.date}\n            // onChange={(date) => console.log(date)}\n            className={TransactionStyl.calendar}\n            onClickDay={(date) => this.handleOpenInfoModal(date)}\n            showNavigation={false}\n            tileContent={({ date, view }) => this.handleSetEvent(date, view)}\n          />\n        </div>\n        <InfoModal\n          selectedDay={selectedDay}\n          specificDay={specificDay}\n          transaction={transaction}\n          isInfoTransactionOpen={isInfoTransactionOpen}\n          handleOpenTransaction={this.handleOpenTransaction}\n          handleOpenInfoModal={this.handleOpenInfoModal}\n        />\n        <AddTransactionModal\n          handleOpenTransaction={this.handleOpenTransaction}\n          isTransfer={isTransfer}\n          isAddTransactionOpen={isAddTransactionOpen}\n          transaction={transaction}\n          handleInputChange={this.handleInputChange}\n          errors={errors}\n          handleSave={this.handleSave}\n        />\n      </div>\n    );\n  }\n}\n\nexport default TransactionContainer;\n",["127","128"],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/store/types.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/login/components/LoginForm.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/login/components/SocialNetworks.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/store/actions/usersActions.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/login/components/RegistrationForm.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/layout/sideBar/SideBar.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/transaction/components/navBar/NavBar.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/transaction/components/infoModal/InfoModal.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/transaction/components/infoRow/InfoRow.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/transaction/components/addTransactionModal/AddTransactionModal.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/transaction/components/addTransactionModal/form/Form.tsx",[],{"ruleId":"129","severity":1,"message":"130","line":15,"column":1,"nodeType":"131","endLine":31,"endColumn":2},{"ruleId":"132","severity":1,"message":"133","line":59,"column":3,"nodeType":"134","messageId":"135","endLine":61,"endColumn":4},{"ruleId":"136","severity":1,"message":"137","line":199,"column":37,"nodeType":"138","messageId":"139","endLine":199,"endColumn":39},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-native-reassign",["144"],"no-negated-in-lhs",["145"],"no-global-assign","no-unsafe-negation"]