[{"/home/george/Documents/Projects/budget-tracker/src/index.tsx":"1","/home/george/Documents/Projects/budget-tracker/src/reportWebVitals.ts":"2","/home/george/Documents/Projects/budget-tracker/src/App.tsx":"3","/home/george/Documents/Projects/budget-tracker/src/routes.tsx":"4","/home/george/Documents/Projects/budget-tracker/src/helpers/AuthRoute.tsx":"5","/home/george/Documents/Projects/budget-tracker/src/pages/loginPage/LoginPage.tsx":"6","/home/george/Documents/Projects/budget-tracker/src/pages/transactionPage/WeeklyPage.tsx":"7","/home/george/Documents/Projects/budget-tracker/src/pages/transactionPage/DailyPage.tsx":"8","/home/george/Documents/Projects/budget-tracker/src/pages/transactionPage/MonthlyPage.tsx":"9","/home/george/Documents/Projects/budget-tracker/src/pages/transactionPage/YearlyPage.tsx":"10","/home/george/Documents/Projects/budget-tracker/src/pages/homePage/HomePage.tsx":"11","/home/george/Documents/Projects/budget-tracker/src/pages/statsPage/WeeklyPage.tsx":"12","/home/george/Documents/Projects/budget-tracker/src/pages/statsPage/MonthlyPage.tsx":"13","/home/george/Documents/Projects/budget-tracker/src/pages/statsPage/DailyPage.tsx":"14","/home/george/Documents/Projects/budget-tracker/src/pages/statsPage/YearlyPage.tsx":"15","/home/george/Documents/Projects/budget-tracker/src/modules/login/LoginContainer.tsx":"16","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/weeklyContainer/WeeklyContainer.tsx":"17","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/yearlyContainer/YearlyContainer.tsx":"18","/home/george/Documents/Projects/budget-tracker/src/layout/navBar/NavBar.tsx":"19","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/dailyContainer/DailyContainer.tsx":"20","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/monthlyContainer/MonthlyContainer.tsx":"21","/home/george/Documents/Projects/budget-tracker/src/modules/stats/weeklyContainer/WeeklyContainer.tsx":"22","/home/george/Documents/Projects/budget-tracker/src/modules/stats/yearlyContainer/YearlyContainer.tsx":"23","/home/george/Documents/Projects/budget-tracker/src/modules/stats/dailyContainer/DailyContainer.tsx":"24","/home/george/Documents/Projects/budget-tracker/src/modules/stats/monthlyContainer/MonthlyContainer.tsx":"25","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/weeklyContainer/WeeklyTableRow.tsx":"26","/home/george/Documents/Projects/budget-tracker/src/helpers/Variables.tsx":"27","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/yearlyContainer/YearlyTableRow.tsx":"28","/home/george/Documents/Projects/budget-tracker/src/helpers/Validation.tsx":"29","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/monthlyContainer/Calendar.tsx":"30","/home/george/Documents/Projects/budget-tracker/src/modules/login/components/LoginForm.tsx":"31","/home/george/Documents/Projects/budget-tracker/src/modules/login/components/RegistrationForm.tsx":"32","/home/george/Documents/Projects/budget-tracker/src/modules/login/components/SocialNetworks.tsx":"33","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/service/TransactionService.tsx":"34","/home/george/Documents/Projects/budget-tracker/src/layout/sideBar/SideBar.tsx":"35","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/actions/transactionActions.tsx":"36","/home/george/Documents/Projects/budget-tracker/src/store/actions/usersActions.tsx":"37","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/infoRow/InfoRow.tsx":"38","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/AddTransactionModal.tsx":"39","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/infoModal/InfoModal.tsx":"40","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/dailyContainer/components/dailyTableRow/DailyTableRow.tsx":"41","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/dailyContainer/components/dailyTableHeader/DailyTableHeader.tsx":"42","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/actionTypes.tsx":"43","/home/george/Documents/Projects/budget-tracker/src/store/types.tsx":"44","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/Form.tsx":"45","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/components/FeesInput.tsx":"46","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/components/InputTitles.tsx":"47","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/components/SelectInputs.tsx":"48","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/components/AmountInput.tsx":"49","/home/george/Documents/Projects/budget-tracker/src/store/store.tsx":"50","/home/george/Documents/Projects/budget-tracker/src/store/reducers/index.tsx":"51","/home/george/Documents/Projects/budget-tracker/src/store/reducers/userReducer.tsx":"52","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/reducers/transactionReducer.tsx":"53","/home/george/Documents/Projects/budget-tracker/src/layout/header/Header.tsx":"54"},{"size":622,"mtime":1614358692408,"results":"55","hashOfConfig":"56"},{"size":425,"mtime":1608638830636,"results":"57","hashOfConfig":"56"},{"size":175,"mtime":1614358689184,"results":"58","hashOfConfig":"56"},{"size":2294,"mtime":1614702268921,"results":"59","hashOfConfig":"56"},{"size":628,"mtime":1614701634843,"results":"60","hashOfConfig":"56"},{"size":211,"mtime":1614480952330,"results":"61","hashOfConfig":"56"},{"size":304,"mtime":1614702859829,"results":"62","hashOfConfig":"56"},{"size":298,"mtime":1614702858497,"results":"63","hashOfConfig":"56"},{"size":436,"mtime":1614702854793,"results":"64","hashOfConfig":"56"},{"size":304,"mtime":1614702857461,"results":"65","hashOfConfig":"56"},{"size":185,"mtime":1614702855933,"results":"66","hashOfConfig":"56"},{"size":298,"mtime":1614702853221,"results":"67","hashOfConfig":"56"},{"size":304,"mtime":1614702846441,"results":"68","hashOfConfig":"56"},{"size":292,"mtime":1614702842301,"results":"69","hashOfConfig":"56"},{"size":298,"mtime":1614702851341,"results":"70","hashOfConfig":"56"},{"size":4836,"mtime":1614480770594,"results":"71","hashOfConfig":"56"},{"size":3628,"mtime":1614702870125,"results":"72","hashOfConfig":"56"},{"size":3759,"mtime":1614702867773,"results":"73","hashOfConfig":"56"},{"size":3528,"mtime":1614702961497,"results":"74","hashOfConfig":"56"},{"size":6449,"mtime":1614702868953,"results":"75","hashOfConfig":"56"},{"size":12223,"mtime":1614702866053,"results":"76","hashOfConfig":"56"},{"size":669,"mtime":1614702864849,"results":"77","hashOfConfig":"56"},{"size":669,"mtime":1614702863521,"results":"78","hashOfConfig":"56"},{"size":222,"mtime":1614702792365,"results":"79","hashOfConfig":"56"},{"size":2201,"mtime":1614702860949,"results":"80","hashOfConfig":"56"},{"size":1159,"mtime":1614081170159,"results":"81","hashOfConfig":"56"},{"size":4209,"mtime":1614481022500,"results":"82","hashOfConfig":"56"},{"size":1117,"mtime":1612892112587,"results":"83","hashOfConfig":"56"},{"size":1345,"mtime":1614481023672,"results":"84","hashOfConfig":"56"},{"size":2509,"mtime":1614480957102,"results":"85","hashOfConfig":"56"},{"size":1160,"mtime":1611219940043,"results":"86","hashOfConfig":"56"},{"size":1692,"mtime":1611219940043,"results":"87","hashOfConfig":"56"},{"size":967,"mtime":1608638830636,"results":"88","hashOfConfig":"56"},{"size":2042,"mtime":1614482925051,"results":"89","hashOfConfig":"56"},{"size":1143,"mtime":1611219940043,"results":"90","hashOfConfig":"56"},{"size":691,"mtime":1613321080919,"results":"91","hashOfConfig":"56"},{"size":387,"mtime":1611219940055,"results":"92","hashOfConfig":"56"},{"size":935,"mtime":1613318011202,"results":"93","hashOfConfig":"56"},{"size":5027,"mtime":1614480970603,"results":"94","hashOfConfig":"56"},{"size":4251,"mtime":1614480962962,"results":"95","hashOfConfig":"56"},{"size":1628,"mtime":1613314508402,"results":"96","hashOfConfig":"56"},{"size":1487,"mtime":1614480966799,"results":"97","hashOfConfig":"56"},{"size":322,"mtime":1613224508159,"results":"98","hashOfConfig":"56"},{"size":69,"mtime":1612959548725,"results":"99","hashOfConfig":"56"},{"size":3117,"mtime":1614480968775,"results":"100","hashOfConfig":"56"},{"size":1391,"mtime":1614480976755,"results":"101","hashOfConfig":"56"},{"size":1085,"mtime":1614481016896,"results":"102","hashOfConfig":"56"},{"size":862,"mtime":1614480980631,"results":"103","hashOfConfig":"56"},{"size":1191,"mtime":1614480972531,"results":"104","hashOfConfig":"56"},{"size":382,"mtime":1610266103362,"results":"105","hashOfConfig":"56"},{"size":264,"mtime":1614481005432,"results":"106","hashOfConfig":"56"},{"size":567,"mtime":1610266103362,"results":"107","hashOfConfig":"56"},{"size":2005,"mtime":1614481003436,"results":"108","hashOfConfig":"56"},{"size":1247,"mtime":1614703013993,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"1me94a7",{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"112"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"112"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"112"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"112"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"112"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"112"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"112"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"112"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"112"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/george/Documents/Projects/budget-tracker/src/index.tsx",[],["229","230"],"/home/george/Documents/Projects/budget-tracker/src/reportWebVitals.ts",[],"/home/george/Documents/Projects/budget-tracker/src/App.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/routes.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/helpers/AuthRoute.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/loginPage/LoginPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/transactionPage/WeeklyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/transactionPage/DailyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/transactionPage/MonthlyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/transactionPage/YearlyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/homePage/HomePage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/statsPage/WeeklyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/statsPage/MonthlyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/statsPage/DailyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/statsPage/YearlyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/login/LoginContainer.tsx",["231","232"],"import React, { useState } from \"react\";\nimport LoginContainerStyle from \"./LoginContainerStyle.module.css\";\nimport LoginForm from \"./components/LoginForm\";\nimport RegistrationForm from \"./components/RegistrationForm\";\nimport SocialNetworks from \"./components/SocialNetworks\";\nimport { Tabs, TabList, TabPanel, Tab } from \"react-tabs\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { singIn } from \"../../store/actions/usersActions\";\nimport axios from \"axios\";\nimport { faWindows } from \"@fortawesome/free-brands-svg-icons\";\n\nconst LoginContainer = () => {\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n  const [isLogin, setIsLogin] = useState(true);\n  const [errors, setErrors] = useState({\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const handleInputChange = (e: any) =>\n    setUser({\n      ...user,\n      [e.currentTarget.name]: e.currentTarget.value,\n    });\n\n  const validateForm = () => {\n    const isValidEmail = RegExp(\n      \"[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\"\n    );\n    let errors = {\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n    };\n    if (!isValidEmail.test(user.email)) {\n      errors.email = \"Please enter a valid email.\";\n    }\n    if (user.password !== user.confirmPassword && !isLogin) {\n      errors.confirmPassword = \"The password does not match. \";\n    }\n    if (\n      !user.password.match(/^[0-9a-zA-Z]+$/) ||\n      user.password.length > 20 ||\n      user.password.length < 6\n    ) {\n      errors.password = \"Please enter 6-20 characters [A-Z, a-z, 0-9 only].\";\n    }\n    return errors;\n  };\n  const handleLogin = async () => {\n    const errors = validateForm();\n    const isValid = Object.values(errors).filter(Boolean).length <= 0;\n    if (!isValid) {\n      setErrors({\n        email: errors.email,\n        password: errors.password,\n        confirmPassword: errors.confirmPassword,\n      });\n      return;\n    } else {\n      localStorage.removeItem(\"jwt\");\n      let loggedUser = await axios.post(`http://localhost:5000/signIn`, user);\n\n      if (loggedUser.data.user) {\n        dispatch(singIn(loggedUser.data));\n        // history.push(\"./\");\n        window.location.pathname = \"/transaction/monthly\";\n        setErrors({ email: \"\", password: \"\", confirmPassword: \"\" });\n      } else {\n        setErrors({\n          email: \"\",\n          password: loggedUser.data.errorMSG,\n          confirmPassword: \"\",\n        });\n      }\n    }\n  };\n  const handleRegister = async () => {\n    const errors = validateForm();\n    const isValid = Object.values(errors).filter(Boolean).length <= 0;\n    if (!isValid) {\n      setErrors({\n        email: errors.email,\n        password: errors.password,\n        confirmPassword: errors.confirmPassword,\n      });\n      return;\n    }\n    localStorage.removeItem(\"jwt\");\n\n    let newUser = {\n      username: user.email,\n      email: user.email,\n      password: user.password,\n      type: \"admin\",\n      currency: \"BG\",\n      categories: [],\n    };\n\n    await axios.post(`http://localhost:5000/signUp`, newUser).then(data => {\n      setErrors({ email: \"\", password: \"\", confirmPassword: \"\" });\n      dispatch(singIn(data.data));\n      // history.push(\"./\");\n      window.location.pathname = \"/transaction/monthly\";\n    });\n  };\n  return (\n    <div className={LoginContainerStyle.container}>\n      <div className={LoginContainerStyle.login_form}>\n        <Tabs selectedTabClassName={LoginContainerStyle.selected_tab}>\n          <TabList className={LoginContainerStyle.tab_list}>\n            <Tab\n              className={LoginContainerStyle.tab}\n              onClick={() => {\n                setErrors({ email: \"\", password: \"\", confirmPassword: \"\" });\n                setIsLogin(true);\n              }}\n            >\n              Sign In\n            </Tab>\n            <Tab\n              className={LoginContainerStyle.tab}\n              onClick={() => {\n                setErrors({ email: \"\", password: \"\", confirmPassword: \"\" });\n                setIsLogin(true);\n              }}\n            >\n              Register\n            </Tab>\n          </TabList>\n          <TabPanel>\n            <LoginForm\n              Submit={handleLogin}\n              errors={errors}\n              handleInput={handleInputChange}\n            />\n          </TabPanel>\n          <TabPanel>\n            <RegistrationForm\n              Submit={handleRegister}\n              errors={errors}\n              handleInput={handleInputChange}\n            />\n          </TabPanel>\n        </Tabs>\n        <SocialNetworks />\n      </div>\n    </div>\n  );\n};\nexport default LoginContainer;\n","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/weeklyContainer/WeeklyContainer.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/yearlyContainer/YearlyContainer.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/layout/navBar/NavBar.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/dailyContainer/DailyContainer.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/monthlyContainer/MonthlyContainer.tsx",["233","234","235"],"import React from \"react\";\nimport TransactionStyl from \"./MonthlyStyle.module.css\";\nimport AddTransactionModal from \"../components/addTransactionModal/AddTransactionModal\";\nimport NavBarMenu from \"../../../layout/navBar/NavBar\";\nimport moment from \"moment\";\nimport InfoModal from \"../components/infoModal/InfoModal\";\nimport Calendar from \"./Calendar\";\nimport { connect } from \"react-redux\";\nimport { State as StateTransaction } from \"../reducers/transactionReducer\";\nimport {\n  dayStartOfTheWeekOfTheMonth,\n  monthStartOfTheWeekOfTheMonth,\n  yearStartOfTheWeekOfTheMonth,\n  dayEndOfTheWeekOfTheMonth,\n  monthEndOfTheWeekOfTheMonth,\n  yearEndOfTheWeekOfTheMonth,\n  dayStartOfTheMonth,\n  monthStartOfTheMonth,\n  yearStartOfTheMonth,\n  dayEndOfTheMonth,\n  monthEndOfTheMonth,\n  yearEndOfTheMonth,\n  transactionEvent,\n} from \"../../../helpers/Variables\";\nimport { validateTransaction } from \"../../../helpers/Validation\";\nimport {\n  createTransactionRequest,\n  deleteTransaction,\n  editTransaction,\n  getSpecificDatePeriod,\n} from \"../service/TransactionService\";\nimport { handleInput, setTransaction } from \"../actions/transactionActions\";\nimport { Transaction, Errors } from \"../../../helpers/ITransactions\";\n\ntype Props = {\n  filters: any;\n  stateTransaction: StateTransaction;\n  handleInput: (event: any) => void;\n  setTransaction: (event: any) => void;\n};\n\ntype State = {\n  isAddTransactionOpen: boolean;\n  isInfoTransactionOpen: boolean;\n  isEditTransactionOpen: boolean;\n  selectedDay: Transaction;\n  isTransfer: boolean;\n  errors: Errors;\n  date: Date;\n  calendarDates: {\n    date: Date;\n  }[];\n  transactions: Transaction[];\n};\n\nclass MonthlyContainer extends React.Component<Props> {\n  state: State = {\n    isInfoTransactionOpen: false,\n    isAddTransactionOpen: false,\n    isEditTransactionOpen: false,\n    date: new Date(),\n    isTransfer: false,\n    selectedDay: {\n      _id: \"\",\n      createdAt: new Date(),\n      events: [],\n      expense: 0,\n      income: 0,\n    },\n    errors: {\n      account: \"\",\n      from: \"\",\n      category: \"\",\n      to: \"\",\n      amount: \"\",\n    },\n    transactions: [],\n    calendarDates: [],\n  };\n\n  componentDidMount() {\n    const { stateTransaction } = this.props;\n    if (this.props.filters.date) {\n      this.setState({\n        date: new Date(this.props.filters.date),\n      });\n      this.getTransactions(new Date(this.props.filters.date));\n      this.setCalendar(new Date(this.props.filters.date));\n    } else {\n      this.setState({\n        date: stateTransaction.date,\n      });\n      this.getTransactions(stateTransaction.date);\n    }\n    if (this.props.filters.date === undefined) {\n      this.setCalendar(stateTransaction.date);\n    }\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>) {\n    const { date } = this.props.stateTransaction;\n\n    if (prevProps.stateTransaction.date !== date) {\n      this.setCalendar(date);\n      this.getTransactions(date);\n    }\n  }\n\n  getTransactions = async (date: any) => {\n    let from = moment(\n      new Date(\n        yearStartOfTheWeekOfTheMonth(date),\n        monthStartOfTheWeekOfTheMonth(date),\n        dayStartOfTheWeekOfTheMonth(date)\n      )\n    );\n    let to = moment(\n      new Date(\n        yearEndOfTheWeekOfTheMonth(date),\n        monthEndOfTheWeekOfTheMonth(date),\n        dayEndOfTheWeekOfTheMonth(date)\n      )\n    );\n\n    await getSpecificDatePeriod(from, to).then(data => {\n      data.transactions.map((transaction: any) => {\n        if (\n          new Date(this.state.selectedDay.createdAt).getDate() ===\n            new Date(transaction.createdAt).getDate() &&\n          new Date(this.state.selectedDay.createdAt).getMonth() ===\n            new Date(transaction.createdAt).getMonth()\n        ) {\n          this.setState({\n            selectedDay: transaction,\n          });\n        }\n      });\n      this.setState({ transactions: data.transactions });\n    });\n  };\n\n  handleDelete = (eventId: any) => {\n    deleteTransaction(this.state.selectedDay._id, eventId).then(() => {\n      let newEvents = this.state.selectedDay.events.filter(\n        event => event._id !== eventId\n      );\n      this.setState({\n        selectedDay: { ...this.state.selectedDay, events: newEvents },\n        isEditTransactionOpen: false,\n      });\n      this.clearState();\n      this.getTransactions(this.state.date);\n    });\n  };\n  handleOpenEdit = (event: any) => {\n    const { isEditTransactionOpen } = this.state;\n    if (isEditTransactionOpen) {\n      this.setState({ isEditTransactionOpen: false });\n      this.clearState();\n    } else {\n      this.setState({\n        isEditTransactionOpen: true,\n      });\n\n      this.props.setTransaction({\n        ...event,\n        amount: (event.amount / 100).toFixed(2),\n        fees: (event.fees / 100).toFixed(2),\n      });\n    }\n  };\n  handleNextDay = async () => {\n    const { selectedDay, transactions } = this.state;\n\n    let date = new Date(selectedDay.createdAt);\n\n    let newDate = new Date(\n      date.getFullYear(),\n      date.getMonth(),\n      date.getDate() + 1\n    );\n\n    await this.setState({\n      selectedDay: { createdAt: newDate, events: [] },\n      date: newDate,\n    });\n\n    await transactions.map(transaction => {\n      if (\n        newDate.getDate() === new Date(transaction.createdAt).getDate() &&\n        newDate.getMonth() === new Date(transaction.createdAt).getMonth()\n      ) {\n        this.setState({\n          selectedDay: transaction,\n        });\n      }\n    });\n  };\n  handlePreviousDay = async () => {\n    const { selectedDay, transactions } = this.state;\n\n    let date = new Date(selectedDay.createdAt);\n\n    let newDate = new Date(\n      date.getFullYear(),\n      date.getMonth(),\n      date.getDate() - 1\n    );\n    this.setState({\n      selectedDay: { createdAt: newDate, events: [] },\n      date: newDate,\n    });\n\n    await transactions.map(transaction => {\n      if (\n        newDate.getDate() === new Date(transaction.createdAt).getDate() &&\n        newDate.getMonth() === new Date(transaction.createdAt).getMonth()\n      ) {\n        this.setState({\n          selectedDay: transaction,\n        });\n      }\n    });\n  };\n  handleOpenTransaction = () => {\n    if (this.state.isAddTransactionOpen) {\n      this.setState({\n        isAddTransactionOpen: false,\n      });\n      this.clearState();\n    } else {\n      this.props.handleInput({\n        target: {\n          name: \"date\",\n          value: this.state.selectedDay.createdAt,\n        },\n      });\n      this.setState({\n        isAddTransactionOpen: true,\n      });\n    }\n  };\n  handleOpenInfoModal = (date: any) => {\n    const { isInfoTransactionOpen } = this.state;\n    if (isInfoTransactionOpen) {\n      this.setState({\n        isInfoTransactionOpen: false,\n        selectedDay: { events: [] },\n      });\n    } else {\n      this.setState({\n        isInfoTransactionOpen: true,\n        selectedDay: { createdAt: new Date(date), events: [] },\n      });\n      this.selectedDay(date);\n    }\n  };\n  selectedDay = (date: any) => {\n    this.state.transactions.forEach(transaction => {\n      if (\n        new Date(date).getDate() ===\n          new Date(transaction.createdAt).getDate() &&\n        new Date(date).getMonth() === new Date(transaction.createdAt).getMonth()\n      ) {\n        this.setState({\n          selectedDay: transaction,\n        });\n      }\n    });\n  };\n\n  handleSave = async () => {\n    const { isEditTransactionOpen, selectedDay } = this.state;\n    const { transaction, date } = this.props.stateTransaction;\n    const errors = validateTransaction(transaction);\n    const isValid = Object.values(errors).filter(Boolean).length <= 0;\n\n    if (!isValid) {\n      this.setState({ errors: errors });\n      return;\n    }\n    let event = transactionEvent(transaction);\n    if (isEditTransactionOpen) {\n      editTransaction(selectedDay._id, transaction._id, event.events[0]).then(\n        () => {\n          this.getTransactions(transaction.date);\n          this.clearState();\n        }\n      );\n    } else {\n      createTransactionRequest(event).then(() => {\n        this.getTransactions(date);\n        this.clearState();\n      });\n    }\n    this.setState({\n      ...this.state,\n      errors: {},\n      isAddTransactionOpen: false,\n      isEditTransactionOpen: false,\n    });\n  };\n\n  clearState = () => {\n    this.props.setTransaction({\n      type: \"income\",\n      date: \"\",\n      account: \"\",\n      from: \"\",\n      category: \"\",\n      fees: \"0\",\n      to: \"\",\n      amount: \"0\",\n      note: \"\",\n      description: \"\",\n    });\n  };\n\n  setCalendar = async (date: any) => {\n    await this.setState({ calendarDates: [] });\n    const { calendarDates } = this.state;\n\n    let fromDate = new Date(\n      yearStartOfTheMonth(date),\n      monthStartOfTheMonth(date),\n      dayStartOfTheMonth(date)\n    );\n\n    let toDate = new Date(\n      yearEndOfTheMonth(date),\n      monthEndOfTheMonth(date),\n      dayEndOfTheMonth(date)\n    );\n\n    if (fromDate.getDay() !== 1 && fromDate.getDay() !== 0) {\n      this.setFirstWeek(date);\n    }\n\n    if (fromDate.getDay() === 0) {\n      let lastDay = new Date(date.getFullYear(), date.getMonth(), 0).getDate();\n      for (let i = lastDay - 5; i <= lastDay; i++) {\n        calendarDates.push({\n          date: new Date(date.getFullYear(), date.getMonth() - 1, i),\n        });\n      }\n    }\n\n    for (let i = 1; i <= toDate.getDate(); i++) {\n      calendarDates.push({\n        date: new Date(date.getFullYear(), date.getMonth(), i),\n      });\n    }\n\n    if (toDate.getDay() !== 0) {\n      this.setLastWeek(date);\n    }\n  };\n\n  setFirstWeek = (date: any) => {\n    let fromDate = new Date(\n      yearStartOfTheWeekOfTheMonth(date),\n      monthStartOfTheWeekOfTheMonth(date),\n      dayStartOfTheWeekOfTheMonth(date) + 1\n    );\n\n    let toDate = new Date(\n      yearEndOfTheMonth(fromDate),\n      monthEndOfTheMonth(fromDate),\n      dayEndOfTheMonth(fromDate)\n    );\n\n    for (let i = fromDate.getDate(); i <= toDate.getDate(); i++) {\n      this.state.calendarDates.push({\n        date: new Date(fromDate.getFullYear(), fromDate.getMonth(), i),\n      });\n    }\n  };\n  setLastWeek = (date: any) => {\n    let toDate = new Date(\n      yearEndOfTheWeekOfTheMonth(date),\n      monthEndOfTheWeekOfTheMonth(date),\n      dayEndOfTheWeekOfTheMonth(date) + 1\n    );\n\n    for (let i = 1; i <= toDate.getDate(); i++) {\n      this.state.calendarDates.push({\n        date: new Date(toDate.getFullYear(), toDate.getMonth(), i),\n      });\n    }\n  };\n\n  render() {\n    const {\n      errors,\n      selectedDay,\n      transactions,\n      calendarDates,\n      isAddTransactionOpen,\n      isEditTransactionOpen,\n      isInfoTransactionOpen,\n    } = this.state;\n    const { date, transaction } = this.props.stateTransaction;\n    return (\n      <div className={TransactionStyl.wrapper}>\n        <NavBarMenu />\n        <Calendar\n          handleOpenInfoModal={this.handleOpenInfoModal}\n          transactions={transactions}\n          calendarDate={calendarDates}\n          date={date}\n        />\n        <InfoModal\n          handleDelete={this.handleDelete}\n          selectedDay={selectedDay}\n          handleNextDay={this.handleNextDay}\n          isInfoTransactionOpen={isInfoTransactionOpen}\n          handlePreviousDay={this.handlePreviousDay}\n          handleOpenInfoModal={this.handleOpenInfoModal}\n          handleOpenTransaction={this.handleOpenTransaction}\n          handleOpenEdit={this.handleOpenEdit}\n        />\n        <AddTransactionModal\n          isEditTransactionOpen={isEditTransactionOpen}\n          errors={errors}\n          transactionEvent={transaction}\n          handleSave={this.handleSave}\n          handleOpenEdit={this.handleOpenEdit}\n          handleInputChange={this.props.handleInput}\n          isAddTransactionOpen={isAddTransactionOpen}\n          handleOpenTransaction={this.handleOpenTransaction}\n          handleDelete={this.handleDelete}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    stateTransaction: state.transaction,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    handleInput: (event: any) => dispatch(handleInput(event)),\n    setTransaction: (event: any) => dispatch(setTransaction(event)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonthlyContainer);\n","/home/george/Documents/Projects/budget-tracker/src/modules/stats/weeklyContainer/WeeklyContainer.tsx",["236","237"],"import React, { useState } from \"react\";\nimport NavBarMenu from \"../../../layout/navBar/NavBar\";\n\nconst WeeklyContainer = () => {\n  const [date, setDate] = useState(new Date());\n\n  const handlePreviousMonth = () => {\n    let Month = new Date(date).getMonth();\n    let Year = date.getFullYear();\n    let newMonth = new Date(Year, Month - 1);\n    setDate(new Date(newMonth));\n  };\n  const handleNextMonth = () => {\n    let Month = new Date(date).getMonth();\n    let Year = date.getFullYear();\n    let newMonth = new Date(Year, Month + 1);\n    setDate(new Date(newMonth));\n  };\n  return (\n    <div>\n      <NavBarMenu />\n    </div>\n  );\n};\n\nexport default WeeklyContainer;\n","/home/george/Documents/Projects/budget-tracker/src/modules/stats/yearlyContainer/YearlyContainer.tsx",["238","239"],"import React, { useState } from \"react\";\nimport NavBarMenu from \"../../../layout/navBar/NavBar\";\n\nconst YearlyContainer = () => {\n  const [date, setDate] = useState(new Date());\n\n  const handlePreviousMonth = () => {\n    let Month = new Date(date).getMonth();\n    let Year = date.getFullYear();\n    let newMonth = new Date(Year, Month - 1);\n    setDate(new Date(newMonth));\n  };\n  const handleNextMonth = () => {\n    let Month = new Date(date).getMonth();\n    let Year = date.getFullYear();\n    let newMonth = new Date(Year, Month + 1);\n    setDate(new Date(newMonth));\n  };\n  return (\n    <div>\n      <NavBarMenu />\n    </div>\n  );\n};\n\nexport default YearlyContainer;\n","/home/george/Documents/Projects/budget-tracker/src/modules/stats/dailyContainer/DailyContainer.tsx",["240"],"import React, { useState } from \"react\";\nimport NavBarMenu from \"../../../layout/navBar/NavBar\";\n\nconst DailyContainer = () => {\n  return (\n    <div>\n      <NavBarMenu />\n    </div>\n  );\n};\n\nexport default DailyContainer;\n","/home/george/Documents/Projects/budget-tracker/src/modules/stats/monthlyContainer/MonthlyContainer.tsx",["241","242","243","244","245"],"import React, { useEffect, useState } from \"react\";\nimport NavBarMenu from \"../../../layout/navBar/NavBar\";\nimport { PieChart } from \"react-minimal-pie-chart\";\nimport moment from \"moment\";\nimport axios from \"axios\";\n\ntype Props = {\n  sumIncome: number;\n  sumExpense: number;\n  transactions: {\n    createdAt: any;\n    income: number;\n    expense: number;\n    events: {\n      type: string;\n      date: any;\n      account?: string;\n      from?: string;\n      to?: string;\n      category?: string;\n      amount: number;\n      note: string;\n      description: string;\n    }[];\n  }[];\n};\n\nconst MonthlyContainer = () => {\n  const [transactions, setTransactions] = useState<Props[\"transactions\"]>([]);\n  const [date, setDate] = useState(new Date());\n  const [sumIncome, setSumIncome] = useState(0);\n  const [sumExpense, setSumExpense] = useState(0);\n\n  useEffect(() => {\n    getTransactions(new Date());\n  }, []);\n\n  const getTransactions = (date: any) => {\n    let firstDay = moment(\n      new Date(date.getFullYear(), date.getMonth(), 1)\n    ).toISOString();\n    let lastDay = moment(\n      new Date(date.getFullYear(), date.getMonth() + 1, 0)\n    ).toISOString();\n    let config = {\n      headers: {\n        Authorization:\n          \"Bearer \" +\n          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVmZjRjZjcyMDIwNTM5MmM3MGU5MmJlZiIsImlhdCI6MTYxMDIyNzAwOH0.bL8WKWjEe1NP2-07udR7ORGkraoavQZEyjtOUd9-5Po\",\n      },\n    };\n    axios\n      .get(\n        `http://localhost:5000/transaction/specificDatePeriod/${firstDay}/${lastDay}`,\n        config\n      )\n      .then(data => {\n        setTransactions(data.data.transactions);\n        setSumExpense(data.data.sumExpense);\n        setSumIncome(data.data.sumIncome);\n      });\n  };\n\n  return (\n    <div>\n      <NavBarMenu />\n\n      <div style={{ width: \"400px\" }}>\n        <PieChart\n          animate={true}\n          label={({ dataEntry }) => dataEntry.title}\n          data={[\n            { title: \"1\", value: 10000, color: \"#E38627\", label: \"1\" },\n            { title: \"2\", value: 1544, color: \"#C13C37\" },\n            { title: \"3\", value: 204, color: \"#6A2135\" },\n          ]}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default MonthlyContainer;\n","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/weeklyContainer/WeeklyTableRow.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/helpers/Variables.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/yearlyContainer/YearlyTableRow.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/helpers/Validation.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/monthlyContainer/Calendar.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/login/components/LoginForm.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/login/components/RegistrationForm.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/login/components/SocialNetworks.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/service/TransactionService.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/layout/sideBar/SideBar.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/actions/transactionActions.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/store/actions/usersActions.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/infoRow/InfoRow.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/AddTransactionModal.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/infoModal/InfoModal.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/dailyContainer/components/dailyTableRow/DailyTableRow.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/dailyContainer/components/dailyTableHeader/DailyTableHeader.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/actionTypes.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/store/types.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/Form.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/components/FeesInput.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/components/InputTitles.tsx",["246"],"import React, { useState } from \"react\";\nimport { TransactionEvent } from \"../../../../../../helpers/ITransactions\";\nimport AddTransactionStyl from \"../../AddTransactionStyle.module.css\";\ntype Props = {\n  transaction: TransactionEvent;\n  feesIsOpen: boolean;\n};\n\nconst InputTitles: React.FC<Props> = ({ transaction, feesIsOpen }) => {\n  return (\n    <div className={AddTransactionStyl.content_titles}>\n      <div className={AddTransactionStyl.title}>Day</div>\n      {transaction.type === \"transfer\" ? (\n        <div className={AddTransactionStyl.title}>From</div>\n      ) : (\n        <div className={AddTransactionStyl.title}>Account</div>\n      )}\n      {transaction.type === \"transfer\" ? (\n        <div className={AddTransactionStyl.title}>To</div>\n      ) : (\n        <div className={AddTransactionStyl.title}>Category</div>\n      )}\n      <div className={AddTransactionStyl.title}>Amount</div>\n      {feesIsOpen ? <div className={AddTransactionStyl.title}>Fees</div> : null}\n      <div className={AddTransactionStyl.title}>Note</div>\n    </div>\n  );\n};\nexport default InputTitles;\n","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/components/SelectInputs.tsx",[],["247","248"],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/components/AmountInput.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/store/store.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/store/reducers/index.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/store/reducers/userReducer.tsx",["249"],"import { SIGN_IN } from \"../types\";\n\nexport interface State {\n  user: {};\n  token: string;\n  loading: boolean;\n}\n\nconst initialState = {\n  user: {},\n  token: \"\",\n  loading: true,\n};\n\nexport default function (state = initialState, action: any) {\n  switch (action.type) {\n    case SIGN_IN:\n      if (action.payload.token) {\n        localStorage.setItem(\"jwt\", action.payload.token);\n      }\n\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/reducers/transactionReducer.tsx",["250"],"import {\n  HANDLE_PREVIOUS_MONTH,\n  HANDLE_NEXT_MONTH,\n  HANDLE_NEXT_YEAR,\n  HANDLE_PREVIOUS_YEAR,\n  HANDLE_INPUT,\n  SET_TRANSACTION,\n} from \"../actionTypes\";\nimport { TransactionEvent } from \"../../../helpers/ITransactions\";\n\nexport interface State {\n  date: any;\n  transaction: TransactionEvent;\n}\n\nconst initialState = {\n  date: new Date(),\n  transaction: {\n    _id: \"\",\n    type: \"income\",\n    date: \"\",\n    account: \"\",\n    from: \"\",\n    category: \"\",\n    fees: \"0\",\n    transferId: \"\",\n    to: \"\",\n    amount: \"0\",\n    note: \"\",\n    description: \"\",\n  },\n};\nexport default function (state = initialState, action: any) {\n  let month = new Date(state.date).getMonth();\n  let year = state.date.getFullYear();\n  switch (action.type) {\n    case HANDLE_NEXT_MONTH:\n      let nextMonth = new Date(year, month + 1);\n      return {\n        ...state,\n        date: nextMonth,\n      };\n    case HANDLE_PREVIOUS_MONTH:\n      let previousMonth = new Date(year, month - 1);\n      return {\n        ...state,\n        date: previousMonth,\n      };\n    case HANDLE_NEXT_YEAR:\n      let nextYear = new Date(year + 1, new Date().getMonth(), 1);\n\n      return {\n        ...state,\n        date: nextYear,\n      };\n    case HANDLE_PREVIOUS_YEAR:\n      let previousYear = new Date(year - 1, new Date().getMonth(), 1);\n      return {\n        ...state,\n        date: previousYear,\n      };\n\n    case HANDLE_INPUT:\n      if (action.payload.name === \"type\") {\n        return {\n          ...state,\n          transaction: {\n            ...state.transaction,\n            [action.payload.name]: action.payload.value,\n            category: \"\",\n            to: \"\",\n          },\n        };\n      } else {\n        return {\n          ...state,\n          transaction: {\n            ...state.transaction,\n            [action.payload.name]: action.payload.value,\n          },\n        };\n      }\n    case SET_TRANSACTION:\n      return {\n        ...state,\n        transaction: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","/home/george/Documents/Projects/budget-tracker/src/layout/header/Header.tsx",[],{"ruleId":"251","replacedBy":"252"},{"ruleId":"253","replacedBy":"254"},{"ruleId":"255","severity":1,"message":"256","line":11,"column":10,"nodeType":"257","messageId":"258","endLine":11,"endColumn":19},{"ruleId":"255","severity":1,"message":"259","line":25,"column":9,"nodeType":"257","messageId":"258","endLine":25,"endColumn":16},{"ruleId":"260","severity":1,"message":"261","line":126,"column":48,"nodeType":"262","messageId":"263","endLine":126,"endColumn":50},{"ruleId":"260","severity":1,"message":"261","line":188,"column":40,"nodeType":"262","messageId":"263","endLine":188,"endColumn":42},{"ruleId":"260","severity":1,"message":"261","line":214,"column":40,"nodeType":"262","messageId":"263","endLine":214,"endColumn":42},{"ruleId":"255","severity":1,"message":"264","line":7,"column":9,"nodeType":"257","messageId":"258","endLine":7,"endColumn":28},{"ruleId":"255","severity":1,"message":"265","line":13,"column":9,"nodeType":"257","messageId":"258","endLine":13,"endColumn":24},{"ruleId":"255","severity":1,"message":"264","line":7,"column":9,"nodeType":"257","messageId":"258","endLine":7,"endColumn":28},{"ruleId":"255","severity":1,"message":"265","line":13,"column":9,"nodeType":"257","messageId":"258","endLine":13,"endColumn":24},{"ruleId":"255","severity":1,"message":"266","line":1,"column":17,"nodeType":"257","messageId":"258","endLine":1,"endColumn":25},{"ruleId":"255","severity":1,"message":"267","line":29,"column":10,"nodeType":"257","messageId":"258","endLine":29,"endColumn":22},{"ruleId":"255","severity":1,"message":"268","line":30,"column":10,"nodeType":"257","messageId":"258","endLine":30,"endColumn":14},{"ruleId":"255","severity":1,"message":"269","line":30,"column":16,"nodeType":"257","messageId":"258","endLine":30,"endColumn":23},{"ruleId":"255","severity":1,"message":"270","line":31,"column":10,"nodeType":"257","messageId":"258","endLine":31,"endColumn":19},{"ruleId":"255","severity":1,"message":"271","line":32,"column":10,"nodeType":"257","messageId":"258","endLine":32,"endColumn":20},{"ruleId":"255","severity":1,"message":"266","line":1,"column":17,"nodeType":"257","messageId":"258","endLine":1,"endColumn":25},{"ruleId":"251","replacedBy":"272"},{"ruleId":"253","replacedBy":"273"},{"ruleId":"274","severity":1,"message":"275","line":15,"column":1,"nodeType":"276","endLine":31,"endColumn":2},{"ruleId":"274","severity":1,"message":"275","line":33,"column":1,"nodeType":"276","endLine":91,"endColumn":2},"no-native-reassign",["277"],"no-negated-in-lhs",["278"],"@typescript-eslint/no-unused-vars","'faWindows' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'handlePreviousMonth' is assigned a value but never used.","'handleNextMonth' is assigned a value but never used.","'useState' is defined but never used.","'transactions' is assigned a value but never used.","'date' is assigned a value but never used.","'setDate' is assigned a value but never used.","'sumIncome' is assigned a value but never used.","'sumExpense' is assigned a value but never used.",["277"],["278"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]