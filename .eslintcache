[{"/home/niksan/Desktop/Projects/budget-tracker/src/index.tsx":"1","/home/niksan/Desktop/Projects/budget-tracker/src/reportWebVitals.ts":"2","/home/niksan/Desktop/Projects/budget-tracker/src/App.tsx":"3","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/store/store.tsx":"4","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/routes.tsx":"5","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/store/reducers/index.tsx":"6","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/pages/loginPage/LoginPage.tsx":"7","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/pages/transactionPage/DailyPage.tsx":"8","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/pages/transactionPage/WeeklyPage.tsx":"9","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/pages/transactionPage/YearlyPage.tsx":"10","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/pages/transactionPage/MonthlyPage.tsx":"11","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/pages/statsPage/WeeklyPage.tsx":"12","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/pages/homePage/HomePage.tsx":"13","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/pages/statsPage/YearlyPage.tsx":"14","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/pages/statsPage/DailyPage.tsx":"15","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/pages/statsPage/MonthlyPage.tsx":"16","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/store/reducers/userReducer.tsx":"17","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/layout/navBar/NavBar.tsx":"18","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/transaction/weeklyContainer/WeeklyContainer.tsx":"19","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/login/LoginContainer.tsx":"20","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/transaction/yearlyContainer/YearlyContainer.tsx":"21","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/stats/yearlyContainer/YearlyContainer.tsx":"22","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/stats/dailyContainer/DailyContainer.tsx":"23","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/stats/weeklyContainer/WeeklyContainer.tsx":"24","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/stats/monthlyContainer/MonthlyContainer.tsx":"25","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/transaction/dailyContainer/DailyContainer.tsx":"26","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/transaction/monthlyContainer/TransactionContainer.tsx":"27","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/store/types.tsx":"28","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/layout/sideBar/SideBar.tsx":"29","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/layout/navBarMenu/NavBarMenu.tsx":"30","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/login/components/SocialNetworks.tsx":"31","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/login/components/LoginForm.tsx":"32","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/login/components/RegistrationForm.tsx":"33","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/store/actions/usersActions.tsx":"34","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/transaction/components/infoRow/InfoRow.tsx":"35","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/transaction/monthlyContainer/NewCalendar.tsx":"36","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/transaction/components/infoModal/InfoModal.tsx":"37","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/transaction/components/addTransactionModal/AddTransactionModal.tsx":"38","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/transaction/dailyContainer/components/dailyTableRow/DailyTableRow.tsx":"39","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/transaction/components/addTransactionModal/form/Form.tsx":"40","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/helpers/AuthRoute.tsx":"41"},{"size":630,"mtime":1610149069435,"results":"42","hashOfConfig":"43"},{"size":425,"mtime":1608110400809,"results":"44","hashOfConfig":"43"},{"size":188,"mtime":1608455000758,"results":"45","hashOfConfig":"43"},{"size":382,"mtime":1610149069435,"results":"46","hashOfConfig":"43"},{"size":2294,"mtime":1610898686434,"results":"47","hashOfConfig":"43"},{"size":141,"mtime":1610149069435,"results":"48","hashOfConfig":"43"},{"size":228,"mtime":1608455000758,"results":"49","hashOfConfig":"43"},{"size":322,"mtime":1610149069435,"results":"50","hashOfConfig":"43"},{"size":304,"mtime":1609878797853,"results":"51","hashOfConfig":"43"},{"size":322,"mtime":1610291133375,"results":"52","hashOfConfig":"43"},{"size":473,"mtime":1610291133375,"results":"53","hashOfConfig":"43"},{"size":321,"mtime":1610750690896,"results":"54","hashOfConfig":"43"},{"size":200,"mtime":1609878818685,"results":"55","hashOfConfig":"43"},{"size":322,"mtime":1610750690896,"results":"56","hashOfConfig":"43"},{"size":292,"mtime":1610750690896,"results":"57","hashOfConfig":"43"},{"size":329,"mtime":1610750690896,"results":"58","hashOfConfig":"43"},{"size":567,"mtime":1610900340752,"results":"59","hashOfConfig":"43"},{"size":1228,"mtime":1609878818685,"results":"60","hashOfConfig":"43"},{"size":4670,"mtime":1610852865351,"results":"61","hashOfConfig":"43"},{"size":4183,"mtime":1610899222544,"results":"62","hashOfConfig":"43"},{"size":4181,"mtime":1610852942711,"results":"63","hashOfConfig":"43"},{"size":886,"mtime":1610750690896,"results":"64","hashOfConfig":"43"},{"size":883,"mtime":1610750690896,"results":"65","hashOfConfig":"43"},{"size":885,"mtime":1610750690896,"results":"66","hashOfConfig":"43"},{"size":2807,"mtime":1610851903796,"results":"67","hashOfConfig":"43"},{"size":4477,"mtime":1610852792984,"results":"68","hashOfConfig":"43"},{"size":14913,"mtime":1610852361780,"results":"69","hashOfConfig":"43"},{"size":68,"mtime":1610149069435,"results":"70","hashOfConfig":"43"},{"size":1143,"mtime":1610750690896,"results":"71","hashOfConfig":"43"},{"size":3350,"mtime":1610750690892,"results":"72","hashOfConfig":"43"},{"size":967,"mtime":1608455000758,"results":"73","hashOfConfig":"43"},{"size":1160,"mtime":1610846803210,"results":"74","hashOfConfig":"43"},{"size":1692,"mtime":1610846803210,"results":"75","hashOfConfig":"43"},{"size":387,"mtime":1610894501726,"results":"76","hashOfConfig":"43"},{"size":944,"mtime":1610487268681,"results":"77","hashOfConfig":"43"},{"size":2780,"mtime":1610852509443,"results":"78","hashOfConfig":"43"},{"size":3190,"mtime":1610846803210,"results":"79","hashOfConfig":"43"},{"size":3858,"mtime":1610846803210,"results":"80","hashOfConfig":"43"},{"size":1541,"mtime":1610853152933,"results":"81","hashOfConfig":"43"},{"size":6910,"mtime":1610848939674,"results":"82","hashOfConfig":"43"},{"size":538,"mtime":1610899187948,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"1eorvxk",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"86"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"86"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"86"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/niksan/Desktop/Projects/budget-tracker/src/index.tsx",[],["170","171"],"/home/niksan/Desktop/Projects/budget-tracker/src/reportWebVitals.ts",[],"/home/niksan/Desktop/Projects/budget-tracker/src/App.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/store/store.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/routes.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/store/reducers/index.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/pages/loginPage/LoginPage.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/pages/transactionPage/DailyPage.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/pages/transactionPage/WeeklyPage.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/pages/transactionPage/YearlyPage.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/pages/transactionPage/MonthlyPage.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/pages/statsPage/WeeklyPage.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/pages/homePage/HomePage.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/pages/statsPage/YearlyPage.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/pages/statsPage/DailyPage.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/pages/statsPage/MonthlyPage.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/store/reducers/userReducer.tsx",["172"],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/layout/navBar/NavBar.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/transaction/weeklyContainer/WeeklyContainer.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/login/LoginContainer.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/transaction/yearlyContainer/YearlyContainer.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/stats/yearlyContainer/YearlyContainer.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/stats/dailyContainer/DailyContainer.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/stats/weeklyContainer/WeeklyContainer.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/stats/monthlyContainer/MonthlyContainer.tsx",["173","174","175"],"import React, { useEffect, useState } from \"react\";\nimport NavBarMenu from \"../../../layout/navBarMenu/NavBarMenu\";\nimport { PieChart } from \"react-minimal-pie-chart\";\nimport moment from \"moment\";\nimport axios from \"axios\";\n\ntype Props = {\n  sumIncome: number;\n  sumExpense: number;\n  transactions: {\n    createdAt: any;\n    income: number;\n    expense: number;\n    events: {\n      type: string;\n      date: any;\n      account?: string;\n      from?: string;\n      to?: string;\n      category?: string;\n      amount: number;\n      note: string;\n      description: string;\n    }[];\n  }[];\n};\n\nconst MonthlyContainer = () => {\n  const [transactions, setTransactions] = useState<Props[\"transactions\"]>([]);\n  const [date, setDate] = useState(new Date());\n  const [sumIncome, setSumIncome] = useState(0);\n  const [sumExpense, setSumExpense] = useState(0);\n\n  useEffect(() => {\n    getTransactions(new Date());\n  }, []);\n\n  const handlePreviousMonth = () => {\n    let Month = new Date(date).getMonth();\n    let Year = date.getFullYear();\n    let newMonth = new Date(Year, Month - 1);\n    setDate(new Date(newMonth));\n    getTransactions(new Date(newMonth));\n  };\n  const handleNextMonth = () => {\n    let Month = new Date(date).getMonth();\n    let Year = date.getFullYear();\n    let newMonth = new Date(Year, Month + 1);\n    setDate(new Date(newMonth));\n    getTransactions(new Date(newMonth));\n  };\n  const getTransactions = (date: any) => {\n    let firstDay = moment(\n      new Date(date.getFullYear(), date.getMonth(), 1)\n    ).toISOString();\n    let lastDay = moment(\n      new Date(date.getFullYear(), date.getMonth() + 1, 0)\n    ).toISOString();\n    let config = {\n      headers: {\n        Authorization:\n          \"Bearer \" +\n          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVmZjRjZjcyMDIwNTM5MmM3MGU5MmJlZiIsImlhdCI6MTYxMDIyNzAwOH0.bL8WKWjEe1NP2-07udR7ORGkraoavQZEyjtOUd9-5Po\",\n      },\n    };\n    axios\n      .get(\n        `http://localhost:5000/transaction/specificDatePeriod/${firstDay}/${lastDay}`,\n        config\n      )\n      .then((data) => {\n        setTransactions(data.data.transactions);\n        setSumExpense(data.data.sumExpense);\n        setSumIncome(data.data.sumIncome);\n      });\n  };\n\n  return (\n    <div>\n      <NavBarMenu\n        handlePreviousMonth={handlePreviousMonth}\n        handleNextMonth={handleNextMonth}\n        date={date}\n      />\n\n      <div style={{ width: \"400px\" }}>\n        <PieChart\n          animate={true}\n          label={({ dataEntry }) => dataEntry.title}\n          data={[\n            { title: \"1\", value: 10000, color: \"#E38627\", label: \"1\" },\n            { title: \"2\", value: 1544, color: \"#C13C37\" },\n            { title: \"3\", value: 204, color: \"#6A2135\" },\n          ]}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default MonthlyContainer;\n","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/transaction/dailyContainer/DailyContainer.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/transaction/monthlyContainer/TransactionContainer.tsx",["176"],"import React from \"react\";\nimport TransactionStyl from \"./TransactionStyle.module.css\";\nimport AddTransactionModal from \"../components/addTransactionModal/AddTransactionModal\";\nimport NavBarMenu from \"../../../layout/navBarMenu/NavBarMenu\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport InfoModal from \"../components/infoModal/InfoModal\";\nimport NewCalendar from \"./NewCalendar\";\n\ntype Props = {\n  filters: any;\n};\nexport interface State {\n  isAddTransactionOpen: boolean;\n  isInfoTransactionOpen: boolean;\n\n  transaction: {\n    _id?: string;\n    type: string;\n    date: any;\n    account?: string;\n    from?: string;\n    to?: string;\n    fees: string;\n    category?: string;\n    amount: string;\n    note: string;\n    description: string;\n  };\n  selectedDay: {\n    _id?: string;\n    createdAt?: any;\n    events: State[\"transaction\"][];\n    income?: number;\n    expense?: number;\n  };\n  isTransfer: boolean;\n  errors: {\n    account?: string;\n    from?: string;\n    to?: string;\n    category?: string;\n    amount: string;\n    fees?: string;\n  };\n  date: any;\n  transactions: {\n    _id: string;\n    createdAt: any;\n    events: State[\"transaction\"][];\n    income: number;\n    expense: number;\n  }[];\n  calendarDates: {\n    date: any;\n  }[];\n}\nclass TransactionContainer extends React.Component<Props> {\n  state: State = {\n    isInfoTransactionOpen: false,\n    isAddTransactionOpen: false,\n    date: new Date(),\n    isTransfer: false,\n    transaction: {\n      type: \"income\",\n      date: \"\",\n      account: \"\",\n      from: \"\",\n      category: \"\",\n      fees: \"0\",\n      to: \"\",\n      amount: \"0\",\n      note: \"\",\n      description: \"\",\n    },\n    selectedDay: {\n      events: [],\n    },\n    errors: {\n      account: \"\",\n      from: \"\",\n      category: \"\",\n      to: \"\",\n      amount: \"\",\n    },\n    transactions: [],\n    calendarDates: [],\n  };\n\n  componentDidMount() {\n    if (this.props.filters.date) {\n      this.setState({\n        date: new Date(this.props.filters.date),\n      });\n      this.getTransactions(new Date(this.props.filters.date));\n    } else {\n      this.setState({\n        date: new Date(),\n      });\n      this.getTransactions(new Date());\n    }\n    this.setCalendar(new Date());\n  }\n\n  getTransactions = (date: any) => {\n    let firstDay = moment(date).startOf(\"month\").startOf(\"week\").get(\"date\");\n    let firstMonth = moment(date).startOf(\"month\").startOf(\"week\").get(\"month\");\n    let firstYear = moment(date).startOf(\"month\").startOf(\"week\").get(\"year\");\n    let lastDay = moment(date).endOf(\"month\").endOf(\"week\").get(\"date\");\n    let lastMonth = moment(date).endOf(\"month\").endOf(\"week\").get(\"month\");\n    let lastYear = moment(date).endOf(\"month\").endOf(\"week\").get(\"year\");\n\n    let from = moment(new Date(firstYear, firstMonth, firstDay));\n    let to = moment(new Date(lastYear, lastMonth, lastDay));\n\n    let config = {\n      headers: {\n        Authorization:\n          \"Bearer \" +\n          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVmZjRjZjcyMDIwNTM5MmM3MGU5MmJlZiIsImlhdCI6MTYxMDIyNzAwOH0.bL8WKWjEe1NP2-07udR7ORGkraoavQZEyjtOUd9-5Po\",\n      },\n    };\n    axios\n      .get(\n        `http://localhost:5000/transaction/specificDatePeriod/${from}/${to}`,\n        config\n      )\n      .then((data) => {\n        this.setState({ transactions: data.data.transactions });\n      });\n  };\n  validateForm = (value: State[\"transaction\"]) => {\n    let errors = {\n      account: \"\",\n      from: \"\",\n      category: \"\",\n      to: \"\",\n      amount: \"\",\n      fees: \"\",\n    };\n\n    if (value.account === \"\" && !(value.type === \"transfer\")) {\n      errors.account = \"Please select a account\";\n    }\n    if (value.type === \"transfer\" && value.from === \"\") {\n      errors.from = \"Please select  from\";\n    }\n    if (value.category === \"\" && !(value.type === \"transfer\")) {\n      errors.category = \"Please select a category\";\n    }\n    if (value.type === \"transfer\" && value.to === \"\") {\n      errors.to = \"Please select  to\";\n    }\n    if (value.amount === \"\") {\n      errors.amount = \"Please select a amount\";\n    }\n\n    if (parseFloat(value.fees) > parseFloat(value.amount)) {\n      errors.fees = \"Fees can't be greater then amount\";\n    }\n    return errors;\n  };\n  handleDelete = (transactionId: any, eventId: any) => {\n    let config = {\n      headers: {\n        Authorization:\n          \"Bearer \" +\n          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVmZjRjZjcyMDIwNTM5MmM3MGU5MmJlZiIsImlhdCI6MTYxMDIyNzAwOH0.bL8WKWjEe1NP2-07udR7ORGkraoavQZEyjtOUd9-5Po\",\n      },\n    };\n    let data = {};\n    axios\n      .put(\n        `http://localhost:5000/transaction/event/delete/${transactionId}/${eventId}`,\n        data,\n        config\n      )\n      .then(() => {\n        this.getTransactions(this.state.date);\n      });\n  };\n  handleNextMonth = async () => {\n    const { date } = this.state;\n    let Month = new Date(date).getMonth();\n    let Year = date.getFullYear();\n    let newMonth = new Date(Year, Month + 1);\n    await this.setState({\n      date: new Date(newMonth),\n      calendarDates: [],\n    });\n    this.getTransactions(new Date(newMonth));\n    this.setCalendar(new Date(newMonth));\n  };\n  handlePreviousMonth = async () => {\n    const { date } = this.state;\n    let Month = new Date(date).getMonth();\n    let Year = date.getFullYear();\n    let newMonth = new Date(Year, Month - 1);\n    await this.setState({\n      date: new Date(newMonth),\n      calendarDates: [],\n    });\n    this.getTransactions(new Date(newMonth));\n    this.setCalendar(new Date(newMonth));\n  };\n  handleOpenTransaction = () => {\n    if (this.state.isAddTransactionOpen) {\n      this.setState({\n        isAddTransactionOpen: false,\n        transaction: {\n          type: \"income\",\n          date: \"\",\n          account: \"\",\n          from: \"\",\n          category: \"\",\n          fees: \"\",\n          to: \"\",\n          amount: \"0\",\n          note: \"\",\n          description: \"\",\n        },\n      });\n    } else {\n      this.setState({\n        isAddTransactionOpen: true,\n      });\n    }\n  };\n  handleOpenInfoModal = (date: any) => {\n    const { isInfoTransactionOpen, transactions, transaction } = this.state;\n\n    if (isInfoTransactionOpen) {\n      this.setState({\n        isInfoTransactionOpen: false,\n        selectedDay: { events: [] },\n      });\n    } else {\n      transactions.map((transaction) => {\n        if (\n          new Date(date).getDate() ===\n            new Date(transaction.createdAt).getDate() &&\n          new Date(date).getMonth() ===\n            new Date(transaction.createdAt).getMonth()\n        ) {\n          return this.setState({\n            selectedDay: transaction,\n          });\n        }\n      });\n      this.setState({\n        isInfoTransactionOpen: true,\n        transaction: { ...transaction, date: new Date(date) },\n      });\n    }\n  };\n  handleInputChange = (event: any) => {\n    this.setState({\n      ...this.state,\n      transaction: {\n        ...this.state.transaction,\n        [event.target.name]: event.target.value,\n      },\n    });\n  };\n\n  handleSave = () => {\n    const { transaction } = this.state;\n    const errors = this.validateForm(transaction);\n    const isValid = Object.values(errors).filter(Boolean).length <= 0;\n\n    if (!isValid) {\n      this.setState({ errors: errors });\n      return;\n    } else {\n      this.setState({ ...this.state, errors: {} });\n    }\n    let incomeOrExpense = {\n      events: [\n        {\n          type: transaction.type.toLowerCase(),\n          currency: \"BG\",\n          date: new Date(\n            new Date(transaction.date).setHours(16, 33, 22)\n          ).toISOString(),\n          account: transaction.account,\n          category: transaction.category,\n          amount: parseFloat(transaction.amount) * 100,\n          note: transaction.note,\n          description: transaction.description,\n        },\n      ],\n      createdAt: new Date(\n        new Date(transaction.date).setHours(0o0, 0o0, 0o0)\n      ).toISOString(),\n    };\n\n    let transfer = {\n      events: [\n        {\n          type: transaction.type.toLowerCase(),\n          currency: \"BG\",\n          date: new Date(\n            new Date(transaction.date).setHours(13, 21, 30)\n          ).toISOString(),\n          from: transaction.from,\n          to: transaction.to,\n          amount: parseFloat(transaction.amount) * 100,\n          fees: parseFloat(transaction.fees) * 100,\n          note: transaction.note,\n          description: transaction.description,\n        },\n      ],\n      createdAt: new Date(\n        new Date(transaction.date).setHours(0o0, 0o0, 0o0)\n      ).toISOString(),\n    };\n\n    let config = {\n      headers: {\n        Authorization:\n          \"Bearer \" +\n          \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVmZjRjZjcyMDIwNTM5MmM3MGU5MmJlZiIsImlhdCI6MTYxMDIyNzAwOH0.bL8WKWjEe1NP2-07udR7ORGkraoavQZEyjtOUd9-5Po\",\n      },\n    };\n\n    if (transaction.type === \"transfer\") {\n      axios\n        .post(`http://localhost:5000/transaction/create`, transfer, config)\n        .then(() => {\n          this.getTransactions(this.state.date);\n          this.setState({\n            isAddTransactionOpen: false,\n            transaction: {\n              type: \"income\",\n              date: \"\",\n              account: \"\",\n              from: \"\",\n              fees: \"0\",\n              category: \"\",\n              to: \"\",\n              amount: \"0\",\n              note: \"\",\n              description: \"\",\n            },\n          });\n        });\n    } else {\n      axios\n        .post(\n          `http://localhost:5000/transaction/create`,\n          incomeOrExpense,\n          config\n        )\n        .then(() => {\n          this.getTransactions(this.state.date);\n          this.setState({\n            isAddTransactionOpen: false,\n            transaction: {\n              type: \"income\",\n              date: \"\",\n              account: \"\",\n              from: \"\",\n              category: \"\",\n              fees: \"0\",\n              to: \"\",\n              amount: \"0\",\n              note: \"\",\n              description: \"\",\n            },\n          });\n        });\n    }\n  };\n\n  handleGetSpecificDay = async (event: any) => {\n    await this.setState({ specificDay: event });\n  };\n\n  // handleSetEvent = (date: any, view: any) => {\n  //   return (\n  //     <div>\n  //       {this.state.events.map((event) => (\n  //         <div onClick={() => this.handleGetSpecificDay(event)}>\n  //           {view === \"month\" &&\n  //           date.getDate() === new Date(event.createdAt).getDate() &&\n  //           date.getMonth() === new Date(event.createdAt).getMonth() &&\n  //           date.getFullYear() === new Date(event.createdAt).getFullYear() ? (\n  //             <div className={TransactionStyl.content_day}>\n  //               <div className={TransactionStyl.income}>\n  //                 ${(event.income / 100).toFixed(2)}\n  //               </div>\n  //               <div className={TransactionStyl.expense}>\n  //                 ${(event.expense / 100).toFixed(2)}\n  //               </div>\n  //             </div>\n  //           ) : null}\n  //         </div>\n  //       ))}\n  //     </div>\n  //   );\n  // };\n\n  setCalendar = (date: any) => {\n    const { calendarDates } = this.state;\n    let firstDay = moment(date).startOf(\"month\").get(\"date\");\n    let firstMonth = moment(date).startOf(\"month\").get(\"month\");\n    let firstYear = moment(date).startOf(\"month\").get(\"year\");\n\n    let fromDate = new Date(firstYear, firstMonth, firstDay);\n\n    let lastDay = moment(date).endOf(\"month\").get(\"date\");\n    let lastMonth = moment(date).endOf(\"month\").get(\"month\");\n    let lastYear = moment(date).endOf(\"month\").get(\"year\");\n\n    let toDate = new Date(lastYear, lastMonth, lastDay);\n\n    if (fromDate.getDay() !== 0) {\n      this.setFirstWeek(date);\n    }\n\n    for (let i = 1; i <= toDate.getDate(); i++) {\n      calendarDates.push({\n        date: new Date(date.getFullYear(), date.getMonth(), i),\n      });\n    }\n    if (toDate.getDay() !== 6) this.setLastWeek(date);\n  };\n  setFirstWeek = (date: any) => {\n    let firstDay = moment(date).startOf(\"month\").startOf(\"week\").get(\"date\");\n    let firstMonth = moment(date).startOf(\"month\").startOf(\"week\").get(\"month\");\n    let firstYear = moment(date).startOf(\"month\").startOf(\"week\").get(\"year\");\n\n    let fromDate = new Date(firstYear, firstMonth, firstDay);\n\n    let lastDay = moment(fromDate).endOf(\"month\").get(\"date\");\n    let lastMonth = moment(fromDate).endOf(\"month\").get(\"month\");\n    let lastYear = moment(fromDate).endOf(\"month\").get(\"year\");\n\n    let toDate = new Date(lastYear, lastMonth, lastDay);\n\n    for (let i = fromDate.getDate(); i <= toDate.getDate(); i++) {\n      this.state.calendarDates.push({\n        date: new Date(fromDate.getFullYear(), fromDate.getMonth(), i),\n      });\n    }\n  };\n  setLastWeek = (date: any) => {\n    let lastDay = moment(date).endOf(\"month\").endOf(\"week\").get(\"date\");\n    let lastMonth = moment(date).endOf(\"month\").endOf(\"week\").get(\"month\");\n    let lastYear = moment(date).endOf(\"month\").endOf(\"week\").get(\"year\");\n\n    let toDate = new Date(lastYear, lastMonth, lastDay);\n\n    for (let i = 1; i <= toDate.getDate(); i++) {\n      this.state.calendarDates.push({\n        date: new Date(toDate.getFullYear(), toDate.getMonth(), i),\n      });\n    }\n  };\n\n  render() {\n    const {\n      date,\n      errors,\n      isTransfer,\n      selectedDay,\n      transaction,\n      transactions,\n      calendarDates,\n      isAddTransactionOpen,\n      isInfoTransactionOpen,\n    } = this.state;\n    return (\n      <div className={TransactionStyl.wrapper}>\n        <NavBarMenu\n          date={date}\n          handleNextMonth={this.handleNextMonth}\n          handlePreviousMonth={this.handlePreviousMonth}\n        />\n        <NewCalendar\n          handleOpenInfoModal={this.handleOpenInfoModal}\n          transactions={transactions}\n          calendarDate={calendarDates}\n          date={date}\n        />\n        <InfoModal\n          handleDelete={this.handleDelete}\n          selectedDay={selectedDay}\n          transaction={transaction}\n          isInfoTransactionOpen={isInfoTransactionOpen}\n          handleOpenInfoModal={this.handleOpenInfoModal}\n          handleOpenTransaction={this.handleOpenTransaction}\n        />\n        <AddTransactionModal\n          errors={errors}\n          isTransfer={isTransfer}\n          transaction={transaction}\n          handleSave={this.handleSave}\n          handleInputChange={this.handleInputChange}\n          isAddTransactionOpen={isAddTransactionOpen}\n          handleOpenTransaction={this.handleOpenTransaction}\n        />\n      </div>\n    );\n  }\n}\n\nexport default TransactionContainer;\n\n/*<Calendar*/\n\n/*  activeStartDate={this.state.date}*/\n\n/*  // onChange={(date) => console.log(date)}*/\n\n/*  calendarType={\"US\"}*/\n\n/*  className={TransactionStyl.calendar}*/\n\n/*  onClickDay={(date) => this.handleOpenInfoModal(date)}*/\n\n/*  showNavigation={false}*/\n\n/*  tileContent={({ date, view }) => this.handleSetEvent(date, view)}*/\n\n/*/>*/\n","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/store/types.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/layout/sideBar/SideBar.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/layout/navBarMenu/NavBarMenu.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/login/components/SocialNetworks.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/login/components/LoginForm.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/login/components/RegistrationForm.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/store/actions/usersActions.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/transaction/components/infoRow/InfoRow.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/transaction/monthlyContainer/NewCalendar.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/transaction/components/infoModal/InfoModal.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/transaction/components/addTransactionModal/AddTransactionModal.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/transaction/dailyContainer/components/dailyTableRow/DailyTableRow.tsx",["177","178"],"import React from \"react\";\nimport DailyTableRowStyle from \"./DailyTableRow.module.css\";\n\ntype Props = {\n  event: {\n    _id?: string;\n    type: string;\n    date: any;\n    account?: string;\n    from?: string;\n    to?: string;\n    fees: number;\n    category?: string;\n    amount: number;\n    note: string;\n    description: string;\n  };\n};\nconst DailyTableRow: React.FC<Props> = ({ event }) => {\n  return (\n    <tr>\n      <th className={DailyTableRowStyle.account}>\n        {event.type == \"transfer\" ? \"Transfer\" : event.category}\n      </th>\n      <th className={DailyTableRowStyle.category}>\n        <div>{event.note}</div>\n        <div>\n          {event.type == \"transfer\" ? (\n            <div>\n              {event.from}\n              {\"--->\"}\n              {event.to}\n            </div>\n          ) : (\n            event.account\n          )}\n        </div>\n      </th>\n      <th className={DailyTableRowStyle.income}>\n        {event.type === \"income\" ? (event.amount / 100).toFixed(2) : null}\n      </th>\n      <th\n        className={\n          event.type === \"expense\"\n            ? DailyTableRowStyle.expense\n            : DailyTableRowStyle.transfer\n        }\n      >\n        <div>\n          {event.type === \"expense\" || event.type === \"transfer\"\n            ? (event.amount / 100).toFixed(2)\n            : null}\n          <div className={DailyTableRowStyle.fees}>\n            {event.type === \"transfer\" ? (event.fees / 100).toFixed(2) : null}\n          </div>\n        </div>\n      </th>\n    </tr>\n  );\n};\n\nexport default DailyTableRow;\n","/home/niksan/Desktop/Projects/budget-tracker/src/desktop/modules/transaction/components/addTransactionModal/form/Form.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/desktop/helpers/AuthRoute.tsx",[],{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":15,"column":1,"nodeType":"185","endLine":31,"endColumn":2},{"ruleId":"186","severity":1,"message":"187","line":29,"column":10,"nodeType":"188","messageId":"189","endLine":29,"endColumn":22},{"ruleId":"186","severity":1,"message":"190","line":31,"column":10,"nodeType":"188","messageId":"189","endLine":31,"endColumn":19},{"ruleId":"186","severity":1,"message":"191","line":32,"column":10,"nodeType":"188","messageId":"189","endLine":32,"endColumn":20},{"ruleId":"192","severity":1,"message":"193","line":238,"column":38,"nodeType":"194","messageId":"195","endLine":238,"endColumn":40},{"ruleId":"196","severity":1,"message":"197","line":23,"column":21,"nodeType":"198","messageId":"199","endLine":23,"endColumn":23},{"ruleId":"196","severity":1,"message":"197","line":28,"column":23,"nodeType":"198","messageId":"199","endLine":28,"endColumn":25},"no-native-reassign",["200"],"no-negated-in-lhs",["201"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","@typescript-eslint/no-unused-vars","'transactions' is assigned a value but never used.","Identifier","unusedVar","'sumIncome' is assigned a value but never used.","'sumExpense' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]