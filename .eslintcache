[{"/home/george/Documents/Projects/budget-tracker/src/index.tsx":"1","/home/george/Documents/Projects/budget-tracker/src/reportWebVitals.ts":"2","/home/george/Documents/Projects/budget-tracker/src/App.tsx":"3","/home/george/Documents/Projects/budget-tracker/src/routes.tsx":"4","/home/george/Documents/Projects/budget-tracker/src/pages/loginPage/LoginPage.tsx":"5","/home/george/Documents/Projects/budget-tracker/src/pages/transactionPage/WeeklyPage.tsx":"6","/home/george/Documents/Projects/budget-tracker/src/pages/transactionPage/DailyPage.tsx":"7","/home/george/Documents/Projects/budget-tracker/src/pages/transactionPage/MonthlyPage.tsx":"8","/home/george/Documents/Projects/budget-tracker/src/pages/transactionPage/YearlyPage.tsx":"9","/home/george/Documents/Projects/budget-tracker/src/pages/homePage/HomePage.tsx":"10","/home/george/Documents/Projects/budget-tracker/src/pages/statsPage/WeeklyPage.tsx":"11","/home/george/Documents/Projects/budget-tracker/src/pages/statsPage/MonthlyPage.tsx":"12","/home/george/Documents/Projects/budget-tracker/src/pages/statsPage/DailyPage.tsx":"13","/home/george/Documents/Projects/budget-tracker/src/pages/statsPage/YearlyPage.tsx":"14","/home/george/Documents/Projects/budget-tracker/src/modules/login/LoginContainer.tsx":"15","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/weeklyContainer/WeeklyContainer.tsx":"16","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/yearlyContainer/YearlyContainer.tsx":"17","/home/george/Documents/Projects/budget-tracker/src/layout/navBar/NavBar.tsx":"18","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/dailyContainer/DailyContainer.tsx":"19","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/monthlyContainer/MonthlyContainer.tsx":"20","/home/george/Documents/Projects/budget-tracker/src/modules/stats/weeklyContainer/WeeklyContainer.tsx":"21","/home/george/Documents/Projects/budget-tracker/src/modules/stats/yearlyContainer/YearlyContainer.tsx":"22","/home/george/Documents/Projects/budget-tracker/src/modules/stats/dailyContainer/DailyContainer.tsx":"23","/home/george/Documents/Projects/budget-tracker/src/modules/stats/monthlyContainer/MonthlyContainer.tsx":"24","/home/george/Documents/Projects/budget-tracker/src/helpers/Variables.tsx":"25","/home/george/Documents/Projects/budget-tracker/src/helpers/Validation.tsx":"26","/home/george/Documents/Projects/budget-tracker/src/modules/login/components/LoginForm.tsx":"27","/home/george/Documents/Projects/budget-tracker/src/modules/login/components/RegistrationForm.tsx":"28","/home/george/Documents/Projects/budget-tracker/src/modules/login/components/SocialNetworks.tsx":"29","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/service/TransactionService.tsx":"30","/home/george/Documents/Projects/budget-tracker/src/layout/sideBar/SideBar.tsx":"31","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/actions/transactionActions.tsx":"32","/home/george/Documents/Projects/budget-tracker/src/store/actions/usersActions.tsx":"33","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/AddTransactionModal.tsx":"34","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/infoModal/InfoModal.tsx":"35","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/dailyContainer/components/dailyTableRow/DailyTableRow.tsx":"36","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/dailyContainer/components/dailyTableHeader/DailyTableHeader.tsx":"37","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/actionTypes.tsx":"38","/home/george/Documents/Projects/budget-tracker/src/store/types.tsx":"39","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/Form.tsx":"40","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/components/FeesInput.tsx":"41","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/components/InputTitles.tsx":"42","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/components/SelectInputs.tsx":"43","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/components/AmountInput.tsx":"44","/home/george/Documents/Projects/budget-tracker/src/store/store.tsx":"45","/home/george/Documents/Projects/budget-tracker/src/store/reducers/index.tsx":"46","/home/george/Documents/Projects/budget-tracker/src/store/reducers/userReducer.tsx":"47","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/reducers/transactionReducer.tsx":"48","/home/george/Documents/Projects/budget-tracker/src/layout/header/Header.tsx":"49","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/weeklyContainer/components/WeeklyTableRow.tsx":"50","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/yearlyContainer/components/YearlyTableRow.tsx":"51","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/infoModal/components/TableRow.tsx":"52","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/InfoTableHead/InfoTableHead.tsx":"53","/home/george/Documents/Projects/budget-tracker/src/layout/accountMenu/AccountMenu.tsx":"54","/home/george/Documents/Projects/budget-tracker/src/layout/addTranasctionButton/AddTransactionButton.tsx":"55","/home/george/Documents/Projects/budget-tracker/src/modules/stats/components/StatsForm.tsx":"56","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/monthlyContainer/Calendar/Calendar.tsx":"57","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/monthlyContainer/Calendar/CalendarDate.tsx":"58","/home/george/Documents/Projects/budget-tracker/src/pages/exportPage/ExportPage.tsx":"59","/home/george/Documents/Projects/budget-tracker/src/modules/export/ExportContainer.tsx":"60","/home/george/Documents/Projects/budget-tracker/src/models/Error.ts":"61","/home/george/Documents/Projects/budget-tracker/src/helpers/AuthProvider.tsx":"62"},{"size":622,"mtime":1615465342416,"results":"63","hashOfConfig":"64"},{"size":425,"mtime":1608638830636,"results":"65","hashOfConfig":"64"},{"size":222,"mtime":1617840483577,"results":"66","hashOfConfig":"64"},{"size":1647,"mtime":1617748955948,"results":"67","hashOfConfig":"64"},{"size":221,"mtime":1617197432170,"results":"68","hashOfConfig":"64"},{"size":436,"mtime":1617197432170,"results":"69","hashOfConfig":"64"},{"size":430,"mtime":1617197432170,"results":"70","hashOfConfig":"64"},{"size":436,"mtime":1615465342428,"results":"71","hashOfConfig":"64"},{"size":436,"mtime":1617197432170,"results":"72","hashOfConfig":"64"},{"size":195,"mtime":1617197432170,"results":"73","hashOfConfig":"64"},{"size":298,"mtime":1615465342428,"results":"74","hashOfConfig":"64"},{"size":304,"mtime":1617198262731,"results":"75","hashOfConfig":"64"},{"size":292,"mtime":1615465342428,"results":"76","hashOfConfig":"64"},{"size":298,"mtime":1615465342428,"results":"77","hashOfConfig":"64"},{"size":4197,"mtime":1617856293909,"results":"78","hashOfConfig":"64"},{"size":2717,"mtime":1617648912708,"results":"79","hashOfConfig":"64"},{"size":3453,"mtime":1617648916760,"results":"80","hashOfConfig":"64"},{"size":3640,"mtime":1617289477090,"results":"81","hashOfConfig":"64"},{"size":3259,"mtime":1617751109922,"results":"82","hashOfConfig":"64"},{"size":10902,"mtime":1617648892905,"results":"83","hashOfConfig":"64"},{"size":874,"mtime":1617310121071,"results":"84","hashOfConfig":"64"},{"size":874,"mtime":1617310131079,"results":"85","hashOfConfig":"64"},{"size":872,"mtime":1617310143115,"results":"86","hashOfConfig":"64"},{"size":925,"mtime":1617307454316,"results":"87","hashOfConfig":"64"},{"size":3272,"mtime":1617486545561,"results":"88","hashOfConfig":"64"},{"size":2043,"mtime":1617855944914,"results":"89","hashOfConfig":"64"},{"size":1357,"mtime":1617856035594,"results":"90","hashOfConfig":"64"},{"size":1692,"mtime":1615465342420,"results":"91","hashOfConfig":"64"},{"size":967,"mtime":1615465342420,"results":"92","hashOfConfig":"64"},{"size":2452,"mtime":1617751271877,"results":"93","hashOfConfig":"64"},{"size":1265,"mtime":1617197432162,"results":"94","hashOfConfig":"64"},{"size":884,"mtime":1617197432162,"results":"95","hashOfConfig":"64"},{"size":390,"mtime":1617197432170,"results":"96","hashOfConfig":"64"},{"size":4837,"mtime":1617484335369,"results":"97","hashOfConfig":"64"},{"size":2558,"mtime":1617485631012,"results":"98","hashOfConfig":"64"},{"size":1996,"mtime":1617303635503,"results":"99","hashOfConfig":"64"},{"size":1444,"mtime":1617309785677,"results":"100","hashOfConfig":"64"},{"size":309,"mtime":1617197432162,"results":"101","hashOfConfig":"64"},{"size":69,"mtime":1615465342428,"results":"102","hashOfConfig":"64"},{"size":3890,"mtime":1617493520370,"results":"103","hashOfConfig":"64"},{"size":1215,"mtime":1617296942408,"results":"104","hashOfConfig":"64"},{"size":1008,"mtime":1617197432166,"results":"105","hashOfConfig":"64"},{"size":899,"mtime":1617403449237,"results":"106","hashOfConfig":"64"},{"size":1311,"mtime":1617296790595,"results":"107","hashOfConfig":"64"},{"size":382,"mtime":1615465342428,"results":"108","hashOfConfig":"64"},{"size":278,"mtime":1615465342428,"results":"109","hashOfConfig":"64"},{"size":568,"mtime":1617013802423,"results":"110","hashOfConfig":"64"},{"size":2084,"mtime":1617197432170,"results":"111","hashOfConfig":"64"},{"size":1587,"mtime":1617751100813,"results":"112","hashOfConfig":"64"},{"size":1010,"mtime":1617309852324,"results":"113","hashOfConfig":"64"},{"size":1098,"mtime":1617197432170,"results":"114","hashOfConfig":"64"},{"size":1544,"mtime":1617197432166,"results":"115","hashOfConfig":"64"},{"size":868,"mtime":1617197432166,"results":"116","hashOfConfig":"64"},{"size":1024,"mtime":1617197432162,"results":"117","hashOfConfig":"64"},{"size":3600,"mtime":1617751166372,"results":"118","hashOfConfig":"64"},{"size":1436,"mtime":1617199033669,"results":"119","hashOfConfig":"64"},{"size":1345,"mtime":1617305244351,"results":"120","hashOfConfig":"64"},{"size":1837,"mtime":1617485794341,"results":"121","hashOfConfig":"64"},{"size":287,"mtime":1617398321382,"results":"122","hashOfConfig":"64"},{"size":725,"mtime":1617481961588,"results":"123","hashOfConfig":"64"},{"size":142,"mtime":1617197432162,"results":"124","hashOfConfig":"64"},{"size":933,"mtime":1617840456409,"results":"125","hashOfConfig":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},"1me94a7",{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"128"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"128"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"128"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"128"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"128"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"128"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"128"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"128"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"128"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"128"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"128"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"128"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"128"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"128"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"128"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"128"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"232"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"128"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"128"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"128"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"128"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"128"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"128"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"269"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"269"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"128"},"/home/george/Documents/Projects/budget-tracker/src/index.tsx",[],["279","280"],"/home/george/Documents/Projects/budget-tracker/src/reportWebVitals.ts",[],"/home/george/Documents/Projects/budget-tracker/src/App.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/routes.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/loginPage/LoginPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/transactionPage/WeeklyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/transactionPage/DailyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/transactionPage/MonthlyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/transactionPage/YearlyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/homePage/HomePage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/statsPage/WeeklyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/statsPage/MonthlyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/statsPage/DailyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/pages/statsPage/YearlyPage.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/login/LoginContainer.tsx",["281"],"import React, { useState } from \"react\";\nimport { Tabs, TabList, TabPanel, Tab } from \"react-tabs\";\nimport { useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport LoginForm from \"./components/LoginForm\";\nimport RegistrationForm from \"./components/RegistrationForm\";\nimport SocialNetworks from \"./components/SocialNetworks\";\nimport { validateLogin } from \"../../helpers/Validation\";\nimport { singIn } from \"../../store/actions/usersActions\";\nimport style from \"./LoginContainerStyle.module.css\";\n\nconst LoginContainer = () => {\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n  const [isLogin, setIsLogin] = useState(true);\n  const [errors, setErrors] = useState({\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  const dispatch = useDispatch();\n\n  const handleInputChange = (e: any) =>\n    setUser({\n      ...user,\n      [e.currentTarget.name]: e.currentTarget.value,\n    });\n\n  const handleEnterPress = (event: any) => {\n    const key = event.key;\n  };\n  const handleLogin = async () => {\n    console.log(\"sdfsdf\");\n    const errors = validateLogin(user, isLogin);\n    console.log(errors);\n    const isValid = Object.values(errors).filter(Boolean).length <= 0;\n    if (!isValid) {\n      setErrors({\n        email: errors.email,\n        password: errors.password,\n        confirmPassword: errors.confirmPassword,\n      });\n      return;\n    }\n    localStorage.removeItem(\"jwt\");\n    let loggedUser = await axios.post(`http://localhost:5000/signIn`, user);\n\n    if (loggedUser.data.user) {\n      dispatch(singIn(loggedUser.data));\n      window.location.pathname = \"/\";\n      await setErrors({ email: \"\", password: \"\", confirmPassword: \"\" });\n    } else {\n      setErrors({\n        email: \"\",\n        password: loggedUser.data.errorMSG,\n        confirmPassword: \"\",\n      });\n    }\n  };\n  const handleRegister = async () => {\n    const errors = validateLogin(user, isLogin);\n    const isValid = Object.values(errors).filter(Boolean).length <= 0;\n    if (!isValid) {\n      setErrors({\n        email: errors.email,\n        password: errors.password,\n        confirmPassword: errors.confirmPassword,\n      });\n      return;\n    }\n    localStorage.removeItem(\"jwt\");\n\n    let newUser = {\n      username: user.email,\n      email: user.email,\n      password: user.password,\n      type: \"admin\",\n      currency: \"BG\",\n    };\n    try {\n      let signUp = await axios.post(`http://localhost:5000/signUp`, newUser);\n\n      if (signUp.data.user) {\n        dispatch(singIn(signUp.data));\n        window.location.pathname = \"/\";\n        setErrors({ email: \"\", password: \"\", confirmPassword: \"\" });\n      }\n    } catch (e) {\n      console.error(e);\n      return [];\n    }\n  };\n  return (\n    <div className={style.container}>\n      <div className={style.login_form}>\n        <Tabs selectedTabClassName={style.selected_tab}>\n          <TabList className={style.tab_list}>\n            <Tab\n              className={style.tab}\n              onClick={() => {\n                setUser({ email: \"\", password: \"\", confirmPassword: \"\" });\n                setErrors({ email: \"\", password: \"\", confirmPassword: \"\" });\n                setIsLogin(true);\n              }}\n            >\n              Sign In\n            </Tab>\n            <Tab\n              className={style.tab}\n              onClick={() => {\n                setUser({ email: \"\", password: \"\", confirmPassword: \"\" });\n                setErrors({ email: \"\", password: \"\", confirmPassword: \"\" });\n                setIsLogin(false);\n              }}\n            >\n              Register\n            </Tab>\n          </TabList>\n          <TabPanel>\n            <LoginForm\n              Submit={handleLogin}\n              errors={errors}\n              handleInput={handleInputChange}\n              handleEnterPress={handleEnterPress}\n            />\n          </TabPanel>\n          <TabPanel>\n            <RegistrationForm\n              Submit={handleRegister}\n              errors={errors}\n              handleInput={handleInputChange}\n            />\n          </TabPanel>\n        </Tabs>\n        <SocialNetworks />\n      </div>\n    </div>\n  );\n};\nexport default LoginContainer;\n","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/weeklyContainer/WeeklyContainer.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/yearlyContainer/YearlyContainer.tsx",["282"],"import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Moment from \"moment\";\nimport { getYearlyOrWeekly } from \"../service/TransactionService\";\nimport { Month, TransactionReducer } from \"../../../models/Transaction\";\nimport { UserReducer } from \"../../../models/User\";\nimport NavBarMenu from \"../../../layout/navBar/NavBar\";\nimport InfoTableHead from \"../components/InfoTableHead/InfoTableHead\";\nimport YearlyTableRow from \"./components/YearlyTableRow\";\nimport styles from \"./YearlyStyle.module.css\";\n\nconst YearlyContainer = () => {\n  const [monthsInYear, setMonthsInYear] = useState<Month[]>([]);\n  const [sumIncome, setSumIncome] = useState(0);\n  const [sumExpense, setSumExpense] = useState(0);\n\n  const stateTransaction = useSelector(\n    (state: {\n      userReducer: UserReducer;\n      transactionReducer: TransactionReducer;\n    }) => state.transactionReducer\n  );\n\n  useEffect(() => {\n    getYear(stateTransaction.date);\n  }, [stateTransaction.date]);\n\n  const getYear = async (date: Date) => {\n    let months: Month[] = [];\n\n    for (let i = 0; i <= 11; i++) {\n      months.push({\n        from: Moment(date).set(\"month\", i).startOf(\"month\").toDate(),\n        to: Moment(date).set(\"month\", i).endOf(\"month\").toDate(),\n        income: 0,\n        expense: 0,\n      });\n    }\n\n    let data = await getYearlyOrWeekly(months);\n\n    if (Moment(date).get(\"year\") < Moment().get(\"year\")) {\n      setMonthsInYear(data.months.reverse());\n      setSumExpense(data.sumExpense);\n      setSumIncome(data.sumIncome);\n    }\n    if (Moment(date).get(\"year\") === Moment().get(\"year\")) {\n      setSumExpense(data.sumExpense);\n      setSumIncome(data.sumIncome);\n      setMonths(data.months);\n    }\n    if (Moment(date).get(\"year\") > Moment().get(\"year\")) {\n      setMonthsInYear(\n        data.months\n          .filter((month: Month) => month.expense > 0 || month.income > 0)\n          .reverse()\n      );\n      setSumExpense(data.sumExpense);\n      setSumIncome(data.sumIncome);\n    }\n  };\n\n  const setMonths = (months: Month[]) => {\n    let year: Month[] = [];\n\n    const newMonths: Month[] = months.filter(\n      month => month.expense > 0 || month.income > 0\n    );\n\n    let lastMonth: number = Moment().get(\"month\");\n\n    if (\n      newMonths.length > 0 &&\n      lastMonth < Moment(newMonths[newMonths.length - 1].from).get(\"month\")\n    ) {\n      lastMonth = Moment(newMonths[newMonths.length - 1].from).get(\"month\");\n    }\n\n    for (let i = 0; i <= lastMonth; i++) {\n      if (\n        newMonths.filter(month => Moment(month.from).get(\"month\") === i)\n          .length > 0\n      ) {\n        year.push(\n          newMonths.filter(month => Moment(month.from).get(\"month\") === i)[0]\n        );\n      } else {\n        year.push({\n          from: Moment().startOf(\"month\").set(\"month\", i).toDate(),\n          to: Moment().endOf(\"month\").set(\"month\", i).toDate(),\n          income: 0,\n          expense: 0,\n        });\n      }\n    }\n\n    setMonthsInYear(year.reverse());\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <NavBarMenu />\n      <div className={styles.container}>\n        <table className={styles.table}>\n          <InfoTableHead sumIncome={sumIncome} sumExpense={sumExpense} />\n          <tbody>\n            {monthsInYear.map(month => (\n              <YearlyTableRow month={month} />\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default YearlyContainer;\n","/home/george/Documents/Projects/budget-tracker/src/layout/navBar/NavBar.tsx",["283","284"],"import React, { useCallback } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Moment from \"moment\";\nimport {\n  handleNextMonth,\n  handleNextYear,\n  handlePreviousMonth,\n  handlePreviousYear,\n} from \"../../modules/transaction/actions/transactionActions\";\nimport {\n  isTransactionContainer,\n  isSelectedTitle,\n} from \"../../helpers/Variables\";\nimport { TransactionReducer } from \"../../models/Transaction\";\nimport styles from \"./NavBarStyle.module.css\";\n\nconst NavBarMenu = () => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const state = useSelector(\n    (state: { transactionReducer: TransactionReducer }) =>\n      state.transactionReducer\n  );\n\n  const handlePreviousYearOrMonth = useCallback(() => {\n    isSelectedTitle(location.pathname, \"yearly\")\n      ? dispatch(handlePreviousYear())\n      : dispatch(handlePreviousMonth());\n  }, []);\n  const handleNextYearOrMonth = useCallback(() => {\n    isSelectedTitle(location.pathname, \"yearly\")\n      ? dispatch(handleNextYear())\n      : dispatch(handleNextMonth());\n  }, []);\n  return (\n    <div className={styles.container}>\n      <div className={styles.container_navigation}>\n        <Link\n          to={\n            isTransactionContainer(location.pathname)\n              ? \"/transaction/daily\"\n              : \"/stats/daily\"\n          }\n          className={\n            isSelectedTitle(location.pathname, \"daily\")\n              ? styles.title_selected\n              : styles.title\n          }\n        >\n          Daily\n        </Link>\n\n        <Link\n          to={\n            isTransactionContainer(location.pathname)\n              ? \"/transaction/weekly\"\n              : \"/stats/weekly\"\n          }\n          className={\n            isSelectedTitle(location.pathname, \"weekly\")\n              ? styles.title_selected\n              : styles.title\n          }\n        >\n          Weekly\n        </Link>\n\n        <Link\n          to={\n            isTransactionContainer(location.pathname)\n              ? \"/transaction/monthly\"\n              : \"/stats/monthly\"\n          }\n          className={\n            isSelectedTitle(location.pathname, \"monthly\")\n              ? styles.title_selected\n              : styles.title\n          }\n        >\n          Monthly\n        </Link>\n\n        <Link\n          to={\n            isTransactionContainer(location.pathname)\n              ? \"/transaction/yearly\"\n              : \"/stats/yearly\"\n          }\n          className={\n            isSelectedTitle(location.pathname, \"yearly\")\n              ? styles.title_selected\n              : styles.title\n          }\n        >\n          Yearly\n        </Link>\n\n        <Link\n          to={\n            isTransactionContainer(location.pathname)\n              ? \"/transaction/period\"\n              : \"/stats/period\"\n          }\n          className={\n            isSelectedTitle(location.pathname, \"period\")\n              ? styles.title_selected\n              : styles.title\n          }\n        >\n          Period\n        </Link>\n      </div>\n      <div className={styles.change_month_content}>\n        <div\n          className={styles.change_month_button}\n          onClick={handlePreviousYearOrMonth}\n        >\n          {\"<\"}\n        </div>\n        {isSelectedTitle(location.pathname, \"yearly\")\n          ? Moment(state.date).format(\"YYYY\")\n          : Moment(state.date).format(\"MMM YYYY\")}\n        <div\n          className={styles.change_month_button}\n          onClick={handleNextYearOrMonth}\n        >\n          {\">\"}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NavBarMenu;\n","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/dailyContainer/DailyContainer.tsx",["285"],"import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Moment from \"moment\";\nimport NavBarMenu from \"../../../layout/navBar/NavBar\";\nimport InfoTableHead from \"../components/InfoTableHead/InfoTableHead\";\nimport DailyTableRow from \"./components/dailyTableRow/DailyTableRow\";\nimport DailyTableHeader from \"./components/dailyTableHeader/DailyTableHeader\";\nimport {\n  TransactionReducer,\n  TransactionWithAmountNumber,\n  TransactionEventWithAmountNumber,\n  TransactionEvent,\n} from \"../../../models/Transaction\";\nimport { getSpecificDatePeriod } from \"../service/TransactionService\";\nimport {\n  firstDateOfTheMonth,\n  lastDateOfTheMonth,\n} from \"../../../helpers/Variables\";\nimport { setTransaction } from \"../actions/transactionActions\";\nimport { UserReducer } from \"../../../models/User\";\nimport styles from \"./DailyStyle.module.css\";\nimport \"../../../scss/variables.scss\";\nconst DailyContainer = () => {\n  const [transactions, setTransactions] = useState<\n    TransactionWithAmountNumber[]\n  >([]);\n  const [sumIncome, setSumIncome] = useState(0);\n  const [sumExpense, setSumExpense] = useState(0);\n\n  const dispatch = useDispatch();\n\n  const stateTransaction = useSelector(\n    (state: { transactionReducer: TransactionReducer }) =>\n      state.transactionReducer\n  );\n\n  useEffect(() => {\n    getTransactions(stateTransaction.date);\n  }, [stateTransaction.date]);\n\n  const getTransactions = async (date: Date) => {\n    const data = await getSpecificDatePeriod(\n      firstDateOfTheMonth(date).toDate(),\n      lastDateOfTheMonth(date).toDate()\n    );\n    setTransactions(data.transactions);\n    setSumExpense(data.sumExpense);\n    setSumIncome(data.sumIncome);\n  };\n\n  const handleSelectEvent = (\n    transactioEvent: TransactionEventWithAmountNumber,\n    transactionId: string\n  ) => {\n    const Event: TransactionEvent = {\n      ...transactioEvent,\n      amount: (transactioEvent.amount / 100).toFixed(2),\n      fees: (transactioEvent.fees! / 100).toFixed(2),\n      transactionId: transactionId,\n    };\n\n    dispatch(setTransaction(Event));\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <NavBarMenu />\n      <div className={styles.container}>\n        <table className={styles.table}>\n          <InfoTableHead sumIncome={sumIncome} sumExpense={sumExpense} />\n\n          {transactions\n            .sort(function (a, b) {\n              return (\n                Moment(a.createdAt).get(\"date\") -\n                Moment(b.createdAt).get(\"date\")\n              );\n            })\n            .reverse()\n            .map((transaction: TransactionWithAmountNumber) => (\n              <tbody className={styles.table_container}>\n                <DailyTableHeader transaction={transaction} />\n\n                {transaction.events.map(\n                  (event: TransactionEventWithAmountNumber) => (\n                    <DailyTableRow\n                      transaction={transaction}\n                      transactionEvent={event}\n                      key={event._id}\n                      handleSelectEvent={handleSelectEvent}\n                    />\n                  )\n                )}\n              </tbody>\n            ))}\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default DailyContainer;\n","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/monthlyContainer/MonthlyContainer.tsx",["286"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Moment from \"moment\";\nimport AddTransactionModal from \"../components/addTransactionModal/AddTransactionModal\";\nimport NavBarMenu from \"../../../layout/navBar/NavBar\";\nimport InfoModal from \"../components/infoModal/InfoModal\";\nimport Calendar from \"./Calendar/Calendar\";\nimport { State as StateTransaction } from \"../reducers/transactionReducer\";\nimport {\n  firstDateOfFirstWeekOfTheMonth,\n  transaction,\n  firstDateOfTheMonth,\n  lastDateOfTheMonth,\n  lastDateOfLastWeekOfTheMonth,\n  isTheSameDate,\n} from \"../../../helpers/Variables\";\nimport { validateTransaction } from \"../../../helpers/Validation\";\nimport {\n  createTransactionRequest,\n  deleteTransaction,\n  editTransaction,\n  getSpecificDatePeriod,\n} from \"../service/TransactionService\";\nimport {\n  handleInput,\n  setDate,\n  setTransaction,\n} from \"../actions/transactionActions\";\nimport {\n  Transaction,\n  TransactionEvent,\n  TransactionReducer,\n} from \"../../../models/Transaction\";\nimport { HandleInput } from \"../../../models/Function\";\nimport { Error } from \"../../../models/Error\";\nimport \"../../../scss/variables.scss\";\n\ntype Props = {\n  filters: any;\n  stateTransaction: StateTransaction;\n  handleInput: (event: HandleInput) => void;\n  setTransaction: (event: TransactionEvent) => void;\n  setDate: (date: Date) => void;\n};\n\ntype State = {\n  isAddTransactionOpen: boolean;\n  isInfoTransactionOpen: boolean;\n  isEditTransactionOpen: boolean;\n  selectedDay: Transaction;\n  isTransfer: boolean;\n  errors: Error;\n  date: Date;\n  calendarDates: { date: Date }[];\n  transactions: Transaction[];\n};\n\nclass MonthlyContainer extends React.Component<Props> {\n  state: State = {\n    isInfoTransactionOpen: false,\n    isAddTransactionOpen: false,\n    isEditTransactionOpen: false,\n    date: Moment().toDate(),\n    isTransfer: false,\n    selectedDay: {\n      _id: \"\",\n      createdAt: Moment().startOf(\"date\").toDate(),\n      events: [],\n      expense: 0,\n      income: 0,\n    },\n    errors: {\n      account: \"\",\n      from: \"\",\n      category: \"\",\n      to: \"\",\n      amount: \"\",\n    },\n    transactions: [],\n    calendarDates: [],\n  };\n\n  componentDidMount() {\n    const { stateTransaction, filters, setDate } = this.props;\n    if (filters.date) {\n      console.log(\"filter\");\n      this.setState({\n        date: filters.date,\n      });\n      setDate(filters.date);\n      this.getTransactions(filters.date);\n      this.setCalendar(filters.date);\n    } else {\n      this.setState({\n        date: stateTransaction.date,\n      });\n      this.getTransactions(stateTransaction.date);\n      this.setCalendar(stateTransaction.date);\n    }\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>) {\n    const { stateTransaction, filters } = this.props;\n\n    if (prevProps.stateTransaction.date !== stateTransaction.date) {\n      if (!filters.date) {\n        this.setCalendar(stateTransaction.date);\n        this.getTransactions(stateTransaction.date);\n      }\n    }\n  }\n\n  getTransactions = async (date: Date) => {\n    const { selectedDay } = this.state;\n    let from: Date = firstDateOfFirstWeekOfTheMonth(date).toDate();\n    let to: Date = lastDateOfLastWeekOfTheMonth(date).toDate();\n\n    let data = await getSpecificDatePeriod(from, to);\n    data.transactions.map((transaction: Transaction) => {\n      if (isTheSameDate(selectedDay.createdAt, transaction.createdAt)) {\n        this.setState({\n          selectedDay: transaction,\n        });\n      }\n    });\n    this.setState({ transactions: data.transactions });\n  };\n\n  handleDelete = async (eventId: string) => {\n    await deleteTransaction(this.state.selectedDay._id, eventId);\n    let newEvents: TransactionEvent[] = this.state.selectedDay.events.filter(\n      event => event._id !== eventId\n    );\n    this.setState({\n      selectedDay: { ...this.state.selectedDay, events: newEvents },\n      isEditTransactionOpen: false,\n    });\n    this.clearState();\n    this.getTransactions(this.state.date);\n  };\n  handleOpenEdit = (event: TransactionEvent) => {\n    const { isEditTransactionOpen } = this.state;\n    if (isEditTransactionOpen) {\n      this.setState({ isEditTransactionOpen: false });\n      this.clearState();\n    } else {\n      this.setState({\n        isEditTransactionOpen: true,\n      });\n\n      this.props.setTransaction({\n        ...event,\n        amount: (parseFloat(event.amount) / 100).toFixed(2),\n        fees: (parseFloat(event.fees!) / 100).toFixed(2),\n      });\n    }\n  };\n  handleNextDay = async () => {\n    const { selectedDay, transactions } = this.state;\n\n    let newDate: Date = Moment(selectedDay.createdAt).add(1, \"days\").toDate();\n\n    this.setState({\n      selectedDay: { createdAt: newDate, events: [] },\n      date: newDate,\n    });\n\n    transactions.forEach(transaction => {\n      if (isTheSameDate(newDate, transaction.createdAt)) {\n        this.setState({\n          selectedDay: transaction,\n        });\n      }\n    });\n  };\n  handlePreviousDay = async () => {\n    const { selectedDay, transactions } = this.state;\n\n    let newDate: Date = Moment(selectedDay.createdAt).add(-1, \"days\").toDate();\n    this.setState({\n      selectedDay: { createdAt: newDate, events: [] },\n      date: newDate,\n    });\n\n    transactions.forEach(transaction => {\n      if (isTheSameDate(newDate, transaction.createdAt)) {\n        this.setState({\n          selectedDay: transaction,\n        });\n      }\n    });\n  };\n  handleOpenTransaction = () => {\n    if (this.state.isAddTransactionOpen) {\n      this.setState({\n        isAddTransactionOpen: false,\n      });\n      this.clearState();\n    } else {\n      this.props.handleInput({\n        target: {\n          name: \"date\",\n          value: this.state.selectedDay.createdAt,\n        },\n      });\n      this.setState({\n        isAddTransactionOpen: true,\n      });\n    }\n  };\n  handleOpenInfoModal = (date: Date) => {\n    const { isInfoTransactionOpen } = this.state;\n    console.log(date);\n    if (isInfoTransactionOpen) {\n      this.setState({\n        isInfoTransactionOpen: false,\n        selectedDay: { events: [] },\n      });\n    } else {\n      this.setState({\n        isInfoTransactionOpen: true,\n        selectedDay: { createdAt: date, events: [] },\n      });\n      this.selectedDay(date);\n    }\n  };\n  selectedDay = (date: Date) => {\n    this.state.transactions.forEach(transaction => {\n      if (isTheSameDate(date, transaction.createdAt)) {\n        this.setState({\n          selectedDay: transaction,\n        });\n      }\n    });\n  };\n\n  handleSave = async () => {\n    const { isEditTransactionOpen, selectedDay } = this.state;\n    const { transactionEvent, date } = this.props.stateTransaction;\n    const errors: Error = validateTransaction(transactionEvent);\n    const isValid: boolean = Object.values(errors).filter(Boolean).length <= 0;\n\n    if (!isValid) {\n      this.setState({ errors: errors });\n      return;\n    }\n    let event = transaction(transactionEvent);\n\n    if (isEditTransactionOpen) {\n      await editTransaction(\n        selectedDay._id,\n        transactionEvent._id,\n        event.events[0]\n      );\n      this.getTransactions(transactionEvent.date);\n      this.clearState();\n    } else {\n      await createTransactionRequest(event);\n      this.getTransactions(date);\n      this.clearState();\n    }\n    this.setState({\n      ...this.state,\n      errors: {},\n      isAddTransactionOpen: false,\n      isEditTransactionOpen: false,\n    });\n  };\n\n  clearState = () => {\n    this.props.setTransaction({\n      _id: \"\",\n      type: \"income\",\n      date: Moment().toDate(),\n      account: \"\",\n      from: \"\",\n      category: \"\",\n      fees: \"0\",\n      to: \"\",\n      amount: \"0\",\n      note: \"\",\n      description: \"\",\n      transactionId: \"\",\n    });\n  };\n\n  setCalendar = async (date: Date) => {\n    await this.setState({ calendarDates: [] });\n    const { calendarDates } = this.state;\n\n    if (firstDateOfTheMonth(date).get(\"day\") !== 1) {\n      this.setFirstWeek(date);\n    }\n\n    for (let i = 1; i <= lastDateOfTheMonth(date).get(\"date\"); i++) {\n      calendarDates.push({\n        date: Moment(firstDateOfTheMonth(date)).set(\"date\", i).toDate(),\n      });\n    }\n\n    if (lastDateOfTheMonth(date).get(\"day\") !== 0) {\n      this.setLastWeek(date);\n    }\n  };\n\n  setFirstWeek = (date: Date) => {\n    const lastDateOfPreviusMonth: number = Moment(date)\n      .set(\"date\", 0)\n      .get(\"date\");\n\n    for (\n      let i = firstDateOfFirstWeekOfTheMonth(date).get(\"date\");\n      i <= lastDateOfPreviusMonth;\n      i++\n    ) {\n      this.state.calendarDates.push({\n        date: Moment(firstDateOfFirstWeekOfTheMonth(date))\n          .set(\"date\", i)\n          .toDate(),\n      });\n    }\n  };\n  setLastWeek = (date: Date) => {\n    for (let i = 1; i <= lastDateOfLastWeekOfTheMonth(date).get(\"date\"); i++) {\n      this.state.calendarDates.push({\n        date: Moment(lastDateOfLastWeekOfTheMonth(date))\n          .startOf(\"date\")\n          .set(\"date\", i)\n          .toDate(),\n      });\n    }\n  };\n\n  render() {\n    const {\n      errors,\n      selectedDay,\n      transactions,\n      calendarDates,\n      isAddTransactionOpen,\n      isEditTransactionOpen,\n      isInfoTransactionOpen,\n    } = this.state;\n    const { date, transactionEvent } = this.props.stateTransaction;\n    return (\n      <div className=\"wrapper\">\n        <NavBarMenu />\n        <Calendar\n          handleOpenInfoModal={this.handleOpenInfoModal}\n          transactions={transactions}\n          calendarDates={calendarDates}\n          date={date}\n        />\n        <InfoModal\n          handleDelete={this.handleDelete}\n          selectedDay={selectedDay}\n          handleNextDay={this.handleNextDay}\n          isInfoTransactionOpen={isInfoTransactionOpen}\n          handlePreviousDay={this.handlePreviousDay}\n          handleOpenInfoModal={this.handleOpenInfoModal}\n          handleOpenTransaction={this.handleOpenTransaction}\n          handleOpenEdit={this.handleOpenEdit}\n        />\n        <AddTransactionModal\n          isEditTransactionOpen={isEditTransactionOpen}\n          errors={errors}\n          transactionEvent={transactionEvent}\n          handleSave={this.handleSave}\n          handleOpenEdit={this.handleOpenEdit}\n          handleInputChange={this.props.handleInput}\n          isAddTransactionOpen={isAddTransactionOpen}\n          handleOpenTransaction={this.handleOpenTransaction}\n          handleDelete={this.handleDelete}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: { transactionReducer: TransactionReducer }) => {\n  return {\n    stateTransaction: state.transactionReducer,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    handleInput: (event: HandleInput) => dispatch(handleInput(event)),\n    setTransaction: (event: TransactionEvent) =>\n      dispatch(setTransaction(event)),\n    setDate: (date: Date) => dispatch(setDate(date)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonthlyContainer);\n","/home/george/Documents/Projects/budget-tracker/src/modules/stats/weeklyContainer/WeeklyContainer.tsx",["287","288","289","290","291","292"],"import React, { useState } from \"react\";\nimport NavBarMenu from \"../../../layout/navBar/NavBar\";\nimport StatsForm from \"../components/StatsForm\";\n\nconst WeeklyContainer = () => {\n  const [date, setDate] = useState(new Date());\n  const [sumIncome, setSumIncome] = useState(0);\n  const [sumExpense, setSumExpense] = useState(0);\n\n  const data = [\n    {\n      category: \"food\",\n      value: 16900,\n      color: \"#E38627\",\n      label: \"category\",\n    },\n    { category: \"beauty\", value: 4000, color: \"red\", label: \"beauty\" },\n    { category: \"culture\", value: 45699, color: \"blue\", label: \"culture\" },\n  ];\n  return (\n    <div className=\"wrapper\">\n      <NavBarMenu />\n      <div className=\"stats_container\">\n        <StatsForm stats={data} isIncome={true} />\n        <StatsForm stats={data} isIncome={false} />\n      </div>\n    </div>\n  );\n};\n\nexport default WeeklyContainer;\n","/home/george/Documents/Projects/budget-tracker/src/modules/stats/yearlyContainer/YearlyContainer.tsx",["293","294","295","296","297","298"],"import React, { useState } from \"react\";\nimport NavBarMenu from \"../../../layout/navBar/NavBar\";\nimport StatsForm from \"../components/StatsForm\";\n\nconst YearlyContainer = () => {\n  const [date, setDate] = useState(new Date());\n  const [sumIncome, setSumIncome] = useState(0);\n  const [sumExpense, setSumExpense] = useState(0);\n\n  const data = [\n    {\n      category: \"food\",\n      value: 16900,\n      color: \"#E38627\",\n      label: \"category\",\n    },\n    { category: \"beauty\", value: 4000, color: \"red\", label: \"beauty\" },\n    { category: \"culture\", value: 45699, color: \"blue\", label: \"culture\" },\n  ];\n  return (\n    <div className=\"wrapper\">\n      <NavBarMenu />\n      <div className=\"stats_container\">\n        <StatsForm stats={data} isIncome={true} />\n        <StatsForm stats={data} isIncome={false} />\n      </div>\n    </div>\n  );\n};\n\nexport default YearlyContainer;\n","/home/george/Documents/Projects/budget-tracker/src/modules/stats/dailyContainer/DailyContainer.tsx",["299","300","301","302","303","304"],"import React, { useState } from \"react\";\nimport NavBarMenu from \"../../../layout/navBar/NavBar\";\nimport StatsForm from \"../components/StatsForm\";\n\nconst DailyContainer = () => {\n  const [date, setDate] = useState(new Date());\n  const [sumIncome, setSumIncome] = useState(0);\n  const [sumExpense, setSumExpense] = useState(0);\n\n  const data = [\n    {\n      category: \"food\",\n      value: 16900,\n      color: \"#E38627\",\n      label: \"category\",\n    },\n    { category: \"beauty\", value: 4000, color: \"red\", label: \"beauty\" },\n    { category: \"culture\", value: 45699, color: \"blue\", label: \"culture\" },\n  ];\n  return (\n    <div className=\"wrapper\">\n      <NavBarMenu />\n      <div className=\"stats_container\">\n        <StatsForm stats={data} isIncome={true} />\n        <StatsForm stats={data} isIncome={false} />\n      </div>\n    </div>\n  );\n};\n\nexport default DailyContainer;\n","/home/george/Documents/Projects/budget-tracker/src/modules/stats/monthlyContainer/MonthlyContainer.tsx",["305","306","307","308","309","310","311"],"import React, { useEffect, useState } from \"react\";\nimport NavBarMenu from \"../../../layout/navBar/NavBar\";\nimport StatsForm from \"../components/StatsForm\";\nimport \"../../../scss/variables.scss\";\nconst MonthlyContainer = () => {\n  const [date, setDate] = useState(new Date());\n  const [sumIncome, setSumIncome] = useState(0);\n  const [sumExpense, setSumExpense] = useState(0);\n\n  const data = [\n    {\n      category: \"food\",\n      value: 16900,\n      color: \"#E38627\",\n      label: \"category\",\n    },\n    { category: \"beauty\", value: 4000, color: \"red\", label: \"beauty\" },\n    { category: \"culture\", value: 45699, color: \"blue\", label: \"culture\" },\n  ];\n  return (\n    <div className=\"wrapper\">\n      <NavBarMenu />\n      <div className=\"stats_container\">\n        <StatsForm stats={data} isIncome={true} />\n        <StatsForm stats={data} isIncome={false} />\n      </div>\n    </div>\n  );\n};\n\nexport default MonthlyContainer;\n","/home/george/Documents/Projects/budget-tracker/src/helpers/Variables.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/helpers/Validation.tsx",["312"],"import AddTransactionStyle from \"../modules/transaction/components/addTransactionModal/AddTransactionStyle.module.css\";\nimport { TransactionEvent } from \"../models/Transaction\";\nimport { Error } from \"../models/Error\";\nimport { Transaction, Transfer } from \"../helpers/Variables\";\nimport { User, UserRegister } from \"../models/User\";\nexport const validateTransaction = (value: TransactionEvent) => {\n  let errors: Error = {\n    account: \"\",\n    from: \"\",\n    category: \"\",\n    to: \"\",\n    amount: \"\",\n    fees: \"\",\n  };\n\n  if (!value.account && value.type !== Transaction) {\n    errors.account = \"Please select an account\";\n  }\n\n  if (value.type === Transfer && !value.from) {\n    errors.from = \"Please select from\";\n  }\n  if (!value.category && value.type !== Transfer) {\n    errors.category = \"Please select a category\";\n  }\n  if (value.type === Transfer && !value.to) {\n    errors.to = \"Please select to\";\n  }\n  if (!value.amount) {\n    errors.amount = \"Please add an amount\";\n  }\n\n  if (parseFloat(value.fees!) > parseFloat(value.amount)) {\n    errors.fees = \"Fees can't be greater then amount\";\n  }\n  return errors;\n};\n\nexport const validateLogin = (user: UserRegister, isLogin: boolean) => {\n  const isValidEmail = RegExp(\n    \"[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\"\n  );\n  let errors = {\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  };\n  if (!isValidEmail.test(user.email)) {\n    errors.email = \"Please enter a valid email.\";\n  }\n  if (user.password !== user.confirmPassword && !isLogin) {\n    errors.confirmPassword = \"The password does not match. \";\n  }\n  if (\n    !user.password.match(/^[0-9a-zA-Z]+$/) ||\n    user.password.length > 20 ||\n    user.password.length < 6\n  ) {\n    errors.password = \"Please enter 6-20 characters [A-Z, a-z, 0-9 only].\";\n  }\n  return errors;\n};\n\nexport const errorMsg = (error: string) => {\n  return (\n    <>{error && <div className={AddTransactionStyle.error_msg}>{error}</div>}</>\n  );\n};\n","/home/george/Documents/Projects/budget-tracker/src/modules/login/components/LoginForm.tsx",["313"],"import React, { ReactElement } from \"react\";\nimport LoginContainerStyle from \"../LoginContainerStyle.module.css\";\n\ntype Props = {\n  Submit: () => void;\n  handleEnterPress: (event: any) => void;\n  errors: {\n    email: string;\n    password: string;\n  };\n  handleInput: (event: any) => void;\n};\n\nconst LoginForm: React.FC<Props> = ({\n  Submit,\n  errors,\n  handleInput,\n  handleEnterPress,\n}) => {\n  return (\n    <div className={LoginContainerStyle.login_content}>\n      <label className={LoginContainerStyle.login_label}>Email</label>\n      <input\n        className={LoginContainerStyle.input}\n        name=\"email\"\n        onChange={handleInput}\n      />\n      {errors.email && (\n        <div className={LoginContainerStyle.error_msg}>\n          <span>{errors.email}</span>\n        </div>\n      )}\n      <label className={LoginContainerStyle.login_label}>Password</label>\n      <input\n        type=\"password\"\n        className={LoginContainerStyle.input}\n        name=\"password\"\n        onKeyPress={handleEnterPress}\n        onChange={handleInput}\n      />\n      {errors.password && (\n        <div className={LoginContainerStyle.error_msg}>\n          <span>{errors.password}</span>\n        </div>\n      )}\n      <button className={LoginContainerStyle.login_button} onClick={Submit}>\n        Log in\n      </button>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","/home/george/Documents/Projects/budget-tracker/src/modules/login/components/RegistrationForm.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/login/components/SocialNetworks.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/service/TransactionService.tsx",["314","315"],"import axios from \"axios\";\nimport { Transaction, TransactionReducer } from \"../../../models/Transaction\";\n\nlet config = {\n  headers: {\n    Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n  },\n};\n\nexport const createTransactionRequest = async (data: any) => {\n  const url = `http://localhost:5000/transaction/create`;\n\n  const request: any = {\n    method: \"POST\",\n    data,\n    headers: config.headers,\n    url,\n  };\n\n  try {\n    const response = await axios(request);\n    return response;\n  } catch (e) {\n    return { error: e };\n  }\n};\n\nexport const getSpecificDatePeriod = async (from: Date, to: Date) => {\n  const url = `http://localhost:5000/transaction/specificDatePeriod/${from}/${to}`;\n\n  const request: any = {\n    method: \"GET\",\n    headers: config.headers,\n    url,\n  };\n  try {\n    const response = await axios(request);\n    return response.data;\n  } catch (e) {\n    console.error(e);\n    return [];\n  }\n};\n\nexport const getYearlyOrWeekly = async (data: any) => {\n  const url = `http://localhost:5000/transaction/getYearlyOrWeekly`;\n\n  const request: any = {\n    method: \"POST\",\n    data,\n    headers: config.headers,\n    url,\n  };\n  try {\n    const response = await axios(request);\n    return response.data;\n  } catch (e) {\n    console.error(e);\n    return [];\n  }\n};\nexport const editTransaction = async (\n  selectedDayId: string,\n  transactionId: string,\n  data: any\n) => {\n  const url = `http://localhost:5000/transaction/event/edit/${selectedDayId}/${transactionId}`;\n\n  const request: any = {\n    method: \"PUT\",\n    data,\n    headers: config.headers,\n    url,\n  };\n\n  try {\n    const response = await axios(request);\n    return response;\n  } catch (e) {\n    return { error: e };\n  }\n};\nexport const deleteTransaction = async (\n  selectedDayId: string,\n  transactionId: string\n) => {\n  const url = `http://localhost:5000/transaction/event/delete/${selectedDayId}/${transactionId}`;\n\n  const request: any = {\n    method: \"PUT\",\n    data: {},\n    headers: config.headers,\n    url,\n  };\n\n  try {\n    const response = await axios(request);\n    return response;\n  } catch (e) {\n    return { error: e };\n  }\n};\nexport const getUserByJWToken = async () => {\n  const url = `http://localhost:5000/user/logged`;\n\n  const request: any = {\n    method: \"GET\",\n    headers: config.headers,\n    url,\n  };\n  try {\n    const response = await axios(request);\n\n    return response.data;\n  } catch (e) {\n    console.error(e);\n    return [];\n  }\n};\n","/home/george/Documents/Projects/budget-tracker/src/layout/sideBar/SideBar.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/actions/transactionActions.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/store/actions/usersActions.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/AddTransactionModal.tsx",["316","317","318","319","320"],"import React, { useCallback } from \"react\";\nimport styles from \"./AddTransactionStyle.module.css\";\nimport { TransactionEvent } from \"../../../../models/Transaction\";\nimport { Error } from \"../../../../models/Error\";\nimport { HandleInput } from \"../../../../models/Function\";\nimport { Income, Transfer, Expense } from \"../../../../helpers/Variables\";\nimport { Tabs, TabList, TabPanel, Tab } from \"react-tabs\";\nimport Form from \"./form/Form\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport Moment from \"moment\";\n\ntype Props = {\n  isAddTransactionOpen: boolean;\n  transactionEvent: TransactionEvent;\n  errors: Error;\n  isEditTransactionOpen: boolean;\n  handleInputChange: (event: HandleInput) => void;\n  handleSave: () => void;\n  handleOpenTransaction: (date: Date) => void;\n  handleOpenEdit: (event: TransactionEvent) => void;\n  handleDelete: (eventId: string) => void;\n};\n\nconst AddTransactionModal: React.FC<Props> = ({\n  isAddTransactionOpen,\n  transactionEvent,\n  handleInputChange,\n  errors,\n  handleSave,\n  handleOpenTransaction,\n  isEditTransactionOpen,\n  handleOpenEdit,\n  handleDelete,\n}) => {\n  const ChooseCategory = (event: string) => {\n    switch (event) {\n      case Income:\n        return 0;\n      case Expense:\n        return 1;\n      case Transfer:\n        return 2;\n    }\n  };\n\n  const handleOpen = useCallback(() => {\n    isEditTransactionOpen\n      ? handleOpenEdit(transactionEvent)\n      : handleOpenTransaction(Moment().toDate());\n  }, [isEditTransactionOpen, transactionEvent]);\n  const handleSetIncomeType = useCallback(() => {\n    handleInputChange({\n      target: { value: Income, name: \"type\" },\n    });\n  }, []);\n  const handleSetExpenseType = useCallback(() => {\n    handleInputChange({\n      target: { value: Expense, name: \"type\" },\n    });\n  }, []);\n  const handleSetTransferType = useCallback(() => {\n    handleInputChange({\n      target: { value: Transfer, name: \"type\" },\n    });\n  }, []);\n  const handleDeleteTransaction = useCallback(() => {\n    handleDelete(transactionEvent._id);\n  }, [transactionEvent._id]);\n  return (\n    <div>\n      {isAddTransactionOpen || isEditTransactionOpen ? (\n        <div className={styles.modal_wrapper}>\n          <div className={styles.container}>\n            <FontAwesomeIcon\n              className={styles.close_button}\n              onClick={handleOpen}\n              icon={faTimesCircle}\n            />\n            <Tabs\n              selectedTabClassName={styles.selected_tab}\n              selectedIndex={ChooseCategory(transactionEvent.type)}\n            >\n              <TabList className={styles.tab_list}>\n                <Tab className={styles.tab} onClick={handleSetIncomeType}>\n                  <span>Income</span>\n                </Tab>\n                <Tab className={styles.tab} onClick={handleSetExpenseType}>\n                  <span>Expense</span>\n                </Tab>\n                <Tab className={styles.tab} onClick={handleSetTransferType}>\n                  <span>Transfer</span>\n                </Tab>\n              </TabList>\n\n              <TabPanel>\n                <Form\n                  transaction={transactionEvent}\n                  handleInputChange={handleInputChange}\n                  errors={errors}\n                />\n              </TabPanel>\n              <TabPanel>\n                <Form\n                  transaction={transactionEvent}\n                  handleInputChange={handleInputChange}\n                  errors={errors}\n                />\n              </TabPanel>\n              <TabPanel>\n                <Form\n                  transaction={transactionEvent}\n                  handleInputChange={handleInputChange}\n                  errors={errors}\n                />\n              </TabPanel>\n            </Tabs>\n            <input\n              type=\"text\"\n              className={styles.input}\n              name=\"description\"\n              value={transactionEvent.description}\n              onChange={handleInputChange}\n            />\n\n            {isEditTransactionOpen ? (\n              <div className={styles.buttons_content}>\n                <button className={styles.save_button} onClick={handleSave}>\n                  Save\n                </button>\n\n                <button\n                  className={styles.delete_button}\n                  onClick={handleDeleteTransaction}\n                >\n                  Delete\n                </button>\n              </div>\n            ) : (\n              <div className={styles.buttons_content}>\n                <button className={styles.save_button} onClick={handleSave}>\n                  Save\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default AddTransactionModal;\n","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/infoModal/InfoModal.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/dailyContainer/components/dailyTableRow/DailyTableRow.tsx",["321"],"import React, { useCallback } from \"react\";\nimport {\n  TransactionEventWithAmountNumber,\n  TransactionWithAmountNumber,\n} from \"../../../../../models/Transaction\";\nimport { Transfer, Income, Expense } from \"../../../../../helpers/Variables\";\nimport styles from \"./DailyTableRow.module.css\";\ntype Props = {\n  handleSelectEvent: (\n    transactionEvent: TransactionEventWithAmountNumber,\n    transactionId: string\n  ) => void;\n  transactionEvent: TransactionEventWithAmountNumber;\n  transaction: TransactionWithAmountNumber;\n};\n\nconst DailyTableRow: React.FC<Props> = ({\n  transactionEvent,\n  handleSelectEvent,\n  transaction,\n}) => {\n  const selectEvent = useCallback(() => {\n    handleSelectEvent(transactionEvent, transaction._id);\n  }, [transactionEvent]);\n  return (\n    <tr onClick={selectEvent}>\n      <td>\n        <div className={styles.account_container}>\n          <div className={styles.account}>\n            {transactionEvent.type === Transfer\n              ? \"transfer\"\n              : transactionEvent.category}\n          </div>\n          <div className={styles.category}>\n            <div>{transactionEvent.note}</div>\n            {transactionEvent.type === Transfer ? (\n              <div>\n                {transactionEvent.from}\n                {\" ---> \"}\n                {transactionEvent.to}\n              </div>\n            ) : (\n              transactionEvent.account\n            )}\n          </div>\n        </div>\n      </td>\n      <td className={styles.income}>\n        {transactionEvent.type === Income\n          ? (transactionEvent.amount / 100).toFixed(2)\n          : null}\n      </td>\n      <td\n        className={\n          transactionEvent.type === Expense ? styles.expense : styles.transfer\n        }\n      >\n        <div>\n          {transactionEvent.type === Expense ||\n          transactionEvent.type === Transfer\n            ? (transactionEvent.amount / 100).toFixed(2)\n            : null}\n        </div>\n      </td>\n    </tr>\n  );\n};\n\nexport default DailyTableRow;\n","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/dailyContainer/components/dailyTableHeader/DailyTableHeader.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/actionTypes.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/store/types.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/Form.tsx",["322"],"import React, { forwardRef, useState, useCallback } from \"react\";\nimport styles from \"../AddTransactionStyle.module.css\";\nimport Moment from \"moment\";\nimport { TransactionEvent } from \"../../../../../models/Transaction\";\nimport { HandleInput } from \"../../../../../models/Function\";\nimport { Error } from \"../../../../../models/Error\";\nimport { Transfer, Income } from \"../../../../../helpers/Variables\";\nimport InputTitles from \"./components/InputTitles\";\nimport SelectInput from \"./components/SelectInputs\";\nimport FeesInput from \"./components/FeesInput\";\nimport AmountInput from \"./components/AmountInput\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\ntype Props = {\n  transaction: TransactionEvent;\n  errors: Error;\n  handleInputChange: (event: HandleInput) => void;\n};\nconst Form: React.FC<Props> = ({ transaction, handleInputChange, errors }) => {\n  const [isFeesOpen, setIsFeesOpen] = useState(false);\n  const accounts = [\"\", \"cash\", \"card\", \"accounts\"];\n  const categoriesIncome = [\" \", \"salary\", \"bonus\", \"petty cash\", \"other\"];\n  const categoriesExpense = [\n    \"\",\n    \"food\",\n    \"culture\",\n    \"socialLife\",\n    \"selfDevelopment\",\n    \"transportation\",\n    \"other\",\n  ];\n\n  const selectOptions = (transactionType: string) => {\n    if (transactionType === Transfer) {\n      return accounts;\n    } else {\n      if (transactionType === Income) {\n        return categoriesIncome;\n      } else {\n        return categoriesExpense;\n      }\n    }\n  };\n  const handleSetDate = useCallback(date => {\n    handleInputChange({\n      target: { value: Moment(date).toDate(), name: \"date\" },\n    });\n  }, []);\n  const ExampleCustomInput: React.FC<any> = forwardRef(({ value, onClick }) => (\n    <div className={styles.input_container}>\n      <input className={styles.input} onClick={onClick} value={value} />\n    </div>\n  ));\n  return (\n    <div className={styles.content}>\n      <InputTitles transaction={transaction} isFeesOpen={isFeesOpen} />\n      <div className={styles.content_inputs}>\n        <DatePicker\n          selected={Moment(transaction.date).toDate()}\n          dateFormat=\" dd / MMMM / yyyy  h:mm aa\"\n          onChange={handleSetDate}\n          showTimeSelect\n          timeFormat=\"HH:mm\"\n          timeIntervals={15}\n          timeCaption=\"time\"\n          locale=\"pt-BR\"\n          customInput={<ExampleCustomInput />}\n        />\n\n        <SelectInput\n          selectValue={\n            transaction.type === Transfer\n              ? transaction.from\n              : transaction.account\n          }\n          transactionType={transaction.type === Transfer ? \"from\" : \"account\"}\n          options={accounts}\n          handleInputChange={handleInputChange}\n          error={transaction.type === Transfer ? errors.from : errors.account}\n        />\n        <SelectInput\n          selectValue={\n            transaction.type === Transfer\n              ? transaction.to\n              : transaction.category\n          }\n          transactionType={transaction.type === Transfer ? \"to\" : \"category\"}\n          options={selectOptions(transaction.type)}\n          handleInputChange={handleInputChange}\n          error={transaction.type === Transfer ? errors.to : errors.category}\n        />\n        <AmountInput\n          transaction={transaction}\n          handleInputChange={handleInputChange}\n          setIsFeesOpen={setIsFeesOpen}\n          isFeesOpen={isFeesOpen}\n          error={errors.amount}\n        />\n\n        <FeesInput\n          transaction={transaction}\n          handleInputChange={handleInputChange}\n          setIsFeesOpen={setIsFeesOpen}\n          isFeesOpen={isFeesOpen}\n        />\n\n        <input\n          type=\"text\"\n          className={styles.input}\n          name=\"note\"\n          value={transaction.note}\n          onChange={handleInputChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Form;\n","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/components/FeesInput.tsx",["323"],"import React, { useCallback } from \"react\";\nimport styles from \"../../AddTransactionStyle.module.css\";\nimport { TransactionEvent } from \"../../../../../../models/Transaction\";\nimport { HandleInput } from \"../../../../../../models/Function\";\ntype Props = {\n  handleInputChange: (event: HandleInput) => void;\n  setIsFeesOpen: (arg0: boolean) => void;\n  transaction: TransactionEvent;\n  isFeesOpen: boolean;\n};\n\nconst FeesInput: React.FC<Props> = ({\n  handleInputChange,\n  setIsFeesOpen,\n  transaction,\n  isFeesOpen,\n}) => {\n  const closeFees = useCallback(() => {\n    handleInputChange({ target: { value: \"0\", name: \"fees\" } });\n    setIsFeesOpen(!isFeesOpen);\n  }, [isFeesOpen]);\n  return (\n    <>\n      {isFeesOpen ? (\n        <div className={styles.input_container}>\n          <div className={styles.amount_container}>\n            <input\n              type=\"text\"\n              className={styles.input}\n              name=\"fees\"\n              value={transaction.fees}\n              onChange={handleInputChange}\n            />\n\n            <div className={styles.fees} onClick={closeFees}>\n              X\n            </div>\n          </div>\n        </div>\n      ) : null}\n    </>\n  );\n};\nexport default FeesInput;\n","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/components/InputTitles.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/components/SelectInputs.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/components/AmountInput.tsx",["324"],"import React, { useCallback } from \"react\";\nimport styles from \"../../AddTransactionStyle.module.css\";\nimport { TransactionEvent } from \"../../../../../../models/Transaction\";\nimport { HandleInput } from \"../../../../../../models/Function\";\nimport { errorMsg } from \"../../../../../../helpers/Validation\";\nimport { Transfer } from \"../../../../../../helpers/Variables\";\ntype Props = {\n  handleInputChange: (event: HandleInput) => void;\n  setIsFeesOpen: (isOpen: boolean) => void;\n  transaction: TransactionEvent;\n  isFeesOpen: boolean;\n  error: string;\n};\n\nconst AmountInput: React.FC<Props> = ({\n  handleInputChange,\n  setIsFeesOpen,\n  transaction,\n  isFeesOpen,\n  error,\n}) => {\n  const setFeesOpen = useCallback(() => {\n    setIsFeesOpen(!isFeesOpen);\n  }, []);\n\n  return (\n    <div className={styles.input_container}>\n      <div className={styles.amount_container}>\n        <input\n          type=\"number\"\n          name=\"amount\"\n          className={styles.input}\n          value={transaction.amount}\n          onChange={handleInputChange}\n        />\n        {transaction.type === Transfer && !isFeesOpen ? (\n          <div className={styles.fees} onClick={setFeesOpen}>\n            Fees\n          </div>\n        ) : null}\n      </div>\n      {errorMsg(error)}\n    </div>\n  );\n};\nexport default AmountInput;\n",["325","326"],"/home/george/Documents/Projects/budget-tracker/src/store/store.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/store/reducers/index.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/store/reducers/userReducer.tsx",["327"],"import { SIGN_IN } from \"../types\";\n\nexport interface State {\n  user: any;\n  token: string;\n  loading: boolean;\n}\n\nconst initialState = {\n  user: {},\n  token: \"\",\n  loading: true,\n};\n\nexport default function (state = initialState, action: any) {\n  switch (action.type) {\n    case SIGN_IN:\n      if (action.payload.token) {\n        localStorage.setItem(\"jwt\", action.payload.token);\n      }\n\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/reducers/transactionReducer.tsx",["328"],"import { ActionTypes } from \"../actionTypes\";\nimport { TransactionEvent } from \"../../../models/Transaction\";\nimport Moment from \"moment\";\n\nexport interface State {\n  date: Date;\n  transactionEvent: TransactionEvent;\n}\nconst initialState = {\n  date: Moment().toDate(),\n\n  transactionEvent: {\n    _id: \"\",\n    type: \"income\",\n    date: \"\",\n    account: \"\",\n    from: \"\",\n    category: \"\",\n    fees: \"0\",\n    transferId: \"\",\n    to: \"\",\n    amount: \"0\",\n    note: \"\",\n    description: \"\",\n    transactionId: \"\",\n  },\n};\nexport default function (state = initialState, action: any) {\n  switch (action.type) {\n    case ActionTypes.HANDLE_NEXT_MONTH:\n      const nextMonth = Moment(state.date).add(1, \"month\");\n      return {\n        ...state,\n        date: nextMonth,\n      };\n    case ActionTypes.HANDLE_PREVIOUS_MONTH:\n      const previousMonth = Moment(state.date).add(-1, \"month\");\n      return {\n        ...state,\n        date: previousMonth,\n      };\n    case ActionTypes.HANDLE_NEXT_YEAR:\n      let nextYear = Moment(state.date).add(1, \"year\").toDate();\n\n      return {\n        ...state,\n        date: nextYear,\n      };\n    case ActionTypes.HANDLE_PREVIOUS_YEAR:\n      let previousYear = Moment(state.date).add(-1, \"year\");\n      return {\n        ...state,\n        date: previousYear,\n      };\n\n    case ActionTypes.HANDLE_INPUT:\n      if (action.payload.name === \"type\") {\n        return {\n          ...state,\n          transactionEvent: {\n            ...state.transactionEvent,\n            [action.payload.name]: action.payload.value,\n            category: \"\",\n            to: \"\",\n          },\n        };\n      } else {\n        return {\n          ...state,\n          transactionEvent: {\n            ...state.transactionEvent,\n            [action.payload.name]: action.payload.value,\n          },\n        };\n      }\n    case ActionTypes.SET_TRANSACTION:\n      return {\n        ...state,\n        transactionEvent: action.payload,\n      };\n    case ActionTypes.SET_DATE:\n      return {\n        ...state,\n        date: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","/home/george/Documents/Projects/budget-tracker/src/layout/header/Header.tsx",["329","330"],"import React, { useState } from \"react\";\nimport styles from \"./HeaderStyle.module.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCaretDown, faBars, faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport SideBar from \"../sideBar/SideBar\";\nimport { useSelector } from \"react-redux\";\nimport { headerTitle } from \"../../helpers/Variables\";\nimport { User, UserReducer } from \"../../models/User\";\nimport AccountMenu from \"../accountMenu/AccountMenu\";\nimport { TransactionReducer } from \"../../models/Transaction\";\nconst NavBar = () => {\n  const [isSideBarOpen, setIsSideBarOpen] = useState(false);\n\n  const user = useSelector(\n    (state: { userReducer: UserReducer }) => state.userReducer.user\n  );\n\n  return (\n    <div>\n      <nav className={styles.container}>\n        <FontAwesomeIcon\n          className={styles.menu_bar}\n          icon={faBars}\n          onClick={() => setIsSideBarOpen(true)}\n        />\n\n        <div className={styles.page_title}>\n          {headerTitle(window.location.pathname)}\n        </div>\n        <div className={styles.dropdown}>\n          <div className={styles.user_content}>\n            <FontAwesomeIcon className={styles.user_email} icon={faUser} />\n            <span className={styles.user_email}>{user.email}</span>\n            <FontAwesomeIcon className={styles.caret_down} icon={faCaretDown} />\n          </div>\n          <AccountMenu />\n        </div>\n      </nav>\n      <SideBar\n        isSideBarOpen={isSideBarOpen}\n        setIsSideBarOpen={setIsSideBarOpen}\n      />\n    </div>\n  );\n};\nexport default NavBar;\n","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/weeklyContainer/components/WeeklyTableRow.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/yearlyContainer/components/YearlyTableRow.tsx",["331"],"import React from \"react\";\nimport Moment from \"moment\";\nimport styles from \"../YearlyStyle.module.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { isTheSameDate } from \"../../../../helpers/Variables\";\ntype Props = {\n  month: { from: Date; to: Date; expense: number; income: number };\n};\n\nconst YearlyTableRow: React.FC<Props> = ({ month }) => {\n  const history = useHistory();\n  return (\n    <tr onClick={() => history.push(`/transaction/monthly?date=${month.from}`)}>\n      {\" \"}\n      <td className={styles.month_content}>\n        <div\n          className={\n            Moment(month.from).diff(\n              Moment().startOf(\"month\").toDate(),\n              \"month\"\n            ) === 0\n              ? styles.month_selected\n              : styles.month\n          }\n        >\n          {Moment(month.from).format(\"MMMM\")}\n        </div>\n      </td>\n      <td className={styles.income}>{(month.income / 100).toFixed(2)}</td>\n      <td className={styles.expense}>{(month.expense / 100).toFixed(2)}</td>\n    </tr>\n  );\n};\n\nYearlyTableRow.propTypes = {};\n\nexport default YearlyTableRow;\n","/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/infoModal/components/TableRow.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/components/InfoTableHead/InfoTableHead.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/layout/accountMenu/AccountMenu.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/layout/addTranasctionButton/AddTransactionButton.tsx",["332"],"import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Moment from \"moment\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { TransactionReducer } from \"../../models/Transaction\";\nimport { setDate } from \"../../modules/transaction/actions/transactionActions\";\nimport { UserReducer } from \"../../models/User\";\nimport {\n  handleInput,\n  setTransaction,\n} from \"../../modules/transaction/actions/transactionActions\";\nimport AddTransactionModal from \"../../modules/transaction/components/addTransactionModal/AddTransactionModal\";\nimport { validateTransaction } from \"../../helpers/Validation\";\nimport { transaction } from \"../../helpers/Variables\";\nimport {\n  createTransactionRequest,\n  deleteTransaction,\n  editTransaction,\n} from \"../../modules/transaction/service/TransactionService\";\nimport styles from \"../../modules/transaction/dailyContainer/DailyStyle.module.css\";\n\nconst AddTransactionButton = () => {\n  const [isTransactionOpen, setIsTransactionOpen] = useState(false);\n  const [errors, setErrors] = useState({\n    account: \"\",\n    from: \"\",\n    category: \"\",\n    to: \"\",\n    amount: \"\",\n  });\n  const dispatch = useDispatch();\n\n  const stateTransaction = useSelector(\n    (state: { transactionReducer: TransactionReducer }) =>\n      state.transactionReducer\n  );\n\n  const { transactionId, _id } = stateTransaction.transactionEvent;\n\n  const handleSave = async () => {\n    const errors = validateTransaction(stateTransaction.transactionEvent);\n    const isValid = Object.values(errors).filter(Boolean).length <= 0;\n\n    if (!isValid) {\n      setErrors(errors);\n      return;\n    }\n\n    let event = transaction(stateTransaction.transactionEvent);\n\n    if (transactionId) {\n      await editTransaction(transactionId, _id, event.events[0]);\n    } else {\n      await createTransactionRequest(event);\n    }\n    clearState();\n  };\n  const handleDelete = async (eventId: string) => {\n    console.log(eventId);\n    await deleteTransaction(transactionId, eventId);\n    clearState();\n  };\n  const clearState = () => {\n    setErrors({ account: \"\", from: \"\", category: \"\", to: \"\", amount: \"\" });\n    setIsTransactionOpen(false);\n    dispatch(setDate(Moment().toDate()));\n    dispatch(\n      setTransaction({\n        _id: \"\",\n        type: \"income\",\n        date: Moment().toDate(),\n        account: \"\",\n        from: \"\",\n        category: \"\",\n        fees: \"0\",\n        to: \"\",\n        amount: \"0\",\n        note: \"\",\n        description: \"\",\n        transactionId: \"\",\n      })\n    );\n  };\n  const handleOpenTransaction = () => {\n    if (isTransactionOpen) {\n      clearState();\n    } else {\n      setIsTransactionOpen(true);\n      dispatch(\n        handleInput({\n          target: {\n            name: \"date\",\n            value: Moment().startOf(\"date\").toDate(),\n          },\n        })\n      );\n    }\n  };\n\n  return (\n    <>\n      <FontAwesomeIcon\n        className={styles.add_button}\n        icon={faPlusCircle}\n        onClick={handleOpenTransaction}\n      />\n\n      <AddTransactionModal\n        isAddTransactionOpen={isTransactionOpen}\n        transactionEvent={stateTransaction.transactionEvent}\n        errors={errors}\n        isEditTransactionOpen={transactionId.length > 0}\n        handleInputChange={event => dispatch(handleInput(event))}\n        handleSave={handleSave}\n        handleOpenTransaction={handleOpenTransaction}\n        handleOpenEdit={clearState}\n        handleDelete={handleDelete}\n      />\n    </>\n  );\n};\n\nexport default AddTransactionButton;\n","/home/george/Documents/Projects/budget-tracker/src/modules/stats/components/StatsForm.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/monthlyContainer/Calendar/Calendar.tsx",[],"/home/george/Documents/Projects/budget-tracker/src/modules/transaction/monthlyContainer/Calendar/CalendarDate.tsx",["333","334"],"import React, { useCallback } from \"react\";\nimport Moment from \"moment\";\nimport { Transaction, CalendarDates } from \"../../../../models/Transaction\";\nimport { isTheSameDate } from \"../../../../helpers/Variables\";\nimport styles from \"../MonthlyStyle.module.css\";\ntype Props = {\n  calendarDate: { date: Date };\n  transactions: Transaction[];\n  date: Date;\n  handleOpenInfoModal: (date: Date) => void;\n};\n\nconst CalendarDate: React.FC<Props> = ({\n  calendarDate,\n  transactions,\n  date,\n  handleOpenInfoModal,\n}) => {\n  const openInfoModal = useCallback(() => {\n    handleOpenInfoModal(Moment(calendarDate.date).startOf(\"date\").toDate());\n  }, [calendarDate]);\n\n  return (\n    <div\n      className={\n        Moment(date).get(\"month\") === Moment(calendarDate.date).get(\"month\")\n          ? styles.calendar_date_box_container\n          : styles.calendar_date_box_container_other_month\n      }\n      onClick={openInfoModal}\n    >\n      <div\n        className={\n          isTheSameDate(calendarDate.date, Moment().startOf(\"date\").toDate())\n            ? styles.current_date\n            : styles.calendar_date\n        }\n      >\n        {Moment(calendarDate.date).get(\"date\")}\n      </div>\n      {transactions.map(transaction =>\n        isTheSameDate(calendarDate.date, transaction.createdAt) ? (\n          <div key={transaction._id} className={styles.calendar_events_content}>\n            <div className={styles.income}>\n              {(transaction.income / 100).toFixed(2)}\n            </div>\n            <div className={styles.expense}>\n              {(transaction.expense / 100).toFixed(2)}\n            </div>\n            <div className={styles.total}>\n              {((transaction.income - transaction.expense) / 100).toFixed(2)}\n            </div>\n          </div>\n        ) : null\n      )}\n    </div>\n  );\n};\n\nexport default CalendarDate;\n","/home/george/Documents/Projects/budget-tracker/src/pages/exportPage/ExportPage.tsx",[],["335","336"],"/home/george/Documents/Projects/budget-tracker/src/modules/export/ExportContainer.tsx",["337","338"],"import React, { useState } from \"react\";\nimport Select from \"react-select\";\nimport \"./ExportStyle.css\";\n\nconst ExportContainer = (props: any) => {\n  const [selectedType, setSelectedType] = useState(\"\");\n  const options = [\" \", \"salary\", \"bonus\", \"petty cash\", \"other\"];\n  const handleInputChange = (event: any) => {};\n  return (\n    <div className=\"wrapper\">\n      <div>\n        <select\n          className=\"input\"\n          value={selectedType}\n          onChange={event => setSelectedType(event.target.value)}\n        >\n          {options.map(option => (\n            <option value={option}>{option}</option>\n          ))}\n        </select>\n      </div>\n      <div></div>\n    </div>\n  );\n};\n\nexport default ExportContainer;\n","/home/george/Documents/Projects/budget-tracker/src/models/Error.ts",[],["339","340"],"/home/george/Documents/Projects/budget-tracker/src/helpers/AuthProvider.tsx",["341"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { getUserByJWToken } from \"../modules/transaction/service/TransactionService\";\nimport { singIn } from \"../store/actions/usersActions\";\n\nconst AuthProvider = (props: any) => {\n  const [isLoading, setIsLoading] = useState(true);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    getUser();\n  }, []);\n\n  const getUser = async () => {\n    const user = await getUserByJWToken();\n\n    if (!user.user) {\n      localStorage.removeItem(\"jwt\");\n      setIsLoading(false);\n    } else {\n      dispatch(singIn(user));\n      setIsLoading(false);\n    }\n  };\n\n  if (isLoading) {\n    return <div />;\n  }\n  if (\n    !localStorage.getItem(\"jwt\") &&\n    !(window.location.pathname === \"/authentication\")\n  ) {\n    window.location.pathname = \"/authentication\";\n    return <div />;\n  }\n\n  return props.children;\n};\nexport default AuthProvider;\n",{"ruleId":"342","replacedBy":"343"},{"ruleId":"344","replacedBy":"345"},{"ruleId":"346","severity":1,"message":"347","line":34,"column":11,"nodeType":"348","messageId":"349","endLine":34,"endColumn":14},{"ruleId":"350","severity":1,"message":"351","line":26,"column":6,"nodeType":"352","endLine":26,"endColumn":29,"suggestions":"353"},{"ruleId":"350","severity":1,"message":"354","line":30,"column":6,"nodeType":"352","endLine":30,"endColumn":8,"suggestions":"355"},{"ruleId":"350","severity":1,"message":"354","line":35,"column":6,"nodeType":"352","endLine":35,"endColumn":8,"suggestions":"356"},{"ruleId":"346","severity":1,"message":"357","line":20,"column":10,"nodeType":"348","messageId":"349","endLine":20,"endColumn":21},{"ruleId":"358","severity":1,"message":"359","line":119,"column":54,"nodeType":"360","messageId":"361","endLine":119,"endColumn":56},{"ruleId":"346","severity":1,"message":"362","line":6,"column":10,"nodeType":"348","messageId":"349","endLine":6,"endColumn":14},{"ruleId":"346","severity":1,"message":"363","line":6,"column":16,"nodeType":"348","messageId":"349","endLine":6,"endColumn":23},{"ruleId":"346","severity":1,"message":"364","line":7,"column":10,"nodeType":"348","messageId":"349","endLine":7,"endColumn":19},{"ruleId":"346","severity":1,"message":"365","line":7,"column":21,"nodeType":"348","messageId":"349","endLine":7,"endColumn":33},{"ruleId":"346","severity":1,"message":"366","line":8,"column":10,"nodeType":"348","messageId":"349","endLine":8,"endColumn":20},{"ruleId":"346","severity":1,"message":"367","line":8,"column":22,"nodeType":"348","messageId":"349","endLine":8,"endColumn":35},{"ruleId":"346","severity":1,"message":"362","line":6,"column":10,"nodeType":"348","messageId":"349","endLine":6,"endColumn":14},{"ruleId":"346","severity":1,"message":"363","line":6,"column":16,"nodeType":"348","messageId":"349","endLine":6,"endColumn":23},{"ruleId":"346","severity":1,"message":"364","line":7,"column":10,"nodeType":"348","messageId":"349","endLine":7,"endColumn":19},{"ruleId":"346","severity":1,"message":"365","line":7,"column":21,"nodeType":"348","messageId":"349","endLine":7,"endColumn":33},{"ruleId":"346","severity":1,"message":"366","line":8,"column":10,"nodeType":"348","messageId":"349","endLine":8,"endColumn":20},{"ruleId":"346","severity":1,"message":"367","line":8,"column":22,"nodeType":"348","messageId":"349","endLine":8,"endColumn":35},{"ruleId":"346","severity":1,"message":"362","line":6,"column":10,"nodeType":"348","messageId":"349","endLine":6,"endColumn":14},{"ruleId":"346","severity":1,"message":"363","line":6,"column":16,"nodeType":"348","messageId":"349","endLine":6,"endColumn":23},{"ruleId":"346","severity":1,"message":"364","line":7,"column":10,"nodeType":"348","messageId":"349","endLine":7,"endColumn":19},{"ruleId":"346","severity":1,"message":"365","line":7,"column":21,"nodeType":"348","messageId":"349","endLine":7,"endColumn":33},{"ruleId":"346","severity":1,"message":"366","line":8,"column":10,"nodeType":"348","messageId":"349","endLine":8,"endColumn":20},{"ruleId":"346","severity":1,"message":"367","line":8,"column":22,"nodeType":"348","messageId":"349","endLine":8,"endColumn":35},{"ruleId":"346","severity":1,"message":"368","line":1,"column":17,"nodeType":"348","messageId":"349","endLine":1,"endColumn":26},{"ruleId":"346","severity":1,"message":"362","line":6,"column":10,"nodeType":"348","messageId":"349","endLine":6,"endColumn":14},{"ruleId":"346","severity":1,"message":"363","line":6,"column":16,"nodeType":"348","messageId":"349","endLine":6,"endColumn":23},{"ruleId":"346","severity":1,"message":"364","line":7,"column":10,"nodeType":"348","messageId":"349","endLine":7,"endColumn":19},{"ruleId":"346","severity":1,"message":"365","line":7,"column":21,"nodeType":"348","messageId":"349","endLine":7,"endColumn":33},{"ruleId":"346","severity":1,"message":"366","line":8,"column":10,"nodeType":"348","messageId":"349","endLine":8,"endColumn":20},{"ruleId":"346","severity":1,"message":"367","line":8,"column":22,"nodeType":"348","messageId":"349","endLine":8,"endColumn":35},{"ruleId":"346","severity":1,"message":"369","line":5,"column":10,"nodeType":"348","messageId":"349","endLine":5,"endColumn":14},{"ruleId":"346","severity":1,"message":"370","line":1,"column":17,"nodeType":"348","messageId":"349","endLine":1,"endColumn":29},{"ruleId":"346","severity":1,"message":"371","line":2,"column":10,"nodeType":"348","messageId":"349","endLine":2,"endColumn":21},{"ruleId":"346","severity":1,"message":"372","line":2,"column":23,"nodeType":"348","messageId":"349","endLine":2,"endColumn":41},{"ruleId":"350","severity":1,"message":"373","line":51,"column":6,"nodeType":"352","endLine":51,"endColumn":47,"suggestions":"374"},{"ruleId":"350","severity":1,"message":"375","line":56,"column":6,"nodeType":"352","endLine":56,"endColumn":8,"suggestions":"376"},{"ruleId":"350","severity":1,"message":"375","line":61,"column":6,"nodeType":"352","endLine":61,"endColumn":8,"suggestions":"377"},{"ruleId":"350","severity":1,"message":"375","line":66,"column":6,"nodeType":"352","endLine":66,"endColumn":8,"suggestions":"378"},{"ruleId":"350","severity":1,"message":"379","line":69,"column":6,"nodeType":"352","endLine":69,"endColumn":28,"suggestions":"380"},{"ruleId":"350","severity":1,"message":"381","line":24,"column":6,"nodeType":"352","endLine":24,"endColumn":24,"suggestions":"382"},{"ruleId":"350","severity":1,"message":"375","line":49,"column":6,"nodeType":"352","endLine":49,"endColumn":8,"suggestions":"383"},{"ruleId":"350","severity":1,"message":"384","line":21,"column":6,"nodeType":"352","endLine":21,"endColumn":18,"suggestions":"385"},{"ruleId":"350","severity":1,"message":"386","line":24,"column":6,"nodeType":"352","endLine":24,"endColumn":8,"suggestions":"387"},{"ruleId":"342","replacedBy":"388"},{"ruleId":"344","replacedBy":"389"},{"ruleId":"390","severity":1,"message":"391","line":15,"column":1,"nodeType":"392","endLine":31,"endColumn":2},{"ruleId":"390","severity":1,"message":"391","line":28,"column":1,"nodeType":"392","endLine":89,"endColumn":2},{"ruleId":"346","severity":1,"message":"369","line":8,"column":10,"nodeType":"348","messageId":"349","endLine":8,"endColumn":14},{"ruleId":"346","severity":1,"message":"372","line":10,"column":10,"nodeType":"348","messageId":"349","endLine":10,"endColumn":28},{"ruleId":"346","severity":1,"message":"393","line":5,"column":10,"nodeType":"348","messageId":"349","endLine":5,"endColumn":23},{"ruleId":"346","severity":1,"message":"357","line":8,"column":10,"nodeType":"348","messageId":"349","endLine":8,"endColumn":21},{"ruleId":"346","severity":1,"message":"394","line":3,"column":23,"nodeType":"348","messageId":"349","endLine":3,"endColumn":36},{"ruleId":"350","severity":1,"message":"395","line":21,"column":6,"nodeType":"352","endLine":21,"endColumn":20,"suggestions":"396"},{"ruleId":"342","replacedBy":"397"},{"ruleId":"344","replacedBy":"398"},{"ruleId":"346","severity":1,"message":"399","line":2,"column":8,"nodeType":"348","messageId":"349","endLine":2,"endColumn":14},{"ruleId":"346","severity":1,"message":"400","line":8,"column":9,"nodeType":"348","messageId":"349","endLine":8,"endColumn":26},{"ruleId":"342","replacedBy":"401"},{"ruleId":"344","replacedBy":"402"},{"ruleId":"350","severity":1,"message":"403","line":12,"column":6,"nodeType":"352","endLine":12,"endColumn":8,"suggestions":"404"},"no-native-reassign",["405"],"no-negated-in-lhs",["406"],"@typescript-eslint/no-unused-vars","'key' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getYear'. Either include it or remove the dependency array.","ArrayExpression",["407"],"React Hook useCallback has missing dependencies: 'dispatch' and 'location.pathname'. Either include them or remove the dependency array.",["408"],["409"],"'UserReducer' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'date' is assigned a value but never used.","'setDate' is assigned a value but never used.","'sumIncome' is assigned a value but never used.","'setSumIncome' is assigned a value but never used.","'sumExpense' is assigned a value but never used.","'setSumExpense' is assigned a value but never used.","'useEffect' is defined but never used.","'User' is defined but never used.","'ReactElement' is defined but never used.","'Transaction' is defined but never used.","'TransactionReducer' is defined but never used.","React Hook useCallback has missing dependencies: 'handleOpenEdit' and 'handleOpenTransaction'. Either include them or remove the dependency array. If 'handleOpenEdit' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["410"],"React Hook useCallback has a missing dependency: 'handleInputChange'. Either include it or remove the dependency array. If 'handleInputChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["411"],["412"],["413"],"React Hook useCallback has a missing dependency: 'handleDelete'. Either include it or remove the dependency array. If 'handleDelete' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["414"],"React Hook useCallback has missing dependencies: 'handleSelectEvent' and 'transaction._id'. Either include them or remove the dependency array. If 'handleSelectEvent' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["415"],["416"],"React Hook useCallback has missing dependencies: 'handleInputChange' and 'setIsFeesOpen'. Either include them or remove the dependency array. If 'handleInputChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["417"],"React Hook useCallback has missing dependencies: 'isFeesOpen' and 'setIsFeesOpen'. Either include them or remove the dependency array. If 'setIsFeesOpen' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["418"],["405"],["406"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'isTheSameDate' is defined but never used.","'CalendarDates' is defined but never used.","React Hook useCallback has a missing dependency: 'handleOpenInfoModal'. Either include it or remove the dependency array. If 'handleOpenInfoModal' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["419"],["405"],["406"],"'Select' is defined but never used.","'handleInputChange' is assigned a value but never used.",["405"],["406"],"React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["420"],"no-global-assign","no-unsafe-negation",{"desc":"421","fix":"422"},{"desc":"423","fix":"424"},{"desc":"423","fix":"425"},{"desc":"426","fix":"427"},{"desc":"428","fix":"429"},{"desc":"428","fix":"430"},{"desc":"428","fix":"431"},{"desc":"432","fix":"433"},{"desc":"434","fix":"435"},{"desc":"428","fix":"436"},{"desc":"437","fix":"438"},{"desc":"439","fix":"440"},{"desc":"441","fix":"442"},{"desc":"443","fix":"444"},"Update the dependencies array to be: [getYear, stateTransaction.date]",{"range":"445","text":"446"},"Update the dependencies array to be: [dispatch, location.pathname]",{"range":"447","text":"448"},{"range":"449","text":"448"},"Update the dependencies array to be: [handleOpenEdit, handleOpenTransaction, isEditTransactionOpen, transactionEvent]",{"range":"450","text":"451"},"Update the dependencies array to be: [handleInputChange]",{"range":"452","text":"453"},{"range":"454","text":"453"},{"range":"455","text":"453"},"Update the dependencies array to be: [handleDelete, transactionEvent._id]",{"range":"456","text":"457"},"Update the dependencies array to be: [handleSelectEvent, transaction._id, transactionEvent]",{"range":"458","text":"459"},{"range":"460","text":"453"},"Update the dependencies array to be: [handleInputChange, isFeesOpen, setIsFeesOpen]",{"range":"461","text":"462"},"Update the dependencies array to be: [isFeesOpen, setIsFeesOpen]",{"range":"463","text":"464"},"Update the dependencies array to be: [calendarDate.date, handleOpenInfoModal]",{"range":"465","text":"466"},"Update the dependencies array to be: [getUser]",{"range":"467","text":"468"},[981,1004],"[getYear, stateTransaction.date]",[946,948],"[dispatch, location.pathname]",[1129,1131],[1550,1591],"[handleOpenEdit, handleOpenTransaction, isEditTransactionOpen, transactionEvent]",[1728,1730],"[handleInputChange]",[1869,1871],[2012,2014],[2116,2138],"[handleDelete, transactionEvent._id]",[737,755],"[handleSelectEvent, transaction._id, transactionEvent]",[1654,1656],[664,676],"[handleInputChange, isFeesOpen, setIsFeesOpen]",[760,762],"[isFeesOpen, setIsFeesOpen]",[641,655],"[calendarDate.date, handleOpenInfoModal]",[404,406],"[getUser]"]