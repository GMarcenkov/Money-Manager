[{"/home/niksan/Desktop/Projects/budget-tracker/src/index.tsx":"1","/home/niksan/Desktop/Projects/budget-tracker/src/reportWebVitals.ts":"2","/home/niksan/Desktop/Projects/budget-tracker/src/App.tsx":"3","/home/niksan/Desktop/Projects/budget-tracker/src/store/store.tsx":"4","/home/niksan/Desktop/Projects/budget-tracker/src/routes.tsx":"5","/home/niksan/Desktop/Projects/budget-tracker/src/helpers/AuthProvider.tsx":"6","/home/niksan/Desktop/Projects/budget-tracker/src/store/reducers/index.tsx":"7","/home/niksan/Desktop/Projects/budget-tracker/src/pages/homePage/HomePage.tsx":"8","/home/niksan/Desktop/Projects/budget-tracker/src/pages/transactionPage/WeeklyPage.tsx":"9","/home/niksan/Desktop/Projects/budget-tracker/src/pages/loginPage/LoginPage.tsx":"10","/home/niksan/Desktop/Projects/budget-tracker/src/pages/transactionPage/DailyPage.tsx":"11","/home/niksan/Desktop/Projects/budget-tracker/src/pages/transactionPage/YearlyPage.tsx":"12","/home/niksan/Desktop/Projects/budget-tracker/src/pages/statsPage/WeeklyPage.tsx":"13","/home/niksan/Desktop/Projects/budget-tracker/src/pages/transactionPage/MonthlyPage.tsx":"14","/home/niksan/Desktop/Projects/budget-tracker/src/pages/statsPage/DailyPage.tsx":"15","/home/niksan/Desktop/Projects/budget-tracker/src/pages/statsPage/YearlyPage.tsx":"16","/home/niksan/Desktop/Projects/budget-tracker/src/pages/exportPage/ExportPage.tsx":"17","/home/niksan/Desktop/Projects/budget-tracker/src/pages/statsPage/MonthlyPage.tsx":"18","/home/niksan/Desktop/Projects/budget-tracker/src/modules/login/actions/usersActions.tsx":"19","/home/niksan/Desktop/Projects/budget-tracker/src/modules/transaction/service/TransactionService.tsx":"20","/home/niksan/Desktop/Projects/budget-tracker/src/modules/login/reducer/userReducer.tsx":"21","/home/niksan/Desktop/Projects/budget-tracker/src/modules/login/LoginContainer.tsx":"22","/home/niksan/Desktop/Projects/budget-tracker/src/modules/transaction/weeklyContainer/WeeklyContainer.tsx":"23","/home/niksan/Desktop/Projects/budget-tracker/src/modules/transaction/yearlyContainer/YearlyContainer.tsx":"24","/home/niksan/Desktop/Projects/budget-tracker/src/modules/transaction/dailyContainer/DailyContainer.tsx":"25","/home/niksan/Desktop/Projects/budget-tracker/src/modules/transaction/monthlyContainer/MonthlyContainer.tsx":"26","/home/niksan/Desktop/Projects/budget-tracker/src/modules/export/ExportContainer.tsx":"27","/home/niksan/Desktop/Projects/budget-tracker/src/layout/header/Header.tsx":"28","/home/niksan/Desktop/Projects/budget-tracker/src/layout/addTranasctionButton/AddTransactionButton.tsx":"29","/home/niksan/Desktop/Projects/budget-tracker/src/modules/login/actionTypes.tsx":"30","/home/niksan/Desktop/Projects/budget-tracker/src/modules/stats/dailyContainer/DailyContainer.tsx":"31","/home/niksan/Desktop/Projects/budget-tracker/src/modules/stats/weeklyContainer/WeeklyContainer.tsx":"32","/home/niksan/Desktop/Projects/budget-tracker/src/modules/stats/yearlyContainer/YearlyContainer.tsx":"33","/home/niksan/Desktop/Projects/budget-tracker/src/modules/stats/monthlyContainer/MonthlyContainer.tsx":"34","/home/niksan/Desktop/Projects/budget-tracker/src/modules/transaction/reducers/transactionReducer.tsx":"35","/home/niksan/Desktop/Projects/budget-tracker/src/helpers/Validation.tsx":"36","/home/niksan/Desktop/Projects/budget-tracker/src/helpers/Variables.tsx":"37","/home/niksan/Desktop/Projects/budget-tracker/src/modules/login/components/RegistrationForm.tsx":"38","/home/niksan/Desktop/Projects/budget-tracker/src/modules/login/components/LoginForm.tsx":"39","/home/niksan/Desktop/Projects/budget-tracker/src/modules/login/components/SocialNetworks.tsx":"40","/home/niksan/Desktop/Projects/budget-tracker/src/layout/navBar/NavBar.tsx":"41","/home/niksan/Desktop/Projects/budget-tracker/src/modules/transaction/weeklyContainer/components/WeeklyTableRow.tsx":"42","/home/niksan/Desktop/Projects/budget-tracker/src/modules/transaction/yearlyContainer/components/YearlyTableRow.tsx":"43","/home/niksan/Desktop/Projects/budget-tracker/src/modules/transaction/actions/transactionActions.tsx":"44","/home/niksan/Desktop/Projects/budget-tracker/src/modules/transaction/monthlyContainer/Calendar/Calendar.tsx":"45","/home/niksan/Desktop/Projects/budget-tracker/src/modules/transaction/actionTypes.tsx":"46","/home/niksan/Desktop/Projects/budget-tracker/src/layout/sideBar/SideBar.tsx":"47","/home/niksan/Desktop/Projects/budget-tracker/src/layout/accountMenu/AccountMenu.tsx":"48","/home/niksan/Desktop/Projects/budget-tracker/src/modules/transaction/components/InfoTableHead/InfoTableHead.tsx":"49","/home/niksan/Desktop/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/AddTransactionModal.tsx":"50","/home/niksan/Desktop/Projects/budget-tracker/src/modules/transaction/components/infoModal/InfoModal.tsx":"51","/home/niksan/Desktop/Projects/budget-tracker/src/modules/transaction/dailyContainer/components/dailyTableRow/DailyTableRow.tsx":"52","/home/niksan/Desktop/Projects/budget-tracker/src/modules/transaction/dailyContainer/components/dailyTableHeader/DailyTableHeader.tsx":"53","/home/niksan/Desktop/Projects/budget-tracker/src/modules/stats/components/StatsForm.tsx":"54","/home/niksan/Desktop/Projects/budget-tracker/src/modules/transaction/monthlyContainer/Calendar/CalendarDate.tsx":"55","/home/niksan/Desktop/Projects/budget-tracker/src/modules/transaction/components/infoModal/components/TableRow.tsx":"56","/home/niksan/Desktop/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/Form.tsx":"57","/home/niksan/Desktop/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/components/SelectInputs.tsx":"58","/home/niksan/Desktop/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/components/FeesInput.tsx":"59","/home/niksan/Desktop/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/components/InputTitles.tsx":"60","/home/niksan/Desktop/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/components/AmountInput.tsx":"61"},{"size":620,"mtime":1618263849187,"results":"62","hashOfConfig":"63"},{"size":427,"mtime":1618270707677,"results":"64","hashOfConfig":"63"},{"size":246,"mtime":1618264019185,"results":"65","hashOfConfig":"63"},{"size":370,"mtime":1618263849191,"results":"66","hashOfConfig":"63"},{"size":1783,"mtime":1618264029689,"results":"67","hashOfConfig":"63"},{"size":918,"mtime":1618619049761,"results":"68","hashOfConfig":"63"},{"size":268,"mtime":1618270070943,"results":"69","hashOfConfig":"63"},{"size":192,"mtime":1618264669311,"results":"70","hashOfConfig":"63"},{"size":433,"mtime":1618270731145,"results":"71","hashOfConfig":"63"},{"size":218,"mtime":1618264044173,"results":"72","hashOfConfig":"63"},{"size":427,"mtime":1618267008621,"results":"73","hashOfConfig":"63"},{"size":433,"mtime":1618267029637,"results":"74","hashOfConfig":"63"},{"size":305,"mtime":1618267390119,"results":"75","hashOfConfig":"63"},{"size":317,"mtime":1618620254421,"results":"76","hashOfConfig":"63"},{"size":299,"mtime":1618267353147,"results":"77","hashOfConfig":"63"},{"size":305,"mtime":1618267378795,"results":"78","hashOfConfig":"63"},{"size":290,"mtime":1618270759997,"results":"79","hashOfConfig":"63"},{"size":311,"mtime":1618267361527,"results":"80","hashOfConfig":"63"},{"size":412,"mtime":1618619407881,"results":"81","hashOfConfig":"63"},{"size":2619,"mtime":1618620171929,"results":"82","hashOfConfig":"63"},{"size":625,"mtime":1618619463966,"results":"83","hashOfConfig":"63"},{"size":4007,"mtime":1618619374781,"results":"84","hashOfConfig":"63"},{"size":2688,"mtime":1618615555503,"results":"85","hashOfConfig":"63"},{"size":3335,"mtime":1618620213863,"results":"86","hashOfConfig":"63"},{"size":3171,"mtime":1618615555503,"results":"87","hashOfConfig":"63"},{"size":10421,"mtime":1618623609425,"results":"88","hashOfConfig":"63"},{"size":590,"mtime":1618619316720,"results":"89","hashOfConfig":"63"},{"size":1430,"mtime":1618264685174,"results":"90","hashOfConfig":"63"},{"size":3448,"mtime":1618615555503,"results":"91","hashOfConfig":"63"},{"size":68,"mtime":1618268036391,"results":"92","hashOfConfig":"63"},{"size":709,"mtime":1618619588057,"results":"93","hashOfConfig":"63"},{"size":711,"mtime":1618619602692,"results":"94","hashOfConfig":"63"},{"size":711,"mtime":1618619613670,"results":"95","hashOfConfig":"63"},{"size":752,"mtime":1618267339755,"results":"96","hashOfConfig":"63"},{"size":2149,"mtime":1618622700101,"results":"97","hashOfConfig":"63"},{"size":2198,"mtime":1618619099262,"results":"98","hashOfConfig":"63"},{"size":3381,"mtime":1618619285520,"results":"99","hashOfConfig":"63"},{"size":1698,"mtime":1618264606259,"results":"100","hashOfConfig":"63"},{"size":1280,"mtime":1618271889148,"results":"101","hashOfConfig":"63"},{"size":767,"mtime":1618271914620,"results":"102","hashOfConfig":"63"},{"size":3153,"mtime":1618615555503,"results":"103","hashOfConfig":"63"},{"size":894,"mtime":1618615555503,"results":"104","hashOfConfig":"63"},{"size":988,"mtime":1618620223927,"results":"105","hashOfConfig":"63"},{"size":1180,"mtime":1618272131586,"results":"106","hashOfConfig":"63"},{"size":1358,"mtime":1618619666929,"results":"107","hashOfConfig":"63"},{"size":337,"mtime":1618268667084,"results":"108","hashOfConfig":"63"},{"size":1259,"mtime":1618263849187,"results":"109","hashOfConfig":"63"},{"size":1015,"mtime":1618271766009,"results":"110","hashOfConfig":"63"},{"size":831,"mtime":1618395798106,"results":"111","hashOfConfig":"63"},{"size":4837,"mtime":1618269013609,"results":"112","hashOfConfig":"63"},{"size":2430,"mtime":1618619639104,"results":"113","hashOfConfig":"63"},{"size":2085,"mtime":1618615555503,"results":"114","hashOfConfig":"63"},{"size":1314,"mtime":1618615555503,"results":"115","hashOfConfig":"63"},{"size":1303,"mtime":1618619484358,"results":"116","hashOfConfig":"63"},{"size":1865,"mtime":1618619677008,"results":"117","hashOfConfig":"63"},{"size":1464,"mtime":1618619655198,"results":"118","hashOfConfig":"63"},{"size":3815,"mtime":1618619918865,"results":"119","hashOfConfig":"63"},{"size":846,"mtime":1618269105501,"results":"120","hashOfConfig":"63"},{"size":1249,"mtime":1618269101109,"results":"121","hashOfConfig":"63"},{"size":1045,"mtime":1618269068925,"results":"122","hashOfConfig":"63"},{"size":1359,"mtime":1618269131508,"results":"123","hashOfConfig":"63"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},"v4swfw",{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"126"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"126"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"126"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"126"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"126"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"126"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"126"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"126"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"126"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"126"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"126"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"126"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"126"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/niksan/Desktop/Projects/budget-tracker/src/index.tsx",[],["260","261","262","263","264","265"],"/home/niksan/Desktop/Projects/budget-tracker/src/reportWebVitals.ts",[],"/home/niksan/Desktop/Projects/budget-tracker/src/App.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/store/store.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/routes.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/helpers/AuthProvider.tsx",["266","267","268"],"import React, {useEffect, useState} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {getUserByJWToken} from '../modules/transaction/service/TransactionService';\nimport {singIn} from '../modules/login/actions/usersActions';\n\nconst AuthProvider = (props: any) => {\n  const [isLoading, setIsLoading] = useState(true);\n\n  const dispatch = useDispatch();\n\n  const getUser = async () => {\n    const user = await getUserByJWToken();\n\n    if (!user.user) {\n      localStorage.removeItem('jwt');\n      setIsLoading(false);\n    } else {\n      dispatch(singIn(user));\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getUser();\n  });\n\n  if (isLoading) {\n    return <div />;\n  }\n  if (!localStorage.getItem('jwt') && !(window.location.pathname === '/authentication')) {\n    window.location.pathname = '/authentication';\n    return <div />;\n  }\n\n  return props.children;\n};\nexport default AuthProvider;\n","/home/niksan/Desktop/Projects/budget-tracker/src/store/reducers/index.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/pages/homePage/HomePage.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/pages/transactionPage/WeeklyPage.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/pages/loginPage/LoginPage.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/pages/transactionPage/DailyPage.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/pages/transactionPage/YearlyPage.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/pages/statsPage/WeeklyPage.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/pages/transactionPage/MonthlyPage.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/pages/statsPage/DailyPage.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/pages/statsPage/YearlyPage.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/pages/exportPage/ExportPage.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/pages/statsPage/MonthlyPage.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/modules/login/actions/usersActions.tsx",["269","270","271"],"import {SIGN_IN} from '../actionTypes';\n\nexport const singIn = (user: {\n  email: string;\n  password: string;\n  categories: [];\n  createdAt: string;\n  username: string;\n  updatedAt: string;\n  type: string;\n  id: string;\n}) => async (dispatch: any): Promise<void> => {\n  try {\n    await dispatch({\n      type: SIGN_IN,\n      payload: user\n    });\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport default singIn;\n","/home/niksan/Desktop/Projects/budget-tracker/src/modules/transaction/service/TransactionService.tsx",["272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295"],"import axios, {AxiosResponse} from 'axios';\n\nconst config = {\n  headers: {\n    Authorization: `Bearer ${localStorage.getItem('jwt')}`\n  }\n};\n\nexport const createTransactionRequest = async (\n  data: any\n): Promise<\n  | AxiosResponse<any>\n  | {\n      error: any;\n    }\n> => {\n  const url = `http://localhost:5000/transaction/create`;\n\n  const request: any = {\n    method: 'POST',\n    data,\n    headers: config.headers,\n    url\n  };\n\n  try {\n    const response = await axios(request);\n    return response;\n  } catch (e) {\n    return {error: e};\n  }\n};\n\nexport const getSpecificDatePeriod = async (from: Date, to: Date): Promise<any> => {\n  const url = `http://localhost:5000/transaction/specificDatePeriod/${from}/${to}`;\n\n  const request: any = {\n    method: 'GET',\n    headers: config.headers,\n    url\n  };\n  try {\n    const response = await axios(request);\n    return response.data;\n  } catch (e) {\n    console.error(e);\n    return [];\n  }\n};\n\nexport const getYearlyOrWeekly = async (data: any): Promise<any> => {\n  const url = `http://localhost:5000/transaction/getYearlyOrWeekly`;\n\n  const request: any = {\n    method: 'POST',\n    data,\n    headers: config.headers,\n    url\n  };\n  try {\n    const response = await axios(request);\n    return response.data;\n  } catch (e) {\n    console.error(e);\n    return [];\n  }\n};\nexport const editTransaction = async (\n  selectedDayId: string,\n  transactionId: string,\n  data: any\n): Promise<\n  | AxiosResponse<any>\n  | {\n      error: any;\n    }\n> => {\n  const url = `http://localhost:5000/transaction/event/edit/${selectedDayId}/${transactionId}`;\n\n  const request: any = {\n    method: 'PUT',\n    data,\n    headers: config.headers,\n    url\n  };\n\n  try {\n    const response = await axios(request);\n    return response;\n  } catch (e) {\n    return {error: e};\n  }\n};\nexport const deleteTransaction = async (\n  selectedDayId: string,\n  transactionId: string\n): Promise<\n  | AxiosResponse<any>\n  | {\n      error: any;\n    }\n> => {\n  const url = `http://localhost:5000/transaction/event/delete/${selectedDayId}/${transactionId}`;\n\n  const request: any = {\n    method: 'PUT',\n    data: {},\n    headers: config.headers,\n    url\n  };\n\n  try {\n    const response = await axios(request);\n    return response;\n  } catch (e) {\n    return {error: e};\n  }\n};\nexport const getUserByJWToken = async (): Promise<any> => {\n  const url = `http://localhost:5000/user/logged`;\n\n  const request: any = {\n    method: 'GET',\n    headers: config.headers,\n    url\n  };\n  try {\n    const response = await axios(request);\n\n    return response.data;\n  } catch (e) {\n    console.error(e);\n    return [];\n  }\n};\n","/home/niksan/Desktop/Projects/budget-tracker/src/modules/login/reducer/userReducer.tsx",["296","297","298"],"import {UserRegister} from '../../../models/User';\nimport {SIGN_IN} from '../actionTypes';\n\nexport interface State {\n  user: UserRegister;\n  token: string;\n  loading: boolean;\n}\n\nconst initialState = {\n  user: {},\n  token: '',\n  loading: true\n};\n\nexport default (state = initialState, action: any) => {\n  switch (action.type) {\n    case SIGN_IN:\n      if (action.payload.token) {\n        localStorage.setItem('jwt', action.payload.token);\n      }\n\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        loading: false\n      };\n    default:\n      return state;\n  }\n};\n","/home/niksan/Desktop/Projects/budget-tracker/src/modules/login/LoginContainer.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/modules/transaction/weeklyContainer/WeeklyContainer.tsx",["299"],"import React, {useEffect, useState} from 'react';\nimport {useSelector} from 'react-redux';\nimport Moment from 'moment';\nimport NavBarMenu from '../../../layout/navBar/NavBar';\nimport InfoTableHead from '../components/InfoTableHead/InfoTableHead';\nimport WeeklyTableRow from './components/WeeklyTableRow';\nimport {getYearlyOrWeekly} from '../service/TransactionService';\nimport {\n  firstDateOfFirstWeekOfTheMonth,\n  lastDateOfFirstWeekOfTheMonth,\n  firstDateOfLastWeekOfTheMonth,\n  lastDateOfLastWeekOfTheMonth\n} from '../../../helpers/Variables';\nimport {Month, TransactionReducer} from '../../../models/Transaction';\nimport {UserReducer} from '../../../models/User';\nimport styles from './WeeklyStyle.module.css';\nimport '../../../scss/variables.scss';\n\nconst WeeklyContainer = (): JSX.Element => {\n  const [weeks, setWeeks] = useState<Month[]>([]);\n  const [sumIncome, setSumIncome] = useState(0);\n  const [sumExpense, setSumExpense] = useState(0);\n\n  const stateTransaction = useSelector(\n    (state: {userReducer: UserReducer; transactionReducer: TransactionReducer}) => state.transactionReducer\n  );\n\n  const getWeeks = async (date: Date) => {\n    // const weeks: Month[] = [];\n\n    weeks.push({\n      from: firstDateOfFirstWeekOfTheMonth(date).toDate(),\n      to: lastDateOfFirstWeekOfTheMonth(date).toDate(),\n      income: 0,\n      expense: 0\n    });\n\n    for (\n      let i = lastDateOfFirstWeekOfTheMonth(date).get('date');\n      i <= firstDateOfLastWeekOfTheMonth(date).get('date') - 7;\n      i += 7\n    ) {\n      weeks.push({\n        from: Moment(date)\n          .set('date', i + 1)\n          .startOf('date')\n          .toDate(),\n        to: Moment(date)\n          .set('date', i + 7)\n          .startOf('date')\n          .toDate(),\n        income: 0,\n        expense: 0\n      });\n    }\n\n    weeks.push({\n      from: firstDateOfLastWeekOfTheMonth(date).startOf('date').toDate(),\n      to: lastDateOfLastWeekOfTheMonth(date).startOf('date').toDate(),\n      income: 0,\n      expense: 0\n    });\n\n    const data = await getYearlyOrWeekly(weeks);\n\n    setWeeks(data.months.reverse());\n    setSumExpense(data.sumExpense);\n    setSumIncome(data.sumIncome);\n  };\n\n  useEffect(() => {\n    getWeeks(stateTransaction.date);\n  }, [stateTransaction.date]);\n  return (\n    <div className=\"wrapper\">\n      <NavBarMenu />\n      <div className={styles.container}>\n        <table className={styles.table}>\n          <InfoTableHead sumExpense={sumExpense} sumIncome={sumIncome} />\n          <tbody>\n            {weeks.map((week) => (\n              <WeeklyTableRow week={week} />\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default WeeklyContainer;\n","/home/niksan/Desktop/Projects/budget-tracker/src/modules/transaction/yearlyContainer/YearlyContainer.tsx",["300"],"import React, {useEffect, useState} from 'react';\nimport {useSelector} from 'react-redux';\nimport Moment from 'moment';\nimport {getYearlyOrWeekly} from '../service/TransactionService';\nimport {Month, TransactionReducer} from '../../../models/Transaction';\nimport {UserReducer} from '../../../models/User';\nimport NavBarMenu from '../../../layout/navBar/NavBar';\nimport InfoTableHead from '../components/InfoTableHead/InfoTableHead';\nimport YearlyTableRow from './components/YearlyTableRow';\nimport styles from './YearlyStyle.module.css';\n\nconst YearlyContainer = (): JSX.Element => {\n  const [monthsInYear, setMonthsInYear] = useState<Month[]>([]);\n  const [sumIncome, setSumIncome] = useState(0);\n  const [sumExpense, setSumExpense] = useState(0);\n\n  const stateTransaction = useSelector(\n    (state: {userReducer: UserReducer; transactionReducer: TransactionReducer}) => state.transactionReducer\n  );\n  const setMonths = (months: Month[]) => {\n    const year: Month[] = [];\n    const newMonths: Month[] = months.filter((month) => month.expense > 0 || month.income > 0);\n    let lastMonth: number = Moment().get('month');\n    if (newMonths.length > 0 && lastMonth < Moment(newMonths[newMonths.length - 1].from).get('month')) {\n      lastMonth = Moment(newMonths[newMonths.length - 1].from).get('month');\n    }\n    for (let i = 0; i <= lastMonth; i += 1) {\n      if (newMonths.filter((month) => Moment(month.from).get('month') === i).length > 0) {\n        year.push(newMonths.filter((month) => Moment(month.from).get('month') === i)[0]);\n      } else {\n        year.push({\n          from: Moment().startOf('month').set('month', i).toDate(),\n          to: Moment().endOf('month').set('month', i).toDate(),\n          income: 0,\n          expense: 0\n        });\n      }\n    }\n    setMonthsInYear(year.reverse());\n  };\n\n  const getYear = async (date: Date) => {\n    const months: Month[] = [];\n\n    for (let i = 0; i <= 11; i += 1) {\n      months.push({\n        from: Moment(date).set('month', i).startOf('month').toDate(),\n        to: Moment(date).set('month', i).endOf('month').toDate(),\n        income: 0,\n        expense: 0\n      });\n    }\n\n    const data = await getYearlyOrWeekly(months);\n\n    if (Moment(date).get('year') < Moment().get('year')) {\n      setMonthsInYear(data.months.reverse());\n      setSumExpense(data.sumExpense);\n      setSumIncome(data.sumIncome);\n    }\n\n    if (Moment(date).get('year') === Moment().get('year')) {\n      setMonths(data.months);\n      setSumExpense(data.sumExpense);\n      setSumIncome(data.sumIncome);\n    }\n    if (Moment(date).get('year') > Moment().get('year')) {\n      setMonthsInYear(data.months.filter((month: Month) => month.expense > 0 || month.income > 0).reverse());\n      setSumExpense(data.sumExpense);\n      setSumIncome(data.sumIncome);\n    }\n  };\n\n  useEffect(() => {\n    getYear(stateTransaction.date);\n  }, [stateTransaction.date]);\n\n  return (\n    <div className=\"wrapper\">\n      <NavBarMenu />\n      <div className={styles.container}>\n        <table className={styles.table}>\n          <InfoTableHead sumIncome={sumIncome} sumExpense={sumExpense} />\n          <tbody>\n            {monthsInYear.map((month) => (\n              <YearlyTableRow month={month} />\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default YearlyContainer;\n","/home/niksan/Desktop/Projects/budget-tracker/src/modules/transaction/dailyContainer/DailyContainer.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/modules/transaction/monthlyContainer/MonthlyContainer.tsx",["301","302"],"import React, {useEffect, useState} from 'react';\n\nimport Moment from 'moment';\nimport {useDispatch, useSelector} from 'react-redux';\nimport NavBarMenu from '../../../layout/navBar/NavBar';\nimport InfoModal from '../components/infoModal/InfoModal';\nimport Calendar from './Calendar/Calendar';\nimport {\n  firstDateOfFirstWeekOfTheMonth,\n  firstDateOfTheMonth,\n  lastDateOfTheMonth,\n  lastDateOfLastWeekOfTheMonth,\n  isTheSameDate\n} from '../../../helpers/Variables';\nimport {deleteTransaction, getSpecificDatePeriod} from '../service/TransactionService';\nimport {handleInput, setTransaction} from '../actions/transactionActions';\nimport {\n  Transaction,\n  TransactionEvent,\n  TransactionEventWithAmountNumber,\n  TransactionReducer,\n  TransactionWithAmountNumber\n} from '../../../models/Transaction';\nimport {Error} from '../../../models/Error';\nimport '../../../scss/variables.scss';\nimport AddTransactionButton from '../../../layout/addTranasctionButton/AddTransactionButton';\n\ntype State = {\n  isAddTransactionOpen: boolean;\n  isInfoTransactionOpen: boolean;\n  isEditTransactionOpen: boolean;\n  selectedDay: Transaction;\n  isTransfer: boolean;\n  errors: Error;\n  date: Date;\n  calendarDates: {date: Date}[];\n  transactions: Transaction[];\n};\n\nconst MonthlyContainer = (): JSX.Element => {\n  const [transactions, setTransactions] = useState<TransactionWithAmountNumber[]>([]);\n  const [selectedTransaction, setSelectedTransaction] = useState<TransactionWithAmountNumber>({\n    _id: '',\n    createdAt: Moment().startOf('date').toDate(),\n    events: [],\n    expense: 0,\n    income: 0\n  });\n  // const [calendarDates] = useState<State['calendarDates']>([]);\n  const [isEditTransactionOpen, setIsEditTransactionOpen] = useState(false);\n  const [isAddTransactionOpen, setIsAddTransactionOpen] = useState(false);\n  const [isInfoTransactionOpen, setIsInfoTransactionOpen] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const stateTransaction = useSelector((state: {transactionReducer: TransactionReducer}) => state.transactionReducer);\n\n  // eslint-disable-next-line react/state-in-constructor\n\n  // componentDidMount() {\n  //   const {stateTransaction, filters, setDate: setDateWithFilter} = this.props;\n  //   if (filters.date) {\n  //     this.setState({\n  //       date: filters.date\n  //     });\n  //     setDateWithFilter(filters.date);\n  //     this.getTransactions(filters.date);\n  //     this.setCalendar(filters.date);\n  //   } else {\n  //     this.setState({\n  //       date: stateTransaction.date\n  //     });\n  //     this.getTransactions(stateTransaction.date);\n  //     this.setCalendar(stateTransaction.date);\n  //   }\n  // }\n\n  // componentDidUpdate(prevProps: Readonly<Props>) {\n  //   const {stateTransaction, filters} = this.props;\n\n  //   if (prevProps.stateTransaction.date !== stateTransaction.date) {\n  //     if (!filters.date) {\n  //       this.setCalendar(stateTransaction.date);\n  //       this.getTransactions(stateTransaction.date);\n  //     }\n  //   }\n  // }\n\n  const getTransactions = async (date: Date) => {\n    const from: Date = firstDateOfFirstWeekOfTheMonth(date).toDate();\n    const to: Date = lastDateOfLastWeekOfTheMonth(date).toDate();\n    const data = await getSpecificDatePeriod(from, to);\n    data.transactions.forEach((transactionItem: TransactionWithAmountNumber) => {\n      if (isTheSameDate(selectedTransaction.createdAt, transactionItem.createdAt)) {\n        setSelectedTransaction(transactionItem);\n      }\n    });\n    setTransactions(data.transactions);\n  };\n\n  const clearState = () => {\n    setTransaction({\n      _id: '',\n      type: 'income',\n      date: Moment().toDate(),\n      account: '',\n      from: '',\n      category: '',\n      fees: '0',\n      to: '',\n      amount: '0',\n      note: '',\n      description: '',\n      transactionId: ''\n    });\n  };\n\n  const handleDelete = async (eventId: string) => {\n    const {_id: selectedDayId} = selectedTransaction;\n\n    await deleteTransaction(selectedDayId, eventId);\n    // eslint-disable-next-line no-underscore-dangle\n    const newEvents: TransactionEventWithAmountNumber[] = selectedTransaction.events.filter(\n      ({_id: transactionEventId}) => transactionEventId !== eventId\n    );\n    // this.setState({\n    //   selectedDay: {...selectedDay, events: newEvents},\n    //   isEditTransactionOpen: false\n    // });\n    setSelectedTransaction({...selectedTransaction, events: newEvents});\n    clearState();\n    getTransactions(stateTransaction.date);\n  };\n\n  const handleOpenEdit = (event: TransactionEventWithAmountNumber) => {\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n\n    const {_id: selectedTransactionId} = selectedTransaction;\n    if (isEditTransactionOpen) {\n      setIsEditTransactionOpen(false);\n\n      clearState();\n    } else {\n      setIsEditTransactionOpen(true);\n\n      const Event: TransactionEvent = {\n        ...event,\n        amount: (event.amount / 100).toFixed(2),\n        fees: (event.fees / 100).toFixed(2),\n        transactionId: selectedTransactionId\n      };\n\n      dispatch(setTransaction(Event));\n    }\n  };\n\n  const handleNextDay = async () => {\n    const newDate: Date = Moment(selectedTransaction.createdAt).add(1, 'days').toDate();\n    setSelectedTransaction({...selectedTransaction, createdAt: newDate, events: []});\n\n    // this.setState({\n    //   selectedDay: {createdAt: newDate, events: []},\n    //   date: newDate\n    // });\n\n    transactions.forEach((transaction) => {\n      if (isTheSameDate(newDate, transaction.createdAt)) {\n        setSelectedTransaction(transaction);\n      }\n    });\n  };\n\n  const handlePreviousDay = async () => {\n    const newDate: Date = Moment(selectedTransaction.createdAt).add(-1, 'days').toDate();\n    // this.setState({\n    //   selectedDay: {createdAt: newDate, events: []},\n    //   date: newDate\n    // });\n    setSelectedTransaction({...selectedTransaction, createdAt: newDate, events: []});\n\n    transactions.forEach((transaction) => {\n      if (isTheSameDate(newDate, transaction.createdAt)) {\n        setSelectedTransaction(transaction);\n      }\n    });\n  };\n\n  const handleOpenTransaction = () => {\n    const {createdAt} = selectedTransaction;\n    // const {handleInput} = this.props;\n    if (isAddTransactionOpen) {\n      setIsAddTransactionOpen(false);\n      clearState();\n    } else {\n      handleInput({\n        target: {\n          name: 'date',\n          value: createdAt\n        }\n      });\n      setIsAddTransactionOpen(true);\n    }\n  };\n\n  const selectedDay = (date: Date) => {\n    transactions.forEach((transaction) => {\n      if (isTheSameDate(date, transaction.createdAt)) {\n        setSelectedTransaction(transaction);\n      }\n    });\n  };\n\n  const handleOpenInfoModal = (date: Date) => {\n    if (isInfoTransactionOpen) {\n      setIsInfoTransactionOpen(false);\n      setSelectedTransaction({...selectedTransaction, events: []});\n    } else {\n      setIsInfoTransactionOpen(true);\n      setSelectedTransaction({...selectedTransaction, createdAt: date, events: []});\n\n      selectedDay(date);\n    }\n  };\n\n  // const handleSave = async () => {\n  //   const {_id: transactionEventId} = stateTransaction.transactionEvent;\n  //   const errors1: Error = validateTransaction(stateTransaction.transactionEvent);\n  //   const isValid: boolean = Object.values(errors1).filter(Boolean).length <= 0;\n\n  //   if (!isValid) {\n  //     setErrors(errors);\n  //     return;\n  //   }\n  //   const event = getTransaction(stateTransaction.transactionEvent);\n\n  //   if (isEditTransactionOpen) {\n  //     await editTransaction(selectedDayId, transactionEventId, event.events[0]);\n\n  //     this.getTransactions(transactionEvent.date);\n  //     this.clearState();\n  //   } else {\n  //     await createTransactionRequest(event);\n  //     this.getTransactions(date);\n  //     this.clearState();\n  //   }\n  //   this.setState({\n  //     // eslint-disable-next-line react/no-access-state-in-setstate\n  //     ...this.state,\n  //     errors: {},\n  //     isAddTransactionOpen: false,\n  //     isEditTransactionOpen: false\n  //   });\n  // };\n\n  const setFirstWeek = (date: Date) => {\n    const lastDateOfPreviusMonth: number = Moment(date).set('date', 0).get('date');\n\n    for (let i = firstDateOfFirstWeekOfTheMonth(date).get('date'); i <= lastDateOfPreviusMonth; i += 1) {\n      stateTransaction.calendarDates.push({\n        date: Moment(firstDateOfFirstWeekOfTheMonth(date)).set('date', i).toDate()\n      });\n    }\n  };\n\n  const setLastWeek = (date: Date) => {\n    for (let i = 1; i <= lastDateOfLastWeekOfTheMonth(date).get('date'); i += 1) {\n      stateTransaction.calendarDates.push({\n        date: Moment(lastDateOfLastWeekOfTheMonth(date)).startOf('date').set('date', i).toDate()\n      });\n    }\n  };\n\n  const setCalendar = (date: Date) => {\n    if (firstDateOfTheMonth(date).get('day') !== 1) {\n      setFirstWeek(date);\n    }\n\n    for (let i = 1; i <= lastDateOfTheMonth(date).get('date'); i += 1) {\n      stateTransaction.calendarDates.push({\n        date: Moment(firstDateOfTheMonth(date)).set('date', i).toDate()\n      });\n    }\n\n    if (lastDateOfTheMonth(date).get('day') !== 0) {\n      setLastWeek(date);\n    }\n  };\n\n  useEffect(() => {\n    setCalendar(stateTransaction.date);\n    getTransactions(stateTransaction.date);\n  }, [stateTransaction.date]);\n\n  return (\n    <div className=\"wrapper\">\n      <NavBarMenu />\n      <Calendar\n        handleOpenInfoModal={handleOpenInfoModal}\n        transactions={transactions}\n        calendarDates={stateTransaction.calendarDates}\n        date={stateTransaction.date}\n      />\n      <InfoModal\n        handleDelete={handleDelete}\n        selectedTransaction={selectedTransaction}\n        handleNextDay={handleNextDay}\n        isInfoTransactionOpen={isInfoTransactionOpen}\n        handlePreviousDay={handlePreviousDay}\n        handleOpenInfoModal={handleOpenInfoModal}\n        handleOpenTransaction={handleOpenTransaction}\n        handleOpenEdit={handleOpenEdit}\n      />\n      <AddTransactionButton />\n      {/* <AddTransactionModal\n        isEditTransactionOpen={isEditTransactionOpen}\n        errors={errors}\n        transactionEvent={transactionEvent}\n        handleSave={handleSave}\n        handleOpenEdit={handleOpenEdit}\n        handleInputChange={handleInput}\n        isAddTransactionOpen={isAddTransactionOpen}\n        handleOpenTransaction={handleOpenTransaction}\n        handleDelete={handleDelete}\n      /> */}\n    </div>\n  );\n};\n\nexport default MonthlyContainer;\n","/home/niksan/Desktop/Projects/budget-tracker/src/modules/export/ExportContainer.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/layout/header/Header.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/layout/addTranasctionButton/AddTransactionButton.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/modules/login/actionTypes.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/modules/stats/dailyContainer/DailyContainer.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/modules/stats/weeklyContainer/WeeklyContainer.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/modules/stats/yearlyContainer/YearlyContainer.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/modules/stats/monthlyContainer/MonthlyContainer.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/modules/transaction/reducers/transactionReducer.tsx",["303","304","305"],"import Moment from 'moment';\nimport {ActionTypes} from '../actionTypes';\nimport {TransactionEvent} from '../../../models/Transaction';\n\nexport interface State {\n  date: Date;\n  transactionEvent: TransactionEvent;\n}\nconst initialState = {\n  date: Moment().toDate(),\n  calendarDates: [],\n\n  transactionEvent: {\n    _id: '',\n    type: 'income',\n    date: '',\n    account: '',\n    from: '',\n    category: '',\n    fees: '0',\n    transferId: '',\n    to: '',\n    amount: '0',\n    note: '',\n    description: '',\n    transactionId: ''\n  }\n};\nexport default (state = initialState, action: any) => {\n  switch (action.type) {\n    case ActionTypes.HANDLE_NEXT_MONTH: {\n      const nextMonth = Moment(state.date).add(1, 'month');\n      return {\n        ...state,\n        calendarDates: [],\n        date: nextMonth\n      };\n    }\n\n    case ActionTypes.HANDLE_PREVIOUS_MONTH: {\n      const previousMonth = Moment(state.date).add(-1, 'month');\n      return {\n        ...state,\n        calendarDates: [],\n        date: previousMonth\n      };\n    }\n\n    case ActionTypes.HANDLE_NEXT_YEAR: {\n      const nextYear = Moment(state.date).add(1, 'year').toDate();\n\n      return {\n        ...state,\n        date: nextYear\n      };\n    }\n\n    case ActionTypes.HANDLE_PREVIOUS_YEAR: {\n      const previousYear = Moment(state.date).add(-1, 'year');\n      return {\n        ...state,\n        date: previousYear\n      };\n    }\n\n    case ActionTypes.HANDLE_INPUT:\n      if (action.payload.name === 'type') {\n        return {\n          ...state,\n          transactionEvent: {\n            ...state.transactionEvent,\n            [action.payload.name]: action.payload.value,\n            category: '',\n            to: ''\n          }\n        };\n      }\n      return {\n        ...state,\n        transactionEvent: {\n          ...state.transactionEvent,\n          [action.payload.name]: action.payload.value\n        }\n      };\n\n    case ActionTypes.SET_TRANSACTION:\n      return {\n        ...state,\n        transactionEvent: action.payload\n      };\n    case ActionTypes.SET_DATE:\n      return {\n        ...state,\n        date: action.payload\n      };\n    default:\n      return state;\n  }\n};\n","/home/niksan/Desktop/Projects/budget-tracker/src/helpers/Validation.tsx",["306"],"import React from 'react';\nimport AddTransactionStyle from '../modules/transaction/components/addTransactionModal/AddTransactionStyle.module.css';\nimport {TransactionEvent} from '../models/Transaction';\nimport {Error} from '../models/Error';\nimport {TransactionTypes, TransactionPage} from './Variables';\nimport {UserRegister} from '../models/User';\n\nexport const validateTransaction = (value: TransactionEvent): Error => {\n  const errors: Error = {\n    account: '',\n    from: '',\n    category: '',\n    to: '',\n    amount: '',\n    fees: ''\n  };\n\n  if (!value.account && value.type !== TransactionPage.Transaction) {\n    errors.account = 'Please select an account';\n  }\n\n  if (value.type === TransactionTypes.Transfer && !value.from) {\n    errors.from = 'Please select from';\n  }\n  if (!value.category && value.type !== TransactionTypes.Transfer) {\n    errors.category = 'Please select a category';\n  }\n  if (value.type === TransactionTypes.Transfer && !value.to) {\n    errors.to = 'Please select to';\n  }\n  if (!value.amount) {\n    errors.amount = 'Please add an amount';\n  }\n\n  if (parseFloat(value.fees!) > parseFloat(value.amount)) {\n    errors.fees = \"Fees can't be greater then amount\";\n  }\n  return errors;\n};\n\nexport const validateLogin = (\n  user: UserRegister,\n  isLogin: boolean\n): {\n  email: string;\n  password: string;\n  confirmPassword: string;\n} => {\n  const isValidEmail = RegExp(\n    \"[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\"\n  );\n  const errors = {\n    email: '',\n    password: '',\n    confirmPassword: ''\n  };\n  if (!isValidEmail.test(user.email)) {\n    errors.email = 'Please enter a valid email.';\n  }\n  if (user.password !== user.confirmPassword && !isLogin) {\n    errors.confirmPassword = 'The password does not match. ';\n  }\n  if (!user.password.match(/^[0-9a-zA-Z]+$/) || user.password.length > 20 || user.password.length < 6) {\n    errors.password = 'Please enter 6-20 characters [A-Z, a-z, 0-9 only].';\n  }\n  return errors;\n};\n\nexport const errorMsg = (error: string): JSX.Element => {\n  return <>{error && <div className={AddTransactionStyle.error_msg}>{error}</div>}</>;\n};\n","/home/niksan/Desktop/Projects/budget-tracker/src/helpers/Variables.tsx",["307","308"],"import Moment from 'moment';\nimport {TransactionEvent} from '../models/Transaction';\n\nexport enum DaysOfWeek {\n  Monday = 'M',\n  Thuesday = 'T',\n  Wednesday = 'W',\n  Thursday = 'Th',\n  Friday = 'F',\n  Saturday = 'Sa',\n  Sunday = 'Su'\n}\n\nexport enum TransactionTypes {\n  Transfer = 'transfer',\n  Income = 'income',\n  Expense = 'expense',\n  Currency = 'Bg'\n}\nexport enum TransactionPage {\n  Transaction = 'transaction',\n  Stats = 'stats',\n  Export = 'export',\n  Accounts = 'accounts'\n}\n\nexport enum UnitOfTime {\n  Date = 'date',\n  Week = 'week',\n  Month = 'month',\n  Year = 'year'\n}\n\nexport const firstDateOfTheMonth = (date: Date): Moment.Moment => Moment(date).startOf('month');\n\nexport const lastDateOfTheMonth = (date: Date): Moment.Moment => Moment(date).endOf('month');\n\nexport const firstDateOfFirstWeekOfTheMonth = (date: Date): Moment.Moment =>\n  firstDateOfTheMonth(date).startOf('isoWeek');\n\nexport const lastDateOfFirstWeekOfTheMonth = (date: Date): Moment.Moment => firstDateOfTheMonth(date).endOf('isoWeek');\n\nexport const firstDateOfLastWeekOfTheMonth = (date: Date): Moment.Moment => lastDateOfTheMonth(date).startOf('isoWeek');\n\nexport const lastDateOfLastWeekOfTheMonth = (date: Date): Moment.Moment =>\n  lastDateOfTheMonth(date).startOf('day').endOf('isoWeek');\n\nexport const isTheSameDate = (calendarDate: Date, transactionDate: Date): boolean =>\n  Moment(calendarDate).diff(transactionDate, 'day') === 0;\n\nexport const isTypeTransfer = (type: string): boolean => type.toLowerCase() === TransactionTypes.Transfer;\n\nexport const isTransactionContainer = (pathname: string): boolean => pathname.includes(TransactionPage.Transaction);\n\nexport const isSelectedTitle = (pathname: string, path: string): boolean =>\n  pathname === `/transaction/${path}` || pathname === `/stats/${path}`;\n\nexport const isTransactionTypeIncome = (type: string, amount: number): string =>\n  type === TransactionTypes.Income ? (amount / 100).toFixed(2) : '';\n\nexport const isTransactionTypeExpense = (type: string, amount: number): string =>\n  type === TransactionTypes.Expense || type === TransactionTypes.Transfer ? (amount / 100).toFixed(2) : '';\n\nexport const headerTitle = (path: string): string => {\n  switch (true) {\n    case path.includes('/transaction'):\n      return TransactionPage.Transaction.toLocaleUpperCase();\n    case path.includes('/stats'):\n      return TransactionPage.Stats.toLocaleUpperCase();\n    case path.includes('/export'):\n      return TransactionPage.Export.toLocaleUpperCase();\n    case path.includes('/accounts'):\n      return TransactionPage.Accounts.toLocaleUpperCase();\n    default:\n      return '';\n  }\n};\n\nexport const getTransaction = (transactionEvent: TransactionEvent) => {\n  const {type, transferId, date, account, category, from, fees, to, amount, note, description} = transactionEvent;\n  return {\n    events: [\n      {\n        type: type.toLowerCase(),\n        currency: TransactionTypes.Currency,\n        transferId,\n        date: Moment(date),\n        account: isTypeTransfer(type) ? '' : account,\n        category: isTypeTransfer(type) ? '' : category,\n        from: isTypeTransfer(type) ? from : '',\n        fees: parseFloat(fees!) * 100,\n        to: isTypeTransfer(type) ? to : '',\n        amount: parseFloat(amount) * 100,\n        note,\n        description\n      }\n    ],\n    createdAt: Moment(transactionEvent.date).startOf('date')\n  };\n};\n","/home/niksan/Desktop/Projects/budget-tracker/src/modules/login/components/RegistrationForm.tsx",["309"],"import React from 'react';\nimport LoginContainerStyle from '../LoginContainerStyle.module.css';\n\ntype Props = {\n  Submit: () => void;\n  errors: {\n    email: string;\n    password: string;\n    confirmPassword: string;\n  };\n  handleInput: (event: any) => void;\n};\n\nconst RegistrationForm: React.FC<Props> = ({Submit, errors, handleInput}) => {\n  return (\n    <div className={LoginContainerStyle.login_content}>\n      <label htmlFor=\"Email\" className={LoginContainerStyle.login_label}>\n        Email\n        <input className={LoginContainerStyle.input} name=\"email\" onChange={handleInput} />\n      </label>\n      {errors.email && (\n        <div className={LoginContainerStyle.error_msg}>\n          <span>{errors.email}</span>\n        </div>\n      )}\n      <label htmlFor=\"Password\" className={LoginContainerStyle.login_label}>\n        Password\n        <input type=\"password\" className={LoginContainerStyle.input} name=\"password\" onChange={handleInput} />\n      </label>\n      {errors.password && (\n        <div className={LoginContainerStyle.error_msg}>\n          <span>{errors.password}</span>\n        </div>\n      )}\n      <label htmlFor=\"Confirm password\" className={LoginContainerStyle.login_label}>\n        Confirm Password\n        <input type=\"password\" className={LoginContainerStyle.input} name=\"confirmPassword\" onChange={handleInput} />\n      </label>\n      {errors.confirmPassword && (\n        <div className={LoginContainerStyle.error_msg}>\n          <span>{errors.confirmPassword}</span>\n        </div>\n      )}\n      <button type=\"button\" className={LoginContainerStyle.login_button} onClick={Submit}>\n        Register\n      </button>\n    </div>\n  );\n};\n\nexport default RegistrationForm;\n","/home/niksan/Desktop/Projects/budget-tracker/src/modules/login/components/LoginForm.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/modules/login/components/SocialNetworks.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/layout/navBar/NavBar.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/modules/transaction/weeklyContainer/components/WeeklyTableRow.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/modules/transaction/yearlyContainer/components/YearlyTableRow.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/modules/transaction/actions/transactionActions.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/modules/transaction/monthlyContainer/Calendar/Calendar.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/modules/transaction/actionTypes.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/layout/sideBar/SideBar.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/layout/accountMenu/AccountMenu.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/modules/transaction/components/InfoTableHead/InfoTableHead.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/AddTransactionModal.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/modules/transaction/components/infoModal/InfoModal.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/modules/transaction/dailyContainer/components/dailyTableRow/DailyTableRow.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/modules/transaction/dailyContainer/components/dailyTableHeader/DailyTableHeader.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/modules/stats/components/StatsForm.tsx",["310","311"],"import React from 'react';\nimport {PieChart} from 'react-minimal-pie-chart';\nimport './StatsFormStyle.css';\n\ntype Props = {\n  stats: any;\n  isIncome: boolean;\n};\nconst StatsForm: React.FC<Props> = ({stats, isIncome}) => {\n  return (\n    <div className=\"form_wrapper\">\n      <div className=\"title\">{isIncome ? 'Income' : 'Expense'}</div>\n      <div className=\"pie_wrapper\">\n        <PieChart\n          labelStyle={() => ({\n            fontSize: '8px',\n            fontFamily: 'sans-serif'\n          })}\n          radius={42}\n          labelPosition={112}\n          animate\n          label={({dataEntry}) => dataEntry.category}\n          data={stats}\n        />\n      </div>\n      <div>\n        <table className=\"content_table\">\n          <tbody>\n            {stats.map((stat: any) => (\n              <tr>\n                <td className=\"percent_content\">\n                  <div className=\"percent\" style={{backgroundColor: stat.color}}>\n                    63%\n                  </div>\n                </td>\n                <td>{stat.category.charAt(0).toUpperCase() + stat.category.slice(1)}</td>\n                <td className=\"amount\">{(stat.value / 100).toFixed(2)}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default StatsForm;\n","/home/niksan/Desktop/Projects/budget-tracker/src/modules/transaction/monthlyContainer/Calendar/CalendarDate.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/modules/transaction/components/infoModal/components/TableRow.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/Form.tsx",["312"],"import React, {forwardRef, useState, useCallback} from 'react';\nimport Moment from 'moment';\nimport DatePicker from 'react-datepicker';\nimport styles from '../AddTransactionStyle.module.css';\nimport {TransactionEvent} from '../../../../../models/Transaction';\nimport {HandleInput} from '../../../../../models/Function';\nimport {Error} from '../../../../../models/Error';\nimport {TransactionTypes} from '../../../../../helpers/Variables';\nimport InputTitles from './components/InputTitles';\nimport SelectInput from './components/SelectInputs';\nimport FeesInput from './components/FeesInput';\nimport AmountInput from './components/AmountInput';\nimport 'react-datepicker/dist/react-datepicker.css';\n\ntype Props = {\n  transaction: TransactionEvent;\n  errors: Error;\n  handleInputChange: (event: HandleInput) => void;\n};\nconst Form: React.FC<Props> = ({transaction, handleInputChange, errors}) => {\n  const [isFeesOpen, setIsFeesOpen] = useState(false);\n  const accounts = ['', 'cash', 'card', 'accounts'];\n  const categoriesIncome = [' ', 'salary', 'bonus', 'petty cash', 'other'];\n  const categoriesExpense = ['', 'food', 'culture', 'socialLife', 'selfDevelopment', 'transportation', 'other'];\n\n  const selectOptions = (transactionType: string) => {\n    if (transactionType === TransactionTypes.Transfer) {\n      return accounts;\n    }\n    if (transactionType === TransactionTypes.Income) {\n      return categoriesIncome;\n    }\n    return categoriesExpense;\n  };\n  const handleSetDate = useCallback(\n    (date) => {\n      handleInputChange({\n        target: {value: Moment(date).toDate(), name: 'date'}\n      });\n    },\n    [handleInputChange]\n  );\n  const ExampleCustomInput: React.FC<any> = forwardRef(({value, onClick}) => (\n    <div className={styles.input_container}>\n      <input className={styles.input} onClick={onClick} value={value} />\n    </div>\n  ));\n  return (\n    <div className={styles.content}>\n      <InputTitles transaction={transaction} isFeesOpen={isFeesOpen} />\n      <div className={styles.content_inputs}>\n        <DatePicker\n          selected={Moment(transaction.date).toDate()}\n          dateFormat=\" dd / MMMM / yyyy  h:mm aa\"\n          onChange={handleSetDate}\n          showTimeSelect\n          timeFormat=\"HH:mm\"\n          timeIntervals={15}\n          timeCaption=\"time\"\n          locale=\"pt-BR\"\n          customInput={<ExampleCustomInput />}\n        />\n\n        <SelectInput\n          selectValue={transaction.type === TransactionTypes.Transfer ? transaction.from : transaction.account}\n          transactionType={transaction.type === TransactionTypes.Transfer ? 'from' : 'account'}\n          options={accounts}\n          handleInputChange={handleInputChange}\n          error={transaction.type === TransactionTypes.Transfer ? errors.from : errors.account}\n        />\n        <SelectInput\n          selectValue={transaction.type === TransactionTypes.Transfer ? transaction.to : transaction.category}\n          transactionType={transaction.type === TransactionTypes.Transfer ? 'to' : 'category'}\n          options={selectOptions(transaction.type)}\n          handleInputChange={handleInputChange}\n          error={transaction.type === TransactionTypes.Transfer ? errors.to : errors.category}\n        />\n        <AmountInput\n          transaction={transaction}\n          handleInputChange={handleInputChange}\n          setIsFeesOpen={setIsFeesOpen}\n          isFeesOpen={isFeesOpen}\n          error={errors.amount}\n        />\n\n        <FeesInput\n          transaction={transaction}\n          handleInputChange={handleInputChange}\n          setIsFeesOpen={setIsFeesOpen}\n          isFeesOpen={isFeesOpen}\n        />\n\n        <input type=\"text\" className={styles.input} name=\"note\" value={transaction.note} onChange={handleInputChange} />\n      </div>\n    </div>\n  );\n};\n\nexport default Form;\n","/home/niksan/Desktop/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/components/SelectInputs.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/components/FeesInput.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/components/InputTitles.tsx",[],"/home/niksan/Desktop/Projects/budget-tracker/src/modules/transaction/components/addTransactionModal/form/components/AmountInput.tsx",[],{"ruleId":"313","replacedBy":"314"},{"ruleId":"315","replacedBy":"316"},{"ruleId":"317","replacedBy":"318"},{"ruleId":"319","replacedBy":"320"},{"ruleId":"321","replacedBy":"322"},{"ruleId":"323","replacedBy":"324"},{"ruleId":"325","severity":1,"message":"326","line":6,"column":22,"nodeType":"327","messageId":"328","endLine":6,"endColumn":37},{"ruleId":"325","severity":1,"message":"329","line":6,"column":23,"nodeType":"330","messageId":"331","endLine":6,"endColumn":33},{"ruleId":"332","severity":1,"message":"333","line":6,"column":30,"nodeType":"334","messageId":"335","endLine":6,"endColumn":33,"suggestions":"336"},{"ruleId":"325","severity":1,"message":"337","line":12,"column":14,"nodeType":"330","messageId":"331","endLine":12,"endColumn":27},{"ruleId":"332","severity":1,"message":"333","line":12,"column":24,"nodeType":"334","messageId":"335","endLine":12,"endColumn":27,"suggestions":"338"},{"ruleId":"339","severity":1,"message":"340","line":19,"column":5,"nodeType":"341","messageId":"342","endLine":19,"endColumn":16},{"ruleId":"325","severity":1,"message":"343","line":10,"column":3,"nodeType":"330","messageId":"331","endLine":10,"endColumn":12},{"ruleId":"332","severity":1,"message":"333","line":10,"column":9,"nodeType":"334","messageId":"335","endLine":10,"endColumn":12,"suggestions":"344"},{"ruleId":"332","severity":1,"message":"333","line":12,"column":19,"nodeType":"334","messageId":"335","endLine":12,"endColumn":22,"suggestions":"345"},{"ruleId":"332","severity":1,"message":"333","line":14,"column":14,"nodeType":"334","messageId":"335","endLine":14,"endColumn":17,"suggestions":"346"},{"ruleId":"332","severity":1,"message":"333","line":19,"column":18,"nodeType":"334","messageId":"335","endLine":19,"endColumn":21,"suggestions":"347"},{"ruleId":"332","severity":1,"message":"333","line":34,"column":76,"nodeType":"334","messageId":"335","endLine":34,"endColumn":79,"suggestions":"348"},{"ruleId":"332","severity":1,"message":"333","line":37,"column":18,"nodeType":"334","messageId":"335","endLine":37,"endColumn":21,"suggestions":"349"},{"ruleId":"339","severity":1,"message":"340","line":46,"column":5,"nodeType":"341","messageId":"342","endLine":46,"endColumn":18},{"ruleId":"325","severity":1,"message":"343","line":51,"column":41,"nodeType":"330","messageId":"331","endLine":51,"endColumn":50},{"ruleId":"332","severity":1,"message":"333","line":51,"column":47,"nodeType":"334","messageId":"335","endLine":51,"endColumn":50,"suggestions":"350"},{"ruleId":"332","severity":1,"message":"333","line":51,"column":61,"nodeType":"334","messageId":"335","endLine":51,"endColumn":64,"suggestions":"351"},{"ruleId":"332","severity":1,"message":"333","line":54,"column":18,"nodeType":"334","messageId":"335","endLine":54,"endColumn":21,"suggestions":"352"},{"ruleId":"339","severity":1,"message":"340","line":64,"column":5,"nodeType":"341","messageId":"342","endLine":64,"endColumn":18},{"ruleId":"325","severity":1,"message":"343","line":71,"column":3,"nodeType":"330","messageId":"331","endLine":71,"endColumn":12},{"ruleId":"332","severity":1,"message":"333","line":71,"column":9,"nodeType":"334","messageId":"335","endLine":71,"endColumn":12,"suggestions":"353"},{"ruleId":"332","severity":1,"message":"333","line":73,"column":19,"nodeType":"334","messageId":"335","endLine":73,"endColumn":22,"suggestions":"354"},{"ruleId":"332","severity":1,"message":"333","line":75,"column":14,"nodeType":"334","messageId":"335","endLine":75,"endColumn":17,"suggestions":"355"},{"ruleId":"332","severity":1,"message":"333","line":80,"column":18,"nodeType":"334","messageId":"335","endLine":80,"endColumn":21,"suggestions":"356"},{"ruleId":"332","severity":1,"message":"333","line":98,"column":19,"nodeType":"334","messageId":"335","endLine":98,"endColumn":22,"suggestions":"357"},{"ruleId":"332","severity":1,"message":"333","line":100,"column":14,"nodeType":"334","messageId":"335","endLine":100,"endColumn":17,"suggestions":"358"},{"ruleId":"332","severity":1,"message":"333","line":105,"column":18,"nodeType":"334","messageId":"335","endLine":105,"endColumn":21,"suggestions":"359"},{"ruleId":"332","severity":1,"message":"333","line":119,"column":51,"nodeType":"334","messageId":"335","endLine":119,"endColumn":54,"suggestions":"360"},{"ruleId":"332","severity":1,"message":"333","line":122,"column":18,"nodeType":"334","messageId":"335","endLine":122,"endColumn":21,"suggestions":"361"},{"ruleId":"339","severity":1,"message":"340","line":132,"column":5,"nodeType":"341","messageId":"342","endLine":132,"endColumn":18},{"ruleId":"325","severity":1,"message":"326","line":16,"column":16,"nodeType":"327","messageId":"328","endLine":16,"endColumn":54},{"ruleId":"325","severity":1,"message":"362","line":16,"column":39,"nodeType":"330","messageId":"331","endLine":16,"endColumn":50},{"ruleId":"332","severity":1,"message":"333","line":16,"column":47,"nodeType":"334","messageId":"335","endLine":16,"endColumn":50,"suggestions":"363"},{"ruleId":"364","severity":1,"message":"365","line":73,"column":6,"nodeType":"366","endLine":73,"endColumn":29,"suggestions":"367"},{"ruleId":"364","severity":1,"message":"368","line":76,"column":6,"nodeType":"366","endLine":76,"endColumn":29,"suggestions":"369"},{"ruleId":"370","severity":1,"message":"371","line":28,"column":6,"nodeType":"330","messageId":"372","endLine":28,"endColumn":11},{"ruleId":"364","severity":1,"message":"373","line":292,"column":6,"nodeType":"366","endLine":292,"endColumn":29,"suggestions":"374"},{"ruleId":"325","severity":1,"message":"326","line":29,"column":16,"nodeType":"327","messageId":"328","endLine":29,"endColumn":54},{"ruleId":"325","severity":1,"message":"362","line":29,"column":39,"nodeType":"330","messageId":"331","endLine":29,"endColumn":50},{"ruleId":"332","severity":1,"message":"333","line":29,"column":47,"nodeType":"334","messageId":"335","endLine":29,"endColumn":50,"suggestions":"375"},{"ruleId":"376","severity":1,"message":"377","line":35,"column":18,"nodeType":"378","messageId":"379","endLine":35,"endColumn":29},{"ruleId":"325","severity":1,"message":"326","line":79,"column":31,"nodeType":"327","messageId":"328","endLine":79,"endColumn":70},{"ruleId":"376","severity":1,"message":"377","line":91,"column":26,"nodeType":"378","messageId":"379","endLine":91,"endColumn":31},{"ruleId":"332","severity":1,"message":"333","line":11,"column":24,"nodeType":"334","messageId":"335","endLine":11,"endColumn":27,"suggestions":"380"},{"ruleId":"332","severity":1,"message":"333","line":6,"column":10,"nodeType":"334","messageId":"335","endLine":6,"endColumn":13,"suggestions":"381"},{"ruleId":"332","severity":1,"message":"333","line":29,"column":31,"nodeType":"334","messageId":"335","endLine":29,"endColumn":34,"suggestions":"382"},{"ruleId":"332","severity":1,"message":"333","line":43,"column":38,"nodeType":"334","messageId":"335","endLine":43,"endColumn":41,"suggestions":"383"},"jest/no-try-expect",["384"],"lines-around-directive",["385"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","Argument 'props' should be typed with a non-any type.","Identifier","anyTypedArg","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["386","387"],"Argument 'dispatch' should be typed with a non-any type.",["388","389"],"no-console","Unexpected console statement.","MemberExpression","unexpected","Argument 'data' should be typed with a non-any type.",["390","391"],["392","393"],["394","395"],["396","397"],["398","399"],["400","401"],["402","403"],["404","405"],["406","407"],["408","409"],["410","411"],["412","413"],["414","415"],["416","417"],["418","419"],["420","421"],["422","423"],["424","425"],"Argument 'action' should be typed with a non-any type.",["426","427"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getWeeks'. Either include it or remove the dependency array.","ArrayExpression",["428"],"React Hook useEffect has a missing dependency: 'getYear'. Either include it or remove the dependency array.",["429"],"@typescript-eslint/no-unused-vars","'State' is defined but never used.","unusedVar","React Hook useEffect has missing dependencies: 'getTransactions' and 'setCalendar'. Either include them or remove the dependency array.",["430"],["431","432"],"@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull",["433","434"],["435","436"],["437","438"],["439","440"],"no-conditional-expect","padding-line-between-statements",{"messageId":"441","fix":"442","desc":"443"},{"messageId":"444","fix":"445","desc":"446"},{"messageId":"441","fix":"447","desc":"443"},{"messageId":"444","fix":"448","desc":"446"},{"messageId":"441","fix":"449","desc":"443"},{"messageId":"444","fix":"450","desc":"446"},{"messageId":"441","fix":"451","desc":"443"},{"messageId":"444","fix":"452","desc":"446"},{"messageId":"441","fix":"453","desc":"443"},{"messageId":"444","fix":"454","desc":"446"},{"messageId":"441","fix":"455","desc":"443"},{"messageId":"444","fix":"456","desc":"446"},{"messageId":"441","fix":"457","desc":"443"},{"messageId":"444","fix":"458","desc":"446"},{"messageId":"441","fix":"459","desc":"443"},{"messageId":"444","fix":"460","desc":"446"},{"messageId":"441","fix":"461","desc":"443"},{"messageId":"444","fix":"462","desc":"446"},{"messageId":"441","fix":"463","desc":"443"},{"messageId":"444","fix":"464","desc":"446"},{"messageId":"441","fix":"465","desc":"443"},{"messageId":"444","fix":"466","desc":"446"},{"messageId":"441","fix":"467","desc":"443"},{"messageId":"444","fix":"468","desc":"446"},{"messageId":"441","fix":"469","desc":"443"},{"messageId":"444","fix":"470","desc":"446"},{"messageId":"441","fix":"471","desc":"443"},{"messageId":"444","fix":"472","desc":"446"},{"messageId":"441","fix":"473","desc":"443"},{"messageId":"444","fix":"474","desc":"446"},{"messageId":"441","fix":"475","desc":"443"},{"messageId":"444","fix":"476","desc":"446"},{"messageId":"441","fix":"477","desc":"443"},{"messageId":"444","fix":"478","desc":"446"},{"messageId":"441","fix":"479","desc":"443"},{"messageId":"444","fix":"480","desc":"446"},{"messageId":"441","fix":"481","desc":"443"},{"messageId":"444","fix":"482","desc":"446"},{"messageId":"441","fix":"483","desc":"443"},{"messageId":"444","fix":"484","desc":"446"},{"messageId":"441","fix":"485","desc":"443"},{"messageId":"444","fix":"486","desc":"446"},{"desc":"487","fix":"488"},{"desc":"489","fix":"490"},{"desc":"491","fix":"492"},{"messageId":"441","fix":"493","desc":"443"},{"messageId":"444","fix":"494","desc":"446"},{"messageId":"441","fix":"495","desc":"443"},{"messageId":"444","fix":"496","desc":"446"},{"messageId":"441","fix":"497","desc":"443"},{"messageId":"444","fix":"498","desc":"446"},{"messageId":"441","fix":"499","desc":"443"},{"messageId":"444","fix":"500","desc":"446"},{"messageId":"441","fix":"501","desc":"443"},{"messageId":"444","fix":"502","desc":"446"},"suggestUnknown",{"range":"503","text":"504"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"503","text":"505"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"506","text":"504"},{"range":"506","text":"505"},{"range":"507","text":"504"},{"range":"507","text":"505"},{"range":"508","text":"504"},{"range":"508","text":"505"},{"range":"509","text":"504"},{"range":"509","text":"505"},{"range":"510","text":"504"},{"range":"510","text":"505"},{"range":"511","text":"504"},{"range":"511","text":"505"},{"range":"512","text":"504"},{"range":"512","text":"505"},{"range":"513","text":"504"},{"range":"513","text":"505"},{"range":"514","text":"504"},{"range":"514","text":"505"},{"range":"515","text":"504"},{"range":"515","text":"505"},{"range":"516","text":"504"},{"range":"516","text":"505"},{"range":"517","text":"504"},{"range":"517","text":"505"},{"range":"518","text":"504"},{"range":"518","text":"505"},{"range":"519","text":"504"},{"range":"519","text":"505"},{"range":"520","text":"504"},{"range":"520","text":"505"},{"range":"521","text":"504"},{"range":"521","text":"505"},{"range":"522","text":"504"},{"range":"522","text":"505"},{"range":"523","text":"504"},{"range":"523","text":"505"},{"range":"524","text":"504"},{"range":"524","text":"505"},{"range":"525","text":"504"},{"range":"525","text":"505"},"Update the dependencies array to be: [getWeeks, stateTransaction.date]",{"range":"526","text":"527"},"Update the dependencies array to be: [getYear, stateTransaction.date]",{"range":"528","text":"529"},"Update the dependencies array to be: [getTransactions, setCalendar, stateTransaction.date]",{"range":"530","text":"531"},{"range":"532","text":"504"},{"range":"532","text":"505"},{"range":"533","text":"504"},{"range":"533","text":"505"},{"range":"534","text":"504"},{"range":"534","text":"505"},{"range":"535","text":"504"},{"range":"535","text":"505"},{"range":"536","text":"504"},{"range":"536","text":"505"},[267,270],"unknown","never",[242,245],[198,201],[232,235],[256,259],[350,353],[625,628],[737,740],[990,993],[1004,1007],[1101,1104],[1415,1418],[1449,1452],[1473,1476],[1605,1608],[1923,1926],[1947,1950],[2081,2084],[2333,2336],[2412,2415],[293,296],[2229,2252],"[getWeeks, stateTransaction.date]",[2865,2888],"[getYear, stateTransaction.date]",[9231,9254],"[getTransactions, setCalendar, stateTransaction.date]",[579,582],[244,247],[133,136],[775,778],[1683,1686]]